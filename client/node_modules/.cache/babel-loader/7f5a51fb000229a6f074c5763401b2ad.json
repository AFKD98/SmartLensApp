{"ast":null,"code":"import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentWatch from '../runtime-helpers/react-component-watch.js';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7FabButton extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onClick']);\n    })();\n  }\n\n  onClick(event) {\n    this.dispatchEvent('click', event);\n  }\n\n  render() {\n    const props = this.props;\n    const {\n      className,\n      id,\n      style,\n      fabClose,\n      label,\n      target\n    } = props;\n    const classes = Utils.classNames(className, {\n      'fab-close': fabClose,\n      'fab-label-button': label\n    }, Mixins.colorClasses(props));\n    let labelEl;\n\n    if (label) {\n      labelEl = React.createElement('span', {\n        className: 'fab-label'\n      }, label);\n    }\n\n    return React.createElement('a', {\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      id: id,\n      style: style,\n      target: target,\n      className: classes\n    }, this.slots['default'], labelEl);\n  }\n\n  componentWillUnmount() {\n    const self = this;\n    self.refs.el.removeEventListener('click', self.onClick);\n\n    if (self.f7Tooltip && self.f7Tooltip.destroy) {\n      self.f7Tooltip.destroy();\n      self.f7Tooltip = null;\n      delete self.f7Tooltip;\n    }\n  }\n\n  componentDidMount() {\n    const self = this;\n    self.refs.el.addEventListener('click', self.onClick);\n    const {\n      tooltip,\n      tooltipTrigger\n    } = self.props;\n    if (!tooltip) return;\n    self.$f7ready(f7 => {\n      self.f7Tooltip = f7.tooltip.create({\n        targetEl: self.refs.el,\n        text: tooltip,\n        trigger: tooltipTrigger\n      });\n    });\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n  componentDidUpdate(prevProps, prevState) {\n    __reactComponentWatch(this, 'props.tooltip', prevProps, prevState, newText => {\n      const self = this;\n\n      if (!newText && self.f7Tooltip) {\n        self.f7Tooltip.destroy();\n        self.f7Tooltip = null;\n        delete self.f7Tooltip;\n        return;\n      }\n\n      if (newText && !self.f7Tooltip && self.$f7) {\n        self.f7Tooltip = self.$f7.tooltip.create({\n          targetEl: self.refs.el,\n          text: newText,\n          trigger: self.props.tooltipTrigger\n        });\n        return;\n      }\n\n      if (!newText || !self.f7Tooltip) return;\n      self.f7Tooltip.setText(newText);\n    });\n  }\n\n}\n\n__reactComponentSetProps(F7FabButton, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  fabClose: Boolean,\n  label: String,\n  target: String,\n  tooltip: String,\n  tooltipTrigger: String\n}, Mixins.colorProps));\n\nF7FabButton.displayName = 'f7-fab-button';\nexport default F7FabButton;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/components/fab-button.js"],"names":["React","Utils","Mixins","__reactComponentWatch","__reactComponentDispatchEvent","__reactComponentSlots","__reactComponentSetProps","F7FabButton","Component","constructor","props","context","__reactRefs","bindMethods","onClick","event","dispatchEvent","render","className","id","style","fabClose","label","target","classes","classNames","colorClasses","labelEl","createElement","ref","__reactNode","slots","componentWillUnmount","self","refs","el","removeEventListener","f7Tooltip","destroy","componentDidMount","addEventListener","tooltip","tooltipTrigger","$f7ready","f7","create","targetEl","text","trigger","events","args","componentDidUpdate","prevProps","prevState","newText","$f7","setText","Object","assign","String","Number","Boolean","colorProps","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentWatch from '../runtime-helpers/react-component-watch.js';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7FabButton extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onClick']);\n    })();\n  }\n\n  onClick(event) {\n    this.dispatchEvent('click', event);\n  }\n\n  render() {\n    const props = this.props;\n    const {\n      className,\n      id,\n      style,\n      fabClose,\n      label,\n      target\n    } = props;\n    const classes = Utils.classNames(className, {\n      'fab-close': fabClose,\n      'fab-label-button': label\n    }, Mixins.colorClasses(props));\n    let labelEl;\n\n    if (label) {\n      labelEl = React.createElement('span', {\n        className: 'fab-label'\n      }, label);\n    }\n\n    return React.createElement('a', {\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      id: id,\n      style: style,\n      target: target,\n      className: classes\n    }, this.slots['default'], labelEl);\n  }\n\n  componentWillUnmount() {\n    const self = this;\n    self.refs.el.removeEventListener('click', self.onClick);\n\n    if (self.f7Tooltip && self.f7Tooltip.destroy) {\n      self.f7Tooltip.destroy();\n      self.f7Tooltip = null;\n      delete self.f7Tooltip;\n    }\n  }\n\n  componentDidMount() {\n    const self = this;\n    self.refs.el.addEventListener('click', self.onClick);\n    const {\n      tooltip,\n      tooltipTrigger\n    } = self.props;\n    if (!tooltip) return;\n    self.$f7ready(f7 => {\n      self.f7Tooltip = f7.tooltip.create({\n        targetEl: self.refs.el,\n        text: tooltip,\n        trigger: tooltipTrigger\n      });\n    });\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n  componentDidUpdate(prevProps, prevState) {\n    __reactComponentWatch(this, 'props.tooltip', prevProps, prevState, newText => {\n      const self = this;\n\n      if (!newText && self.f7Tooltip) {\n        self.f7Tooltip.destroy();\n        self.f7Tooltip = null;\n        delete self.f7Tooltip;\n        return;\n      }\n\n      if (newText && !self.f7Tooltip && self.$f7) {\n        self.f7Tooltip = self.$f7.tooltip.create({\n          targetEl: self.refs.el,\n          text: newText,\n          trigger: self.props.tooltipTrigger\n        });\n        return;\n      }\n\n      if (!newText || !self.f7Tooltip) return;\n      self.f7Tooltip.setText(newText);\n    });\n  }\n\n}\n\n__reactComponentSetProps(F7FabButton, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  fabClose: Boolean,\n  label: String,\n  target: String,\n  tooltip: String,\n  tooltipTrigger: String\n}, Mixins.colorProps));\n\nF7FabButton.displayName = 'f7-fab-button';\nexport default F7FabButton;"]},"metadata":{},"sourceType":"module"}