{"ast":null,"code":"import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7Progressbar extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n  }\n\n  set(progress, speed) {\n    const self = this;\n    if (!self.$f7) return;\n    self.$f7.progressbar.set(self.refs.el, progress, speed);\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      progress,\n      id,\n      style,\n      infinite,\n      className\n    } = props;\n    const transformStyle = {\n      transform: progress ? `translate3d(${-100 + progress}%, 0, 0)` : '',\n      WebkitTransform: progress ? `translate3d(${-100 + progress}%, 0, 0)` : ''\n    };\n    const classes = Utils.classNames(className, 'progressbar', {\n      'progressbar-infinite': infinite\n    }, Mixins.colorClasses(props));\n    return React.createElement('span', {\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      id: id,\n      style: style,\n      className: classes,\n      'data-progress': progress\n    }, React.createElement('span', {\n      style: transformStyle\n    }));\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7Progressbar, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  progress: Number,\n  infinite: Boolean\n}, Mixins.colorProps));\n\nF7Progressbar.displayName = 'f7-progressbar';\nexport default F7Progressbar;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/components/progressbar.js"],"names":["React","Utils","Mixins","__reactComponentSetProps","F7Progressbar","Component","constructor","props","context","__reactRefs","set","progress","speed","self","$f7","progressbar","refs","el","render","id","style","infinite","className","transformStyle","transform","WebkitTransform","classes","classNames","colorClasses","createElement","ref","__reactNode","Object","assign","String","Number","Boolean","colorProps","displayName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,wBAAP,MAAqC,iDAArC;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACD;;AAEDC,EAAAA,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkB;AACnB,UAAMC,IAAI,GAAG,IAAb;AACA,QAAI,CAACA,IAAI,CAACC,GAAV,EAAe;AACfD,IAAAA,IAAI,CAACC,GAAL,CAASC,WAAT,CAAqBL,GAArB,CAAyBG,IAAI,CAACG,IAAL,CAAUC,EAAnC,EAAuCN,QAAvC,EAAiDC,KAAjD;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAML,IAAI,GAAG,IAAb;AACA,UAAMN,KAAK,GAAGM,IAAI,CAACN,KAAnB;AACA,UAAM;AACJI,MAAAA,QADI;AAEJQ,MAAAA,EAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA,QAJI;AAKJC,MAAAA;AALI,QAMFf,KANJ;AAOA,UAAMgB,cAAc,GAAG;AACrBC,MAAAA,SAAS,EAAEb,QAAQ,GAAI,eAAc,CAAC,GAAD,GAAOA,QAAS,UAAlC,GAA8C,EAD5C;AAErBc,MAAAA,eAAe,EAAEd,QAAQ,GAAI,eAAc,CAAC,GAAD,GAAOA,QAAS,UAAlC,GAA8C;AAFlD,KAAvB;AAIA,UAAMe,OAAO,GAAGzB,KAAK,CAAC0B,UAAN,CAAiBL,SAAjB,EAA4B,aAA5B,EAA2C;AACzD,8BAAwBD;AADiC,KAA3C,EAEbnB,MAAM,CAAC0B,YAAP,CAAoBrB,KAApB,CAFa,CAAhB;AAGA,WAAOP,KAAK,CAAC6B,aAAN,CAAoB,MAApB,EAA4B;AACjCC,MAAAA,GAAG,EAAEC,WAAW,IAAI;AAClB,aAAKtB,WAAL,CAAiB,IAAjB,IAAyBsB,WAAzB;AACD,OAHgC;AAIjCZ,MAAAA,EAAE,EAAEA,EAJ6B;AAKjCC,MAAAA,KAAK,EAAEA,KAL0B;AAMjCE,MAAAA,SAAS,EAAEI,OANsB;AAOjC,uBAAiBf;AAPgB,KAA5B,EAQJX,KAAK,CAAC6B,aAAN,CAAoB,MAApB,EAA4B;AAC7BT,MAAAA,KAAK,EAAEG;AADsB,KAA5B,CARI,CAAP;AAWD;;AAED,MAAIP,IAAJ,GAAW;AACT,WAAO,KAAKP,WAAZ;AACD;;AAED,MAAIO,IAAJ,CAASA,IAAT,EAAe,CAAE;;AA9CyB;;AAkD5Cb,wBAAwB,CAACC,aAAD,EAAgB4B,MAAM,CAACC,MAAP,CAAc;AACpDd,EAAAA,EAAE,EAAE,CAACe,MAAD,EAASC,MAAT,CADgD;AAEpDb,EAAAA,SAAS,EAAEY,MAFyC;AAGpDd,EAAAA,KAAK,EAAEY,MAH6C;AAIpDrB,EAAAA,QAAQ,EAAEwB,MAJ0C;AAKpDd,EAAAA,QAAQ,EAAEe;AAL0C,CAAd,EAMrClC,MAAM,CAACmC,UAN8B,CAAhB,CAAxB;;AAQAjC,aAAa,CAACkC,WAAd,GAA4B,gBAA5B;AACA,eAAelC,aAAf","sourcesContent":["import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7Progressbar extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n  }\n\n  set(progress, speed) {\n    const self = this;\n    if (!self.$f7) return;\n    self.$f7.progressbar.set(self.refs.el, progress, speed);\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      progress,\n      id,\n      style,\n      infinite,\n      className\n    } = props;\n    const transformStyle = {\n      transform: progress ? `translate3d(${-100 + progress}%, 0, 0)` : '',\n      WebkitTransform: progress ? `translate3d(${-100 + progress}%, 0, 0)` : ''\n    };\n    const classes = Utils.classNames(className, 'progressbar', {\n      'progressbar-infinite': infinite\n    }, Mixins.colorClasses(props));\n    return React.createElement('span', {\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      id: id,\n      style: style,\n      className: classes,\n      'data-progress': progress\n    }, React.createElement('span', {\n      style: transformStyle\n    }));\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7Progressbar, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  progress: Number,\n  infinite: Boolean\n}, Mixins.colorProps));\n\nF7Progressbar.displayName = 'f7-progressbar';\nexport default F7Progressbar;"]},"metadata":{},"sourceType":"module"}