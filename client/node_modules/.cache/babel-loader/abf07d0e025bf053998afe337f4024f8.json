{"ast":null,"code":"import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7MessagebarSheetImage extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onChange']);\n    })();\n  }\n\n  onChange(event) {\n    if (this.props.checked) this.dispatchEvent('checked', event);else this.dispatchEvent('unchecked', event);\n    this.dispatchEvent('change', event);\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      image,\n      checked,\n      id,\n      className,\n      style\n    } = props;\n    const classes = Utils.classNames(className, 'messagebar-sheet-image', 'checkbox', Mixins.colorClasses(props));\n    const styles = Utils.extend({\n      backgroundImage: image && `url(${image})`\n    }, style || {});\n    let inputEl;\n    {\n      inputEl = React.createElement('input', {\n        ref: __reactNode => {\n          this.__reactRefs['inputEl'] = __reactNode;\n        },\n        type: 'checkbox',\n        checked: checked,\n        onChange: self.onChange\n      });\n    }\n    return React.createElement('label', {\n      id: id,\n      className: classes,\n      style: styles\n    }, inputEl, React.createElement('i', {\n      className: 'icon icon-checkbox'\n    }), this.slots['default']);\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7MessagebarSheetImage, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  image: String,\n  checked: Boolean\n}, Mixins.colorProps));\n\nF7MessagebarSheetImage.displayName = 'f7-messagebar-sheet-image';\nexport default F7MessagebarSheetImage;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/components/messagebar-sheet-image.js"],"names":["React","Utils","Mixins","__reactComponentDispatchEvent","__reactComponentSlots","__reactComponentSetProps","F7MessagebarSheetImage","Component","constructor","props","context","__reactRefs","bindMethods","onChange","event","checked","dispatchEvent","render","self","image","id","className","style","classes","classNames","colorClasses","styles","extend","backgroundImage","inputEl","createElement","ref","__reactNode","type","slots","events","args","refs","Object","assign","String","Number","Boolean","colorProps","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7MessagebarSheetImage extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onChange']);\n    })();\n  }\n\n  onChange(event) {\n    if (this.props.checked) this.dispatchEvent('checked', event);else this.dispatchEvent('unchecked', event);\n    this.dispatchEvent('change', event);\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      image,\n      checked,\n      id,\n      className,\n      style\n    } = props;\n    const classes = Utils.classNames(className, 'messagebar-sheet-image', 'checkbox', Mixins.colorClasses(props));\n    const styles = Utils.extend({\n      backgroundImage: image && `url(${image})`\n    }, style || {});\n    let inputEl;\n    {\n      inputEl = React.createElement('input', {\n        ref: __reactNode => {\n          this.__reactRefs['inputEl'] = __reactNode;\n        },\n        type: 'checkbox',\n        checked: checked,\n        onChange: self.onChange\n      });\n    }\n    return React.createElement('label', {\n      id: id,\n      className: classes,\n      style: styles\n    }, inputEl, React.createElement('i', {\n      className: 'icon icon-checkbox'\n    }), this.slots['default']);\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7MessagebarSheetImage, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  image: String,\n  checked: Boolean\n}, Mixins.colorProps));\n\nF7MessagebarSheetImage.displayName = 'f7-messagebar-sheet-image';\nexport default F7MessagebarSheetImage;"]},"metadata":{},"sourceType":"module"}