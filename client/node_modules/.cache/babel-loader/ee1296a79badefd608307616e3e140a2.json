{"ast":null,"code":"/* eslint no-underscore-dangle: \"off\" */\nimport f7 from './f7';\nimport Utils from './utils';\nlet routerComponentIdCounter = 0;\nexport default {\n  proto: {\n    pageComponentLoader(routerEl, component, componentUrl, options, resolve, reject) {\n      const router = this;\n      const el = routerEl;\n      let viewRouter;\n      f7.routers.views.forEach(data => {\n        if (data.el && data.el === routerEl) {\n          viewRouter = data;\n        }\n      });\n\n      if (!viewRouter) {\n        reject();\n        return;\n      }\n\n      const id = `${Utils.now()}_${routerComponentIdCounter += 1}`;\n      const pageData = {\n        component,\n        id,\n        props: Utils.extend({\n          f7route: options.route,\n          $f7route: options.route,\n          f7router: router,\n          $f7router: router\n        }, options.route.params, options.props || {})\n      };\n\n      if (viewRouter.component) {\n        viewRouter.component.$f7router = router;\n        viewRouter.component.$f7route = options.route;\n      }\n\n      let resolved;\n\n      function onDidUpdate(componentRouterData) {\n        if (componentRouterData !== viewRouter || resolved) return;\n        f7.events.off('viewRouterDidUpdate', onDidUpdate);\n        const pageEl = el.children[el.children.length - 1];\n        pageData.el = pageEl;\n        resolve(pageEl);\n        resolved = true;\n      }\n\n      f7.events.on('viewRouterDidUpdate', onDidUpdate);\n      viewRouter.pages.push(pageData);\n      viewRouter.setPages(viewRouter.pages);\n    },\n\n    removePage($pageEl) {\n      if (!$pageEl) return;\n      const router = this;\n      let f7Page;\n      if ('length' in $pageEl && $pageEl[0]) f7Page = $pageEl[0].f7Page;else f7Page = $pageEl.f7Page;\n\n      if (f7Page && f7Page.route && f7Page.route.route && f7Page.route.route.keepAlive) {\n        router.app.$($pageEl).remove();\n        return;\n      }\n\n      let viewRouter;\n      f7.routers.views.forEach(data => {\n        if (data.el && data.el === router.el) {\n          viewRouter = data;\n        }\n      });\n      let pageEl;\n\n      if ('length' in $pageEl) {\n        // Dom7\n        if ($pageEl.length === 0) return;\n        pageEl = $pageEl[0];\n      } else {\n        pageEl = $pageEl;\n      }\n\n      if (!pageEl) return;\n      let pageComponentFound;\n      viewRouter.pages.forEach((page, index) => {\n        if (page.el === pageEl) {\n          pageComponentFound = true;\n          viewRouter.pages.splice(index, 1);\n          viewRouter.setPages(viewRouter.pages);\n        }\n      });\n\n      if (!pageComponentFound) {\n        pageEl.parentNode.removeChild(pageEl);\n      }\n    },\n\n    tabComponentLoader(tabEl, component, componentUrl, options, resolve, reject) {\n      const router = this;\n      if (!tabEl) reject();\n      let tabRouter;\n      f7.routers.tabs.forEach(tabData => {\n        if (tabData.el && tabData.el === tabEl) {\n          tabRouter = tabData;\n        }\n      });\n\n      if (!tabRouter) {\n        reject();\n        return;\n      }\n\n      const id = `${Utils.now()}_${routerComponentIdCounter += 1}`;\n      const tabContent = {\n        id,\n        component,\n        props: Utils.extend({\n          f7route: options.route,\n          $f7route: options.route,\n          f7router: router,\n          $f7router: router\n        }, options.route.params, options.props || {})\n      };\n\n      if (tabRouter.component) {\n        tabRouter.component.$f7router = router;\n        tabRouter.component.$f7route = options.route;\n      }\n\n      let resolved;\n\n      function onDidUpdate(componentRouterData) {\n        if (componentRouterData !== tabRouter || resolved) return;\n        f7.events.off('tabRouterDidUpdate', onDidUpdate);\n        const tabContentEl = tabEl.children[0];\n        resolve(tabContentEl);\n        resolved = true;\n      }\n\n      f7.events.on('tabRouterDidUpdate', onDidUpdate);\n      tabRouter.setTabContent(tabContent);\n    },\n\n    removeTabContent(tabEl) {\n      if (!tabEl) return;\n      let tabRouter;\n      f7.routers.tabs.forEach(tabData => {\n        if (tabData.el && tabData.el === tabEl) {\n          tabRouter = tabData;\n        }\n      });\n      const hasComponent = tabRouter && tabRouter.component;\n\n      if (!tabRouter || !hasComponent) {\n        tabEl.innerHTML = ''; // eslint-disable-line\n\n        return;\n      }\n\n      tabRouter.setTabContent(null);\n    },\n\n    modalComponentLoader(rootEl, component, componentUrl, options, resolve, reject) {\n      const router = this;\n      const modalsRouter = f7.routers.modals;\n\n      if (!modalsRouter) {\n        reject();\n        return;\n      }\n\n      const id = `${Utils.now()}_${routerComponentIdCounter += 1}`;\n      const modalData = {\n        component,\n        id,\n        props: Utils.extend({\n          f7route: options.route,\n          $f7route: options.route,\n          f7router: router,\n          $f7router: router\n        }, options.route.params, options.props || {})\n      };\n\n      if (modalsRouter.component) {\n        modalsRouter.component.$f7router = router;\n        modalsRouter.component.$f7route = options.route;\n      }\n\n      let resolved;\n\n      function onDidUpdate() {\n        if (resolved) return;\n        f7.events.off('modalsRouterDidUpdate', onDidUpdate);\n        const modalEl = modalsRouter.el.children[modalsRouter.el.children.length - 1];\n        modalData.el = modalEl;\n        resolve(modalEl);\n        resolved = true;\n      }\n\n      f7.events.on('modalsRouterDidUpdate', onDidUpdate);\n      modalsRouter.modals.push(modalData);\n      modalsRouter.setModals(modalsRouter.modals);\n    },\n\n    removeModal(modalEl) {\n      const modalsRouter = f7.routers.modals;\n      if (!modalsRouter) return;\n      let modalDataToRemove;\n      modalsRouter.modals.forEach(modalData => {\n        if (modalData.el === modalEl) modalDataToRemove = modalData;\n      });\n      modalsRouter.modals.splice(modalsRouter.modals.indexOf(modalDataToRemove), 1);\n      modalsRouter.setModals(modalsRouter.modals);\n    }\n\n  }\n};","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/utils/components-router.js"],"names":["f7","Utils","routerComponentIdCounter","proto","pageComponentLoader","routerEl","component","componentUrl","options","resolve","reject","router","el","viewRouter","routers","views","forEach","data","id","now","pageData","props","extend","f7route","route","$f7route","f7router","$f7router","params","resolved","onDidUpdate","componentRouterData","events","off","pageEl","children","length","on","pages","push","setPages","removePage","$pageEl","f7Page","keepAlive","app","$","remove","pageComponentFound","page","index","splice","parentNode","removeChild","tabComponentLoader","tabEl","tabRouter","tabs","tabData","tabContent","tabContentEl","setTabContent","removeTabContent","hasComponent","innerHTML","modalComponentLoader","rootEl","modalsRouter","modals","modalData","modalEl","setModals","removeModal","modalDataToRemove","indexOf"],"mappings":"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","sourcesContent":["/* eslint no-underscore-dangle: \"off\" */\nimport f7 from './f7';\nimport Utils from './utils';\n\nlet routerComponentIdCounter = 0;\n\nexport default {\n  proto: {\n    pageComponentLoader(routerEl, component, componentUrl, options, resolve, reject) {\n      const router = this;\n      const el = routerEl;\n      let viewRouter;\n      f7.routers.views.forEach((data) => {\n        if (data.el && data.el === routerEl) {\n          viewRouter = data;\n        }\n      });\n\n      if (!viewRouter) {\n        reject();\n        return;\n      }\n\n      const id = `${Utils.now()}_${(routerComponentIdCounter += 1)}`;\n      const pageData = {\n        component,\n        id,\n        props: Utils.extend(\n          {\n            f7route: options.route,\n            $f7route: options.route,\n            f7router: router,\n            $f7router: router,\n          },\n          options.route.params,\n          options.props || {},\n        ),\n      };\n      if (viewRouter.component) {\n        viewRouter.component.$f7router = router;\n        viewRouter.component.$f7route = options.route;\n      }\n\n      let resolved;\n      function onDidUpdate(componentRouterData) {\n        if (componentRouterData !== viewRouter || resolved) return;\n        f7.events.off('viewRouterDidUpdate', onDidUpdate);\n\n        const pageEl = el.children[el.children.length - 1];\n        pageData.el = pageEl;\n\n        resolve(pageEl);\n        resolved = true;\n      }\n\n      f7.events.on('viewRouterDidUpdate', onDidUpdate);\n\n      viewRouter.pages.push(pageData);\n      viewRouter.setPages(viewRouter.pages);\n    },\n    removePage($pageEl) {\n      if (!$pageEl) return;\n      const router = this;\n      let f7Page;\n      if ('length' in $pageEl && $pageEl[0]) f7Page = $pageEl[0].f7Page;\n      else f7Page = $pageEl.f7Page;\n      if (f7Page && f7Page.route && f7Page.route.route && f7Page.route.route.keepAlive) {\n        router.app.$($pageEl).remove();\n        return;\n      }\n      let viewRouter;\n      f7.routers.views.forEach((data) => {\n        if (data.el && data.el === router.el) {\n          viewRouter = data;\n        }\n      });\n\n      let pageEl;\n      if ('length' in $pageEl) {\n        // Dom7\n        if ($pageEl.length === 0) return;\n        pageEl = $pageEl[0];\n      } else {\n        pageEl = $pageEl;\n      }\n      if (!pageEl) return;\n\n      let pageComponentFound;\n      viewRouter.pages.forEach((page, index) => {\n        if (page.el === pageEl) {\n          pageComponentFound = true;\n          viewRouter.pages.splice(index, 1);\n          viewRouter.setPages(viewRouter.pages);\n        }\n      });\n      if (!pageComponentFound) {\n        pageEl.parentNode.removeChild(pageEl);\n      }\n    },\n    tabComponentLoader(tabEl, component, componentUrl, options, resolve, reject) {\n      const router = this;\n      if (!tabEl) reject();\n\n      let tabRouter;\n      f7.routers.tabs.forEach((tabData) => {\n        if (tabData.el && tabData.el === tabEl) {\n          tabRouter = tabData;\n        }\n      });\n      if (!tabRouter) {\n        reject();\n        return;\n      }\n\n      const id = `${Utils.now()}_${(routerComponentIdCounter += 1)}`;\n      const tabContent = {\n        id,\n        component,\n        props: Utils.extend(\n          {\n            f7route: options.route,\n            $f7route: options.route,\n            f7router: router,\n            $f7router: router,\n          },\n          options.route.params,\n          options.props || {},\n        ),\n      };\n\n      if (tabRouter.component) {\n        tabRouter.component.$f7router = router;\n        tabRouter.component.$f7route = options.route;\n      }\n\n      let resolved;\n      function onDidUpdate(componentRouterData) {\n        if (componentRouterData !== tabRouter || resolved) return;\n        f7.events.off('tabRouterDidUpdate', onDidUpdate);\n\n        const tabContentEl = tabEl.children[0];\n        resolve(tabContentEl);\n\n        resolved = true;\n      }\n\n      f7.events.on('tabRouterDidUpdate', onDidUpdate);\n\n      tabRouter.setTabContent(tabContent);\n    },\n    removeTabContent(tabEl) {\n      if (!tabEl) return;\n\n      let tabRouter;\n      f7.routers.tabs.forEach((tabData) => {\n        if (tabData.el && tabData.el === tabEl) {\n          tabRouter = tabData;\n        }\n      });\n      const hasComponent = tabRouter && tabRouter.component;\n      if (!tabRouter || !hasComponent) {\n        tabEl.innerHTML = ''; // eslint-disable-line\n        return;\n      }\n      tabRouter.setTabContent(null);\n    },\n    modalComponentLoader(rootEl, component, componentUrl, options, resolve, reject) {\n      const router = this;\n      const modalsRouter = f7.routers.modals;\n\n      if (!modalsRouter) {\n        reject();\n        return;\n      }\n\n      const id = `${Utils.now()}_${(routerComponentIdCounter += 1)}`;\n      const modalData = {\n        component,\n        id,\n        props: Utils.extend(\n          {\n            f7route: options.route,\n            $f7route: options.route,\n            f7router: router,\n            $f7router: router,\n          },\n          options.route.params,\n          options.props || {},\n        ),\n      };\n      if (modalsRouter.component) {\n        modalsRouter.component.$f7router = router;\n        modalsRouter.component.$f7route = options.route;\n      }\n\n      let resolved;\n      function onDidUpdate() {\n        if (resolved) return;\n        f7.events.off('modalsRouterDidUpdate', onDidUpdate);\n\n        const modalEl = modalsRouter.el.children[modalsRouter.el.children.length - 1];\n        modalData.el = modalEl;\n\n        resolve(modalEl);\n        resolved = true;\n      }\n\n      f7.events.on('modalsRouterDidUpdate', onDidUpdate);\n\n      modalsRouter.modals.push(modalData);\n      modalsRouter.setModals(modalsRouter.modals);\n    },\n    removeModal(modalEl) {\n      const modalsRouter = f7.routers.modals;\n      if (!modalsRouter) return;\n\n      let modalDataToRemove;\n      modalsRouter.modals.forEach((modalData) => {\n        if (modalData.el === modalEl) modalDataToRemove = modalData;\n      });\n\n      modalsRouter.modals.splice(modalsRouter.modals.indexOf(modalDataToRemove), 1);\n      modalsRouter.setModals(modalsRouter.modals);\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}