{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stuff to move\\\\Work\\\\SE\\\\deployed\\\\client\\\\src\\\\components\\\\orderDetails.jsx\";\nimport React, { Component } from \"react\";\nimport { TextField, Typography } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getSingleOrder, deleteOrder, updateOrder, getOrders } from \"../actions/orderActions\"; //stored as a prop\n\nimport { clearErrors } from \"../actions/errorActions\";\nimport { Redirect } from \"react-router-dom\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 5)\n  }\n});\n\nclass orderDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      console.log(1); // this.setState({ [e.target.name]: e.target.value });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const updateOrder = {\n        ClientName: this.state.ClientName,\n        //it is getting the ClientName from the post request\n        ContactNumber: this.state.ContactNumber,\n        Email: this.state.Email,\n        Location: this.state.Location,\n        Category: this.state.Category,\n        Photographer: this.state.Photographer,\n        //photographer id?\n        Budget: this.state.Budget,\n        Expertise: this.state.Expertise,\n        Event_Description: this.state.Event_Description,\n        Approved: this.state.Approved,\n        date: this.state.date\n      };\n      let contact = this.state.contact;\n\n      if (!Number(contact)) {\n        alert(\"The contact must be a number\");\n      }\n\n      this.props.updateOrder(updateOrder);\n    };\n\n    this.state = {\n      data: [],\n      msg: null\n    };\n  }\n\n  componentDidMount() {\n    var promise = new Promise((resolve, reject) => {\n      resolve(this.props.getOrders());\n    });\n    promise.then(e => {\n      console.log(\"e\", e);\n      this.setState({\n        data: this.props.orders.ordersList\n      });\n      console.log(\"state set\", this.state.data, this.props.orders.ordersList);\n    }); // await this.props.getSingleOrder(\"5ea358de8681fc457c602499\");\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      loading\n    } = this.props.orders;\n    return console.log(this.state.data, this.props.orders.ordersList), /*#__PURE__*/React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, !loading ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \"Details\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email\",\n      name: \"email\",\n      autoComplete: \"email\",\n      autoFocus: true,\n      defaultValue: this.state.data.Email,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"ClientName\",\n      label: \"ClientName\",\n      id: \"ClientName\",\n      autoComplete: \"current-password\",\n      onChange: this.onChange,\n      defaultValue: this.state.ClientName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        value: \"remember\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 28\n        }\n      }),\n      label: \"Remember me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }), this.state.msg ? /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, this.state.msg) : null, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, \"Sign In\")), /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, \"Here \", this.state.data.Email)) : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, \"Loading\")));\n  }\n\n}\n\norderDetails.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  // to use the state as props\n  orders: state.orders,\n  // orders is coming from root reducer at /reducers/index.js\n  isAuthenticated: state.auth.isAuthenticated,\n  // auth is coming from root reducer at /reducers/index.js\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  getSingleOrder,\n  deleteOrder,\n  updateOrder,\n  clearErrors,\n  getOrders\n})(withStyles(useStyles)(orderDetails));","map":{"version":3,"sources":["D:/Stuff to move/Work/SE/deployed/client/src/components/orderDetails.jsx"],"names":["React","Component","TextField","Typography","FormControlLabel","Checkbox","Container","Button","withStyles","PropTypes","connect","getSingleOrder","deleteOrder","updateOrder","getOrders","clearErrors","Redirect","Alert","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","orderDetails","constructor","props","onChange","e","console","log","onSubmit","preventDefault","ClientName","state","ContactNumber","Email","Location","Category","Photographer","Budget","Expertise","Event_Description","Approved","date","contact","Number","alert","data","msg","componentDidMount","promise","Promise","resolve","reject","then","setState","orders","ordersList","render","classes","loading","propTypes","isAuthenticated","bool","error","object","isRequired","func","mapStateToProps","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,mBAAtC;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,cADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,SAJF,QAKO,yBALP,C,CAKkC;;AAClC,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,KAAY;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,UAAU,EAAE;AAJP,GADqB;AAO5BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJN,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP,GAPsB;AAW5BM,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEV,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADF;AAXoB,CAAZ,CAAlB;;AAgBA,MAAMQ,YAAN,SAA2B7B,SAA3B,CAAqC;AACnC8B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA6BnBC,QA7BmB,GA6BPC,CAAD,IAAO;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ,EADgB,CAEhB;AACD,KAhCkB;;AAAA,SAkCnBC,QAlCmB,GAkCPH,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACI,cAAF;AAEA,YAAMzB,WAAW,GAAG;AAClB0B,QAAAA,UAAU,EAAE,KAAKC,KAAL,CAAWD,UADL;AACiB;AACnCE,QAAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC,aAFR;AAGlBC,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAHA;AAIlBC,QAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAJH;AAKlBC,QAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI,QALH;AAMlBC,QAAAA,YAAY,EAAE,KAAKL,KAAL,CAAWK,YANP;AAMqB;AACvCC,QAAAA,MAAM,EAAE,KAAKN,KAAL,CAAWM,MAPD;AAQlBC,QAAAA,SAAS,EAAE,KAAKP,KAAL,CAAWO,SARJ;AASlBC,QAAAA,iBAAiB,EAAE,KAAKR,KAAL,CAAWQ,iBATZ;AAUlBC,QAAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWS,QAVH;AAWlBC,QAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWU;AAXC,OAApB;AAcA,UAAIC,OAAO,GAAG,KAAKX,KAAL,CAAWW,OAAzB;;AACA,UAAI,CAACC,MAAM,CAACD,OAAD,CAAX,EAAsB;AACpBE,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACD;;AACD,WAAKrB,KAAL,CAAWnB,WAAX,CAAuBA,WAAvB;AACD,KAxDkB;;AAEjB,SAAK2B,KAAL,GAAa;AACXc,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,GAAG,EAAE;AAFM,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7CD,MAAAA,OAAO,CAAC,KAAK3B,KAAL,CAAWlB,SAAX,EAAD,CAAP;AACD,KAFa,CAAd;AAGA2C,IAAAA,OAAO,CAACI,IAAR,CAAc3B,CAAD,IAAO;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBF,CAAjB;AACA,WAAK4B,QAAL,CAAc;AACZR,QAAAA,IAAI,EAAE,KAAKtB,KAAL,CAAW+B,MAAX,CAAkBC;AADZ,OAAd;AAGA7B,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKI,KAAL,CAAWc,IAApC,EAA0C,KAAKtB,KAAL,CAAW+B,MAAX,CAAkBC,UAA5D;AACD,KAND,EAJkB,CAYlB;AACD;;AAqCDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKlC,KAAzB;AACA,UAAM;AAAEmC,MAAAA;AAAF,QAAc,KAAKnC,KAAL,CAAW+B,MAA/B;AACA,WACE5B,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAL,CAAWc,IAAvB,EAA6B,KAAKtB,KAAL,CAAW+B,MAAX,CAAkBC,UAA/C,gBAEE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,QAAQ,EAAC,IAArC;AAA0C,MAAA,SAAS,EAAEE,OAAO,CAAC9C,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,CAAC+C,OAAD,gBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE;AAAM,MAAA,QAAQ,EAAE,KAAK9B,QAArB;AAA+B,MAAA,SAAS,EAAE6B,OAAO,CAACxC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,QAAQ,MAHV;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,EAAE,EAAC,OALL;AAME,MAAA,KAAK,EAAC,OANR;AAOE,MAAA,IAAI,EAAC,OAPP;AAQE,MAAA,YAAY,EAAC,OARf;AASE,MAAA,SAAS,MATX;AAUE,MAAA,YAAY,EAAE,KAAKc,KAAL,CAAWc,IAAX,CAAgBZ,KAVhC;AAWE,MAAA,QAAQ,EAAE,KAAKT,QAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAcE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,QAAQ,MAHV;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,IAAI,EAAC,YALP;AAME,MAAA,KAAK,EAAC,YANR;AAOE,MAAA,EAAE,EAAC,YAPL;AAQE,MAAA,YAAY,EAAC,kBARf;AASE,MAAA,QAAQ,EAAE,KAAKA,QATjB;AAUE,MAAA,YAAY,EAAE,KAAKO,KAAL,CAAWD,UAV3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,eA0BE,oBAAC,gBAAD;AACE,MAAA,OAAO,eAAE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,UAAhB;AAA2B,QAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADX;AAEE,MAAA,KAAK,EAAC,aAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,EA8BG,KAAKC,KAAL,CAAWe,GAAX,gBACC,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,KAAKf,KAAL,CAAWe,GAApC,CADD,GAEG,IAhCN,eAiCE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,OAAO,EAAC,WAHV;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,SAAS,EAAEW,OAAO,CAACtC,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAjCF,CAJF,eA+CE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQ,KAAKY,KAAL,CAAWc,IAAX,CAAgBZ,KADxB,CA/CF,CADD,gBAqDC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAvDJ,CAHJ;AAmED;;AAjIkC;;AAA/BZ,Y,CAwBGsC,S,GAAY;AACjBC,EAAAA,eAAe,EAAE5D,SAAS,CAAC6D,IADV;AAEjBC,EAAAA,KAAK,EAAE9D,SAAS,CAAC+D,MAAV,CAAiBC,UAFP;AAGjB1D,EAAAA,WAAW,EAAEN,SAAS,CAACiE,IAAV,CAAeD;AAHX,C;;AA4GrB,MAAME,eAAe,GAAInC,KAAD,KAAY;AAClC;AACAuB,EAAAA,MAAM,EAAEvB,KAAK,CAACuB,MAFoB;AAEZ;AACtBM,EAAAA,eAAe,EAAE7B,KAAK,CAACoC,IAAN,CAAWP,eAHM;AAGW;AAC7CE,EAAAA,KAAK,EAAE/B,KAAK,CAAC+B;AAJqB,CAAZ,CAAxB;;AAOA,eAAe7D,OAAO,CAACiE,eAAD,EAAkB;AACtChE,EAAAA,cADsC;AAEtCC,EAAAA,WAFsC;AAGtCC,EAAAA,WAHsC;AAItCE,EAAAA,WAJsC;AAKtCD,EAAAA;AALsC,CAAlB,CAAP,CAMZN,UAAU,CAACU,SAAD,CAAV,CAAsBY,YAAtB,CANY,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { TextField, Typography } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getSingleOrder,\n  deleteOrder,\n  updateOrder,\n  getOrders,\n} from \"../actions/orderActions\"; //stored as a prop\nimport { clearErrors } from \"../actions/errorActions\";\nimport { Redirect } from \"react-router-dom\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = (theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 5),\n  },\n});\n\nclass orderDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      msg: null,\n    };\n  }\n\n  componentDidMount() {\n    var promise = new Promise((resolve, reject) => {\n      resolve(this.props.getOrders());\n    });\n    promise.then((e) => {\n      console.log(\"e\", e);\n      this.setState({\n        data: this.props.orders.ordersList,\n      });\n      console.log(\"state set\", this.state.data, this.props.orders.ordersList);\n    });\n\n    // await this.props.getSingleOrder(\"5ea358de8681fc457c602499\");\n  }\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n  };\n\n  onChange = (e) => {\n    console.log(1);\n    // this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const updateOrder = {\n      ClientName: this.state.ClientName, //it is getting the ClientName from the post request\n      ContactNumber: this.state.ContactNumber,\n      Email: this.state.Email,\n      Location: this.state.Location,\n      Category: this.state.Category,\n      Photographer: this.state.Photographer, //photographer id?\n      Budget: this.state.Budget,\n      Expertise: this.state.Expertise,\n      Event_Description: this.state.Event_Description,\n      Approved: this.state.Approved,\n      date: this.state.date,\n    };\n\n    let contact = this.state.contact;\n    if (!Number(contact)) {\n      alert(\"The contact must be a number\");\n    }\n    this.props.updateOrder(updateOrder);\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { loading } = this.props.orders;\n    return (\n      console.log(this.state.data, this.props.orders.ordersList),\n      (\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\n          {/* {this.props.isAuthenticated ? <Redirect to=\"/adminPortal\" /> : null} */}\n          {!loading ? (\n            <React.Fragment>\n              <Typography component=\"h1\" variant=\"h4\">\n                Details\n              </Typography>\n              <form onSubmit={this.onSubmit} className={classes.form}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  autoFocus\n                  defaultValue={this.state.data.Email}\n                  onChange={this.onChange}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"ClientName\"\n                  label=\"ClientName\"\n                  id=\"ClientName\"\n                  autoComplete=\"current-password\"\n                  onChange={this.onChange}\n                  defaultValue={this.state.ClientName}\n                />\n                <FormControlLabel\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\n                  label=\"Remember me\"\n                />\n                {this.state.msg ? (\n                  <Alert severity=\"error\">{this.state.msg}</Alert>\n                ) : null}\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  Sign In\n                </Button>\n              </form>\n              <Typography component=\"h1\" variant=\"h4\">\n                Here {this.state.data.Email}\n              </Typography>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <Typography component=\"h1\" variant=\"h4\">\n                Loading\n              </Typography>\n            </React.Fragment>\n          )}\n        </Container>\n      )\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // to use the state as props\n  orders: state.orders, // orders is coming from root reducer at /reducers/index.js\n  isAuthenticated: state.auth.isAuthenticated, // auth is coming from root reducer at /reducers/index.js\n  error: state.error,\n});\n\nexport default connect(mapStateToProps, {\n  getSingleOrder,\n  deleteOrder,\n  updateOrder,\n  clearErrors,\n  getOrders,\n})(withStyles(useStyles)(orderDetails));\n"]},"metadata":{},"sourceType":"module"}