{"ast":null,"code":"var _jsxFileName = \"C:\\\\haider\\\\sem8\\\\SE\\\\SE_project\\\\SmartLensApp\\\\client\\\\src\\\\components\\\\Recommendation.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport { Col } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../styles/photographerRegisteration.css\";\nimport \"react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\n\nclass MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmitHandler = event => {\n      event.preventDefault();\n      let budget = this.state.budget;\n\n      if (!Number(budget)) {\n        alert(\"Your budget must be a number\");\n      }\n\n      axios.post(\"http://localhost:5000/clients/add\", {\n        ClientName: this.state.name,\n        //it is getting the ClientName from the post request\n        ContactNumber: this.state.contact,\n        Email: this.state.email,\n        Location: this.state.location,\n        Category: this.state.category,\n        Photographer: this.state.photographer,\n        //photographer id?\n        Budget: this.state.budget,\n        Expertise: this.state.expertise,\n        Event_Description: this.state.description,\n        Approved: false,\n        date: this.state.date\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.onChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      contact: \"090078601\",\n      email: \"af79614@gmail.com\",\n      location: \"Model Town\",\n      category: [\"Wedding\", \"Food\", \"Party\"],\n      photographer: this.props.match.params.type,\n      budget: 100000,\n      expertise: \"Gold\",\n      description: \"Give me a photographer\",\n      categories: [],\n      date: new Date()\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onExpertiseChange = this.onExpertiseChange.bind(this);\n    this.categoryHandler = this.categoryHandler.bind(this);\n    this.getExpertise = this.getExpertise.bind(this);\n  }\n\n  onExpertiseChange(event) {\n    this.setState({\n      expertise: parseInt(event.target.value, 10)\n    });\n  }\n\n  getExpertise() {\n    if (this.props.match.params.type === \"none\") {\n      return /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"expertise\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"ml-md-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, \"Expertise\"), /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"col-6 col-md-12 ml-md-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n        className: \"pb-2\",\n        type: \"radio\",\n        name: \"options\",\n        defaultValue: 1,\n        onClick: this.onExpertiseChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ToggleButton, {\n        className: \"btn btn-dark\",\n        value: \"All\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, \"All\"), /*#__PURE__*/React.createElement(ToggleButton, {\n        className: \"btn btn-dark\",\n        value: \"Silver\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, \"Silver\"), /*#__PURE__*/React.createElement(ToggleButton, {\n        className: \"btn btn-dark\",\n        value: \"Gold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, \"Gold\"), /*#__PURE__*/React.createElement(ToggleButton, {\n        className: \"btn btn-dark\",\n        value: \"Platinum\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, \"Platinum\")))));\n    }\n  }\n\n  categoryHandler(event) {\n    this.setState({\n      category: this.state.category.concat([event.target.value])\n    });\n  }\n\n  componentWillMount() {\n    //function runs at the start of component loading\n    axios //sending a get request to get all the categories from Mongo\n    .get(\"http://localhost:5000/categories/\").then(res => {\n      res.data.map(entree => this.setState({\n        categories: this.state.categories.concat([//storing all the category ids and their name values in my local state array\n        {\n          key: entree._id,\n          categoryName: entree.categoryname\n        }])\n      }));\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron jumbotron-fluid one\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-4 text-center mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, \"Photographer Selection\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-md farm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"fullname\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, \"Full Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Enter name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"col-12 col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"email\",\n      className: \"pr-md-2\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"email\",\n      type: \"text\",\n      placeholder: \"Enter email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"contact\",\n      className: \"pl-md-2\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, \"Contact Number\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"contact\",\n      type: \"text\",\n      placeholder: \"Enter contact number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"col-12 col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"location\",\n      className: \"pr-md-2\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }, \"Location\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"location\",\n      type: \"text\",\n      placeholder: \"Enter location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"budget\",\n      className: \"pl-md-2\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 19\n      }\n    }, \"Budget\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"budget\",\n      type: \"Number\",\n      placeholder: \"Enter budget\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }, \"Categories (tick all that apply)\")), /*#__PURE__*/React.createElement(Form.Row, {\n      className: \"pb-3\",\n      onChange: this.categoryHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, this.state.categories.map(Category => /*#__PURE__*/React.createElement(Form.Check, {\n      name: \"category\",\n      className: \"mr-2\",\n      value: Category.categoryName,\n      label: Category.categoryName,\n      type: \"checkbox\",\n      id: Category.key,\n      key: Category.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"col-12 col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"date\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 19\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"date\",\n      type: \"date\",\n      placeholder: \"mm/dd/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      className: \"col-12 col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 15\n      }\n    }, this.getExpertise())), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 19\n      }\n    }, \"Comments\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"description\",\n      as: \"textarea\",\n      rows: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"mt-3\",\n      className: \"btn btn-dark\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default MyForm;","map":{"version":3,"sources":["C:/haider/sem8/SE/SE_project/SmartLensApp/client/src/components/Recommendation.jsx"],"names":["React","axios","Form","Col","Button","ToggleButton","ToggleButtonGroup","MyForm","Component","constructor","props","onSubmitHandler","event","preventDefault","budget","state","Number","alert","post","ClientName","name","ContactNumber","contact","Email","email","Location","location","Category","category","Photographer","photographer","Budget","Expertise","expertise","Event_Description","description","Approved","date","then","response","console","log","catch","error","onChangeHandler","nam","target","val","value","setState","match","params","type","categories","Date","bind","onExpertiseChange","categoryHandler","getExpertise","parseInt","concat","componentWillMount","get","res","data","map","entree","key","_id","categoryName","categoryname","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"../styles/photographerRegisteration.css\";\r\nimport \"react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\n\r\nclass MyForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      contact: \"090078601\",\r\n      email: \"af79614@gmail.com\",\r\n      location: \"Model Town\",\r\n      category: [\"Wedding\", \"Food\", \"Party\"],\r\n      photographer: this.props.match.params.type,\r\n      budget: 100000,\r\n      expertise: \"Gold\",\r\n      description: \"Give me a photographer\",\r\n      categories: [],\r\n      date: new Date(),\r\n    };\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    this.onExpertiseChange = this.onExpertiseChange.bind(this);\r\n    this.categoryHandler = this.categoryHandler.bind(this);\r\n    this.getExpertise = this.getExpertise.bind(this);\r\n  }\r\n  onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    let budget = this.state.budget;\r\n    if (!Number(budget)) {\r\n      alert(\"Your budget must be a number\");\r\n    }\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/clients/add\", {\r\n        ClientName: this.state.name, //it is getting the ClientName from the post request\r\n        ContactNumber: this.state.contact,\r\n        Email: this.state.email,\r\n        Location: this.state.location,\r\n        Category: this.state.category,\r\n        Photographer: this.state.photographer, //photographer id?\r\n        Budget: this.state.budget,\r\n        Expertise: this.state.expertise,\r\n        Event_Description: this.state.description,\r\n        Approved: false,\r\n        date: this.state.date,\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  onChangeHandler = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    this.setState({ [nam]: val });\r\n  };\r\n  onExpertiseChange(event) {\r\n    this.setState({ expertise: parseInt(event.target.value, 10) });\r\n  }\r\n  getExpertise() {\r\n    if (this.props.match.params.type === \"none\") {\r\n      return (\r\n        <Form.Group controlId=\"expertise\">\r\n          <Form.Label className=\"ml-md-5\">Expertise</Form.Label>\r\n          <Form.Row>\r\n            <Col className=\"col-6 col-md-12 ml-md-5\">\r\n              <ToggleButtonGroup\r\n                className=\"pb-2\"\r\n                type=\"radio\"\r\n                name=\"options\"\r\n                defaultValue={1}\r\n                onClick={this.onExpertiseChange}\r\n              >\r\n                <ToggleButton className=\"btn btn-dark\" value={\"All\"}>\r\n                  All\r\n                </ToggleButton>\r\n                <ToggleButton className=\"btn btn-dark\" value={\"Silver\"}>\r\n                  Silver\r\n                </ToggleButton>\r\n                <ToggleButton className=\"btn btn-dark\" value={\"Gold\"}>\r\n                  Gold\r\n                </ToggleButton>\r\n                <ToggleButton className=\"btn btn-dark\" value={\"Platinum\"}>\r\n                  Platinum\r\n                </ToggleButton>\r\n              </ToggleButtonGroup>\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n      );\r\n    }\r\n  }\r\n\r\n  categoryHandler(event) {\r\n    this.setState({\r\n      category: this.state.category.concat([event.target.value]),\r\n    });\r\n  }\r\n\r\n  componentWillMount() {\r\n    //function runs at the start of component loading\r\n    axios //sending a get request to get all the categories from Mongo\r\n      .get(\"http://localhost:5000/categories/\")\r\n      .then((res) => {\r\n        res.data.map((entree) =>\r\n          this.setState({\r\n            categories: this.state.categories.concat([\r\n              //storing all the category ids and their name values in my local state array\r\n              { key: entree._id, categoryName: entree.categoryname },\r\n            ]),\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* START JUMBOTRON */}\r\n        <div className=\"jumbotron jumbotron-fluid one\">\r\n          <div className=\"container\">\r\n          <h1 className=\"display-4 text-center mt-5\">Photographer Selection</h1>\r\n          </div>\r\n        </div>\r\n        {/* END JUMBOTRON */}\r\n\r\n        <div className=\"container-md farm\">\r\n          <Form onSubmit={this.onSubmitHandler}>\r\n            <Form.Row>\r\n              <Col className=\"col-12\">\r\n                <Form.Group\r\n                  controlId=\"fullname\"\r\n                  onChange={this.onChangeHandler}\r\n                >\r\n                  <Form.Label>Full Name</Form.Label>\r\n                  <Form.Control\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter name\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Col className=\"col-12 col-md-6\">\r\n                <Form.Group\r\n                  controlId=\"email\"\r\n                  className=\"pr-md-2\"\r\n                  onChange={this.onChangeHandler}\r\n                >\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter email\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Group\r\n                  controlId=\"contact\"\r\n                  className=\"pl-md-2\"\r\n                  onChange={this.onChangeHandler}\r\n                >\r\n                  <Form.Label>Contact Number</Form.Label>\r\n                  <Form.Control\r\n                    name=\"contact\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter contact number\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Col className=\"col-12 col-md-6\">\r\n                <Form.Group\r\n                  controlId=\"location\"\r\n                  className=\"pr-md-2\"\r\n                  onChange={this.onChangeHandler}\r\n                >\r\n                  <Form.Label>Location</Form.Label>\r\n                  <Form.Control\r\n                    name=\"location\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter location\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Group\r\n                  controlId=\"budget\"\r\n                  className=\"pl-md-2\"\r\n                  onChange={this.onChangeHandler}\r\n                >\r\n                  <Form.Label>Budget</Form.Label>\r\n                  <Form.Control\r\n                    name=\"budget\"\r\n                    type=\"Number\"\r\n                    placeholder=\"Enter budget\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Label className=\"pb-2\">\r\n                Categories (tick all that apply)\r\n              </Form.Label>\r\n            </Form.Row>\r\n            <Form.Row className=\"pb-3\" onChange={this.categoryHandler}>\r\n              {this.state.categories.map((Category) => (\r\n                <Form.Check\r\n                  name=\"category\"\r\n                  className=\"mr-2\"\r\n                  value={Category.categoryName}\r\n                  label={Category.categoryName}\r\n                  type=\"checkbox\"\r\n                  id={Category.key}\r\n                  key={Category.key}\r\n                />\r\n              ))}\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Col className=\"col-12 col-md-6\">\r\n                <Form.Group controlId=\"date\" onChange={this.onChangeHandler}>\r\n                  <Form.Label>Date</Form.Label>\r\n                  <Form.Control\r\n                    name=\"date\"\r\n                    type=\"date\"\r\n                    placeholder=\"mm/dd/yyyy\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col className=\"col-12 col-md-6\">{this.getExpertise()}</Col>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Col className=\"col-12\">\r\n                <Form.Group onChange={this.onChangeHandler}>\r\n                  <Form.Label>Comments</Form.Label>\r\n                  <Form.Control name=\"description\" as=\"textarea\" rows=\"4\" />\r\n                </Form.Group>\r\n              </Col>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Button className=\"mt-3\" className=\"btn btn-dark\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Row>\r\n          </Form>\r\n        </div>\r\n\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyForm;\r\n"]},"metadata":{},"sourceType":"module"}