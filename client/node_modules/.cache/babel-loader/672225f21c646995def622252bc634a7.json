{"ast":null,"code":"import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentWatch from '../runtime-helpers/react-component-watch.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7Icon extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    this.state = (() => {\n      const self = this;\n      const $f7 = self.$f7;\n\n      if (!$f7) {\n        self.$f7ready(() => {\n          self.setState({\n            _theme: self.$theme\n          });\n        });\n      }\n\n      return {\n        _theme: $f7 ? self.$theme : null\n      };\n    })();\n  }\n\n  get iconTextComputed() {\n    const self = this;\n    const {\n      material,\n      f7,\n      md,\n      ios,\n      aurora\n    } = self.props;\n    const theme = self.state._theme;\n    let text = material || f7;\n\n    if (md && theme && theme.md && (md.indexOf('material:') >= 0 || md.indexOf('f7:') >= 0)) {\n      text = md.split(':')[1];\n    } else if (ios && theme && theme.ios && (ios.indexOf('material:') >= 0 || ios.indexOf('f7:') >= 0)) {\n      text = ios.split(':')[1];\n    } else if (aurora && theme && theme.aurora && (aurora.indexOf('material:') >= 0 || aurora.indexOf('f7:') >= 0)) {\n      text = aurora.split(':')[1];\n    }\n\n    return text;\n  }\n\n  get classes() {\n    let classes = {\n      icon: true\n    };\n    const self = this;\n    const props = self.props;\n    const theme = self.state._theme;\n    const {\n      material,\n      f7,\n      icon,\n      md,\n      ios,\n      aurora,\n      className\n    } = props;\n    let themeIcon;\n    if (theme && theme.ios) themeIcon = ios;else if (theme && theme.md) themeIcon = md;else if (theme && theme.aurora) themeIcon = aurora;\n\n    if (themeIcon) {\n      const parts = themeIcon.split(':');\n      const prop = parts[0];\n      const value = parts[1];\n\n      if (prop === 'material' || prop === 'f7') {\n        classes['material-icons'] = prop === 'material';\n        classes['f7-icons'] = prop === 'f7';\n      }\n\n      if (prop === 'icon') {\n        classes[value] = true;\n      }\n    } else {\n      classes = {\n        icon: true,\n        'material-icons': material,\n        'f7-icons': f7\n      };\n      if (icon) classes[icon] = true;\n    }\n\n    return Utils.classNames(className, classes, Mixins.colorClasses(props));\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      id,\n      style\n    } = props;\n    let size = props.size;\n\n    if (typeof size === 'number' || parseFloat(size) === size * 1) {\n      size = `${size}px`;\n    }\n\n    return React.createElement('i', {\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      id: id,\n      style: Utils.extend({\n        fontSize: size,\n        width: size,\n        height: size\n      }, style),\n      className: self.classes\n    }, self.iconTextComputed, this.slots['default']);\n  }\n\n  componentWillUnmount() {\n    const self = this;\n\n    if (self.f7Tooltip && self.f7Tooltip.destroy) {\n      self.f7Tooltip.destroy();\n      self.f7Tooltip = null;\n      delete self.f7Tooltip;\n    }\n  }\n\n  componentDidMount() {\n    const self = this;\n    const el = self.refs.el;\n    if (!el) return;\n    const {\n      tooltip,\n      tooltipTrigger\n    } = self.props;\n    if (!tooltip) return;\n    self.$f7ready(f7 => {\n      self.f7Tooltip = f7.tooltip.create({\n        targetEl: el,\n        text: tooltip,\n        trigger: tooltipTrigger\n      });\n    });\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n  componentDidUpdate(prevProps, prevState) {\n    __reactComponentWatch(this, 'props.tooltip', prevProps, prevState, newText => {\n      const self = this;\n\n      if (!newText && self.f7Tooltip) {\n        self.f7Tooltip.destroy();\n        self.f7Tooltip = null;\n        delete self.f7Tooltip;\n        return;\n      }\n\n      if (newText && !self.f7Tooltip && self.$f7) {\n        self.f7Tooltip = self.$f7.tooltip.create({\n          targetEl: self.refs.el,\n          text: newText,\n          trigger: self.props.tooltipTrigger\n        });\n        return;\n      }\n\n      if (!newText || !self.f7Tooltip) return;\n      self.f7Tooltip.setText(newText);\n    });\n  }\n\n}\n\n__reactComponentSetProps(F7Icon, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  material: String,\n  f7: String,\n  icon: String,\n  ios: String,\n  aurora: String,\n  md: String,\n  tooltip: String,\n  tooltipTrigger: String,\n  size: [String, Number]\n}, Mixins.colorProps));\n\nF7Icon.displayName = 'f7-icon';\nexport default F7Icon;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/components/icon.js"],"names":["React","Utils","Mixins","__reactComponentWatch","__reactComponentSlots","__reactComponentSetProps","F7Icon","Component","constructor","props","context","__reactRefs","state","self","$f7","$f7ready","setState","_theme","$theme","iconTextComputed","material","f7","md","ios","aurora","theme","text","indexOf","split","classes","icon","className","themeIcon","parts","prop","value","classNames","colorClasses","render","id","style","size","parseFloat","createElement","ref","__reactNode","extend","fontSize","width","height","slots","componentWillUnmount","f7Tooltip","destroy","componentDidMount","el","refs","tooltip","tooltipTrigger","create","targetEl","trigger","componentDidUpdate","prevProps","prevState","newText","setText","Object","assign","String","Number","colorProps","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentWatch from '../runtime-helpers/react-component-watch.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7Icon extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    this.state = (() => {\n      const self = this;\n      const $f7 = self.$f7;\n\n      if (!$f7) {\n        self.$f7ready(() => {\n          self.setState({\n            _theme: self.$theme\n          });\n        });\n      }\n\n      return {\n        _theme: $f7 ? self.$theme : null\n      };\n    })();\n  }\n\n  get iconTextComputed() {\n    const self = this;\n    const {\n      material,\n      f7,\n      md,\n      ios,\n      aurora\n    } = self.props;\n    const theme = self.state._theme;\n    let text = material || f7;\n\n    if (md && theme && theme.md && (md.indexOf('material:') >= 0 || md.indexOf('f7:') >= 0)) {\n      text = md.split(':')[1];\n    } else if (ios && theme && theme.ios && (ios.indexOf('material:') >= 0 || ios.indexOf('f7:') >= 0)) {\n      text = ios.split(':')[1];\n    } else if (aurora && theme && theme.aurora && (aurora.indexOf('material:') >= 0 || aurora.indexOf('f7:') >= 0)) {\n      text = aurora.split(':')[1];\n    }\n\n    return text;\n  }\n\n  get classes() {\n    let classes = {\n      icon: true\n    };\n    const self = this;\n    const props = self.props;\n    const theme = self.state._theme;\n    const {\n      material,\n      f7,\n      icon,\n      md,\n      ios,\n      aurora,\n      className\n    } = props;\n    let themeIcon;\n    if (theme && theme.ios) themeIcon = ios;else if (theme && theme.md) themeIcon = md;else if (theme && theme.aurora) themeIcon = aurora;\n\n    if (themeIcon) {\n      const parts = themeIcon.split(':');\n      const prop = parts[0];\n      const value = parts[1];\n\n      if (prop === 'material' || prop === 'f7') {\n        classes['material-icons'] = prop === 'material';\n        classes['f7-icons'] = prop === 'f7';\n      }\n\n      if (prop === 'icon') {\n        classes[value] = true;\n      }\n    } else {\n      classes = {\n        icon: true,\n        'material-icons': material,\n        'f7-icons': f7\n      };\n      if (icon) classes[icon] = true;\n    }\n\n    return Utils.classNames(className, classes, Mixins.colorClasses(props));\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      id,\n      style\n    } = props;\n    let size = props.size;\n\n    if (typeof size === 'number' || parseFloat(size) === size * 1) {\n      size = `${size}px`;\n    }\n\n    return React.createElement('i', {\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      id: id,\n      style: Utils.extend({\n        fontSize: size,\n        width: size,\n        height: size\n      }, style),\n      className: self.classes\n    }, self.iconTextComputed, this.slots['default']);\n  }\n\n  componentWillUnmount() {\n    const self = this;\n\n    if (self.f7Tooltip && self.f7Tooltip.destroy) {\n      self.f7Tooltip.destroy();\n      self.f7Tooltip = null;\n      delete self.f7Tooltip;\n    }\n  }\n\n  componentDidMount() {\n    const self = this;\n    const el = self.refs.el;\n    if (!el) return;\n    const {\n      tooltip,\n      tooltipTrigger\n    } = self.props;\n    if (!tooltip) return;\n    self.$f7ready(f7 => {\n      self.f7Tooltip = f7.tooltip.create({\n        targetEl: el,\n        text: tooltip,\n        trigger: tooltipTrigger\n      });\n    });\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n  componentDidUpdate(prevProps, prevState) {\n    __reactComponentWatch(this, 'props.tooltip', prevProps, prevState, newText => {\n      const self = this;\n\n      if (!newText && self.f7Tooltip) {\n        self.f7Tooltip.destroy();\n        self.f7Tooltip = null;\n        delete self.f7Tooltip;\n        return;\n      }\n\n      if (newText && !self.f7Tooltip && self.$f7) {\n        self.f7Tooltip = self.$f7.tooltip.create({\n          targetEl: self.refs.el,\n          text: newText,\n          trigger: self.props.tooltipTrigger\n        });\n        return;\n      }\n\n      if (!newText || !self.f7Tooltip) return;\n      self.f7Tooltip.setText(newText);\n    });\n  }\n\n}\n\n__reactComponentSetProps(F7Icon, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  material: String,\n  f7: String,\n  icon: String,\n  ios: String,\n  aurora: String,\n  md: String,\n  tooltip: String,\n  tooltipTrigger: String,\n  size: [String, Number]\n}, Mixins.colorProps));\n\nF7Icon.displayName = 'f7-icon';\nexport default F7Icon;"]},"metadata":{},"sourceType":"module"}