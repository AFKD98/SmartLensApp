{"ast":null,"code":"import React from 'react';\nimport Mixins from '../utils/mixins';\nimport Utils from '../utils/utils';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7ActionsButton extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onClick']);\n    })();\n  }\n\n  onClick(event) {\n    const self = this;\n    const $$ = self.$$;\n    const el = self.refs.el;\n\n    if (self.props.close && self.$f7 && el) {\n      self.$f7.actions.close($$(el).parents('.actions-modal'));\n    }\n\n    self.dispatchEvent('click', event);\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      id,\n      className,\n      style,\n      bold\n    } = props;\n    let mediaEl;\n\n    if (self.slots.media && self.slots.media.length) {\n      mediaEl = React.createElement('div', {\n        className: 'actions-button-media'\n      }, this.slots['media']);\n    }\n\n    const classes = Utils.classNames(className, {\n      'actions-button': true,\n      'actions-button-bold': bold\n    }, Mixins.colorClasses(props));\n    return React.createElement('div', {\n      id: id,\n      style: style,\n      className: classes,\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      }\n    }, mediaEl, React.createElement('div', {\n      className: 'actions-button-text'\n    }, this.slots['default']));\n  }\n\n  componentWillUnmount() {\n    this.refs.el.removeEventListener('click', this.onClick);\n  }\n\n  componentDidMount() {\n    this.refs.el.addEventListener('click', this.onClick);\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7ActionsButton, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  bold: Boolean,\n  close: {\n    type: Boolean,\n    default: true\n  }\n}, Mixins.colorProps));\n\nF7ActionsButton.displayName = 'f7-actions-button';\nexport default F7ActionsButton;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/components/actions-button.js"],"names":["React","Mixins","Utils","__reactComponentDispatchEvent","__reactComponentSlots","__reactComponentSetProps","F7ActionsButton","Component","constructor","props","context","__reactRefs","bindMethods","onClick","event","self","$$","el","refs","close","$f7","actions","parents","dispatchEvent","render","id","className","style","bold","mediaEl","slots","media","length","createElement","classes","classNames","colorClasses","ref","__reactNode","componentWillUnmount","removeEventListener","componentDidMount","addEventListener","events","args","Object","assign","String","Number","Boolean","type","default","colorProps","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Mixins from '../utils/mixins';\nimport Utils from '../utils/utils';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7ActionsButton extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onClick']);\n    })();\n  }\n\n  onClick(event) {\n    const self = this;\n    const $$ = self.$$;\n    const el = self.refs.el;\n\n    if (self.props.close && self.$f7 && el) {\n      self.$f7.actions.close($$(el).parents('.actions-modal'));\n    }\n\n    self.dispatchEvent('click', event);\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      id,\n      className,\n      style,\n      bold\n    } = props;\n    let mediaEl;\n\n    if (self.slots.media && self.slots.media.length) {\n      mediaEl = React.createElement('div', {\n        className: 'actions-button-media'\n      }, this.slots['media']);\n    }\n\n    const classes = Utils.classNames(className, {\n      'actions-button': true,\n      'actions-button-bold': bold\n    }, Mixins.colorClasses(props));\n    return React.createElement('div', {\n      id: id,\n      style: style,\n      className: classes,\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      }\n    }, mediaEl, React.createElement('div', {\n      className: 'actions-button-text'\n    }, this.slots['default']));\n  }\n\n  componentWillUnmount() {\n    this.refs.el.removeEventListener('click', this.onClick);\n  }\n\n  componentDidMount() {\n    this.refs.el.addEventListener('click', this.onClick);\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7ActionsButton, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  bold: Boolean,\n  close: {\n    type: Boolean,\n    default: true\n  }\n}, Mixins.colorProps));\n\nF7ActionsButton.displayName = 'f7-actions-button';\nexport default F7ActionsButton;"]},"metadata":{},"sourceType":"module"}