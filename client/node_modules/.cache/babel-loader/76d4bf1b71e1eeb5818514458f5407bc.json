{"ast":null,"code":"import React from 'react';\nimport Mixins from '../utils/mixins';\nimport Utils from '../utils/utils';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7ActionsLabel extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onClick']);\n    })();\n  }\n\n  onClick(event) {\n    this.dispatchEvent('click', event);\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      className,\n      id,\n      style,\n      bold\n    } = props;\n    const classes = Utils.classNames(className, 'actions-label', {\n      'actions-button-bold': bold\n    }, Mixins.colorClasses(props));\n    return React.createElement('div', {\n      id: id,\n      style: style,\n      className: classes,\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      }\n    }, this.slots['default']);\n  }\n\n  componentWillUnmount() {\n    this.refs.el.removeEventListener('click', this.onClick);\n  }\n\n  componentDidMount() {\n    this.refs.el.addEventListener('click', this.onClick);\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7ActionsLabel, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  bold: Boolean\n}, Mixins.colorProps));\n\nF7ActionsLabel.displayName = 'f7-actions-label';\nexport default F7ActionsLabel;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/components/actions-label.js"],"names":["React","Mixins","Utils","__reactComponentDispatchEvent","__reactComponentSlots","__reactComponentSetProps","F7ActionsLabel","Component","constructor","props","context","__reactRefs","bindMethods","onClick","event","dispatchEvent","render","self","className","id","style","bold","classes","classNames","colorClasses","createElement","ref","__reactNode","slots","componentWillUnmount","refs","el","removeEventListener","componentDidMount","addEventListener","events","args","Object","assign","String","Number","Boolean","colorProps","displayName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,6BAAP,MAA0C,sDAA1C;AACA,OAAOC,qBAAP,MAAkC,6CAAlC;AACA,OAAOC,wBAAP,MAAqC,iDAArC;;AAEA,MAAMC,cAAN,SAA6BN,KAAK,CAACO,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,WAAL,GAAmB,EAAnB;;AAEA,KAAC,MAAM;AACLT,MAAAA,KAAK,CAACU,WAAN,CAAkB,IAAlB,EAAwB,CAAC,SAAD,CAAxB;AACD,KAFD;AAGD;;AAEDC,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACb,SAAKC,aAAL,CAAmB,OAAnB,EAA4BD,KAA5B;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,IAAb;AACA,UAAMR,KAAK,GAAGQ,IAAI,CAACR,KAAnB;AACA,UAAM;AACJS,MAAAA,SADI;AAEJC,MAAAA,EAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA;AAJI,QAKFZ,KALJ;AAMA,UAAMa,OAAO,GAAGpB,KAAK,CAACqB,UAAN,CAAiBL,SAAjB,EAA4B,eAA5B,EAA6C;AAC3D,6BAAuBG;AADoC,KAA7C,EAEbpB,MAAM,CAACuB,YAAP,CAAoBf,KAApB,CAFa,CAAhB;AAGA,WAAOT,KAAK,CAACyB,aAAN,CAAoB,KAApB,EAA2B;AAChCN,MAAAA,EAAE,EAAEA,EAD4B;AAEhCC,MAAAA,KAAK,EAAEA,KAFyB;AAGhCF,MAAAA,SAAS,EAAEI,OAHqB;AAIhCI,MAAAA,GAAG,EAAEC,WAAW,IAAI;AAClB,aAAKhB,WAAL,CAAiB,IAAjB,IAAyBgB,WAAzB;AACD;AAN+B,KAA3B,EAOJ,KAAKC,KAAL,CAAW,SAAX,CAPI,CAAP;AAQD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKC,IAAL,CAAUC,EAAV,CAAaC,mBAAb,CAAiC,OAAjC,EAA0C,KAAKnB,OAA/C;AACD;;AAEDoB,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,IAAL,CAAUC,EAAV,CAAaG,gBAAb,CAA8B,OAA9B,EAAuC,KAAKrB,OAA5C;AACD;;AAED,MAAIe,KAAJ,GAAY;AACV,WAAOxB,qBAAqB,CAAC,KAAKK,KAAN,CAA5B;AACD;;AAEDM,EAAAA,aAAa,CAACoB,MAAD,EAAS,GAAGC,IAAZ,EAAkB;AAC7B,WAAOjC,6BAA6B,CAAC,IAAD,EAAOgC,MAAP,EAAe,GAAGC,IAAlB,CAApC;AACD;;AAED,MAAIN,IAAJ,GAAW;AACT,WAAO,KAAKnB,WAAZ;AACD;;AAED,MAAImB,IAAJ,CAASA,IAAT,EAAe,CAAE;;AAxD0B;;AA4D7CzB,wBAAwB,CAACC,cAAD,EAAiB+B,MAAM,CAACC,MAAP,CAAc;AACrDnB,EAAAA,EAAE,EAAE,CAACoB,MAAD,EAASC,MAAT,CADiD;AAErDtB,EAAAA,SAAS,EAAEqB,MAF0C;AAGrDnB,EAAAA,KAAK,EAAEiB,MAH8C;AAIrDhB,EAAAA,IAAI,EAAEoB;AAJ+C,CAAd,EAKtCxC,MAAM,CAACyC,UAL+B,CAAjB,CAAxB;;AAOApC,cAAc,CAACqC,WAAf,GAA6B,kBAA7B;AACA,eAAerC,cAAf","sourcesContent":["import React from 'react';\nimport Mixins from '../utils/mixins';\nimport Utils from '../utils/utils';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7ActionsLabel extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onClick']);\n    })();\n  }\n\n  onClick(event) {\n    this.dispatchEvent('click', event);\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      className,\n      id,\n      style,\n      bold\n    } = props;\n    const classes = Utils.classNames(className, 'actions-label', {\n      'actions-button-bold': bold\n    }, Mixins.colorClasses(props));\n    return React.createElement('div', {\n      id: id,\n      style: style,\n      className: classes,\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      }\n    }, this.slots['default']);\n  }\n\n  componentWillUnmount() {\n    this.refs.el.removeEventListener('click', this.onClick);\n  }\n\n  componentDidMount() {\n    this.refs.el.addEventListener('click', this.onClick);\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7ActionsLabel, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  bold: Boolean\n}, Mixins.colorProps));\n\nF7ActionsLabel.displayName = 'f7-actions-label';\nexport default F7ActionsLabel;"]},"metadata":{},"sourceType":"module"}