{"ast":null,"code":"import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentWatch from '../runtime-helpers/react-component-watch.js';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7TextEditor extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, 'onChange onInput onFocus onBlur onButtonClick onKeyboardOpen onKeyboardClose onPopoverOpen onPopoverClose'.split(' '));\n    })();\n  }\n\n  onChange(editor, value) {\n    this.dispatchEvent('texteditor:change textEditorChange', value);\n  }\n\n  onInput() {\n    this.dispatchEvent('texteditor:change textEditorChange');\n  }\n\n  onFocus() {\n    this.dispatchEvent('texteditor:focus textEditorFocus');\n  }\n\n  onBlur() {\n    this.dispatchEvent('texteditor:blur textEditorBlur');\n  }\n\n  onButtonClick(editor, button) {\n    this.dispatchEvent('texteditor:buttonclick textEditorButtonClick', button);\n  }\n\n  onKeyboardOpen() {\n    this.dispatchEvent('texteditor:keyboardopen textEditorKeyboardOpen');\n  }\n\n  onKeyboardClose() {\n    this.dispatchEvent('texteditor:keyboardclose textEditorKeyboardClose');\n  }\n\n  onPopoverOpen() {\n    this.dispatchEvent('texteditor:popoveropen textEditorPopoverOpen');\n  }\n\n  onPopoverClose() {\n    this.dispatchEvent('texteditor:popoverclose textEditorPopoverClose');\n  }\n\n  render() {\n    const props = this.props;\n    const {\n      className,\n      id,\n      style,\n      resizable\n    } = props;\n    const classes = Utils.classNames(className, 'text-editor', resizable && 'text-editor-resizable', Mixins.colorClasses(props));\n    return React.createElement('div', {\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      id: id,\n      style: style,\n      className: classes\n    }, this.slots['root-start'], React.createElement('div', {\n      className: 'text-editor-content',\n      contentEditable: true\n    }, this.slots['default']), this.slots['root-end'], this.slots['root']);\n  }\n\n  componentWillUnmount() {\n    if (this.f7TextEditor && this.f7TextEditor.destroy) {\n      this.f7TextEditor.destroy();\n    }\n  }\n\n  componentDidMount() {\n    const props = this.props;\n    const {\n      mode,\n      value,\n      buttons,\n      customButtons,\n      dividers,\n      imageUrlText,\n      linkUrlText,\n      placeholder,\n      clearFormattingOnPaste\n    } = props;\n    const params = Utils.noUndefinedProps({\n      el: this.refs.el,\n      mode,\n      value,\n      buttons,\n      customButtons,\n      dividers,\n      imageUrlText,\n      linkUrlText,\n      placeholder,\n      clearFormattingOnPaste,\n      on: {\n        change: this.onChange,\n        input: this.onInput,\n        focus: this.onFocus,\n        blur: this.onBlur,\n        buttonClick: this.onButtonClick,\n        keyboardOpen: this.onKeyboardOpen,\n        keyboardClose: this.onKeyboardClose,\n        popoverOpen: this.onPopoverOpen,\n        popoverClose: this.onPopoverClose\n      }\n    });\n    this.$f7ready(f7 => {\n      this.f7TextEditor = f7.textEditor.create(params);\n    });\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n  componentDidUpdate(prevProps, prevState) {\n    __reactComponentWatch(this, 'props.value', prevProps, prevState, () => {\n      if (this.f7TextEditor) {\n        this.f7TextEditor.setValue(this.props.value);\n      }\n    });\n  }\n\n}\n\n__reactComponentSetProps(F7TextEditor, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object\n}, Mixins.colorProps, {\n  mode: {\n    type: String,\n    default: undefined\n  },\n  value: {\n    type: String,\n    default: undefined\n  },\n  buttons: Array,\n  customButtons: Object,\n  dividers: {\n    type: Boolean,\n    default: undefined\n  },\n  imageUrlText: {\n    type: String,\n    default: undefined\n  },\n  linkUrlText: {\n    type: String,\n    default: undefined\n  },\n  placeholder: {\n    type: String,\n    default: undefined\n  },\n  clearFormattingOnPaste: {\n    type: Boolean,\n    default: undefined\n  },\n  resizable: {\n    type: Boolean,\n    default: false\n  }\n}));\n\nF7TextEditor.displayName = 'f7-text-editor';\nexport default F7TextEditor;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/components/text-editor.js"],"names":["React","Utils","Mixins","__reactComponentWatch","__reactComponentDispatchEvent","__reactComponentSlots","__reactComponentSetProps","F7TextEditor","Component","constructor","props","context","__reactRefs","bindMethods","split","onChange","editor","value","dispatchEvent","onInput","onFocus","onBlur","onButtonClick","button","onKeyboardOpen","onKeyboardClose","onPopoverOpen","onPopoverClose","render","className","id","style","resizable","classes","classNames","colorClasses","createElement","ref","__reactNode","slots","contentEditable","componentWillUnmount","f7TextEditor","destroy","componentDidMount","mode","buttons","customButtons","dividers","imageUrlText","linkUrlText","placeholder","clearFormattingOnPaste","params","noUndefinedProps","el","refs","on","change","input","focus","blur","buttonClick","keyboardOpen","keyboardClose","popoverOpen","popoverClose","$f7ready","f7","textEditor","create","events","args","componentDidUpdate","prevProps","prevState","setValue","Object","assign","String","Number","colorProps","type","default","undefined","Array","Boolean","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentWatch from '../runtime-helpers/react-component-watch.js';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7TextEditor extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, 'onChange onInput onFocus onBlur onButtonClick onKeyboardOpen onKeyboardClose onPopoverOpen onPopoverClose'.split(' '));\n    })();\n  }\n\n  onChange(editor, value) {\n    this.dispatchEvent('texteditor:change textEditorChange', value);\n  }\n\n  onInput() {\n    this.dispatchEvent('texteditor:change textEditorChange');\n  }\n\n  onFocus() {\n    this.dispatchEvent('texteditor:focus textEditorFocus');\n  }\n\n  onBlur() {\n    this.dispatchEvent('texteditor:blur textEditorBlur');\n  }\n\n  onButtonClick(editor, button) {\n    this.dispatchEvent('texteditor:buttonclick textEditorButtonClick', button);\n  }\n\n  onKeyboardOpen() {\n    this.dispatchEvent('texteditor:keyboardopen textEditorKeyboardOpen');\n  }\n\n  onKeyboardClose() {\n    this.dispatchEvent('texteditor:keyboardclose textEditorKeyboardClose');\n  }\n\n  onPopoverOpen() {\n    this.dispatchEvent('texteditor:popoveropen textEditorPopoverOpen');\n  }\n\n  onPopoverClose() {\n    this.dispatchEvent('texteditor:popoverclose textEditorPopoverClose');\n  }\n\n  render() {\n    const props = this.props;\n    const {\n      className,\n      id,\n      style,\n      resizable\n    } = props;\n    const classes = Utils.classNames(className, 'text-editor', resizable && 'text-editor-resizable', Mixins.colorClasses(props));\n    return React.createElement('div', {\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      id: id,\n      style: style,\n      className: classes\n    }, this.slots['root-start'], React.createElement('div', {\n      className: 'text-editor-content',\n      contentEditable: true\n    }, this.slots['default']), this.slots['root-end'], this.slots['root']);\n  }\n\n  componentWillUnmount() {\n    if (this.f7TextEditor && this.f7TextEditor.destroy) {\n      this.f7TextEditor.destroy();\n    }\n  }\n\n  componentDidMount() {\n    const props = this.props;\n    const {\n      mode,\n      value,\n      buttons,\n      customButtons,\n      dividers,\n      imageUrlText,\n      linkUrlText,\n      placeholder,\n      clearFormattingOnPaste\n    } = props;\n    const params = Utils.noUndefinedProps({\n      el: this.refs.el,\n      mode,\n      value,\n      buttons,\n      customButtons,\n      dividers,\n      imageUrlText,\n      linkUrlText,\n      placeholder,\n      clearFormattingOnPaste,\n      on: {\n        change: this.onChange,\n        input: this.onInput,\n        focus: this.onFocus,\n        blur: this.onBlur,\n        buttonClick: this.onButtonClick,\n        keyboardOpen: this.onKeyboardOpen,\n        keyboardClose: this.onKeyboardClose,\n        popoverOpen: this.onPopoverOpen,\n        popoverClose: this.onPopoverClose\n      }\n    });\n    this.$f7ready(f7 => {\n      this.f7TextEditor = f7.textEditor.create(params);\n    });\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n  componentDidUpdate(prevProps, prevState) {\n    __reactComponentWatch(this, 'props.value', prevProps, prevState, () => {\n      if (this.f7TextEditor) {\n        this.f7TextEditor.setValue(this.props.value);\n      }\n    });\n  }\n\n}\n\n__reactComponentSetProps(F7TextEditor, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object\n}, Mixins.colorProps, {\n  mode: {\n    type: String,\n    default: undefined\n  },\n  value: {\n    type: String,\n    default: undefined\n  },\n  buttons: Array,\n  customButtons: Object,\n  dividers: {\n    type: Boolean,\n    default: undefined\n  },\n  imageUrlText: {\n    type: String,\n    default: undefined\n  },\n  linkUrlText: {\n    type: String,\n    default: undefined\n  },\n  placeholder: {\n    type: String,\n    default: undefined\n  },\n  clearFormattingOnPaste: {\n    type: Boolean,\n    default: undefined\n  },\n  resizable: {\n    type: Boolean,\n    default: false\n  }\n}));\n\nF7TextEditor.displayName = 'f7-text-editor';\nexport default F7TextEditor;"]},"metadata":{},"sourceType":"module"}