{"ast":null,"code":"export default function (component, watchFor, prevProps, prevState, callback) {\n  if (!callback) return;\n  let newValue;\n  let oldValue;\n\n  if (watchFor.indexOf('props') === 0) {\n    newValue = component.props;\n    oldValue = prevProps;\n  } else if (watchFor.indexOf('state') === 0) {\n    newValue = component.state;\n    oldValue = prevState;\n  } // state and props has 5 letters\n\n\n  watchFor.slice(5).split('.').filter(part => part).forEach(part => {\n    if (typeof newValue !== 'undefined' && newValue !== null) {\n      newValue = newValue[part];\n    }\n\n    if (typeof oldValue !== 'undefined' && oldValue !== null) {\n      oldValue = oldValue[part];\n    }\n  });\n  if (oldValue === newValue) return;\n  if (callback) callback(newValue, oldValue);\n}","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/runtime-helpers/react-component-watch.js"],"names":["component","watchFor","prevProps","prevState","callback","newValue","oldValue","indexOf","props","state","slice","split","filter","part","forEach"],"mappings":"AAAA,eAAe,UAAUA,SAAV,EAAqBC,QAArB,EAA+BC,SAA/B,EAA0CC,SAA1C,EAAqDC,QAArD,EAA+D;AAC5E,MAAI,CAACA,QAAL,EAAe;AAEf,MAAIC,QAAJ;AACA,MAAIC,QAAJ;;AAEA,MAAIL,QAAQ,CAACM,OAAT,CAAiB,OAAjB,MAA8B,CAAlC,EAAqC;AACnCF,IAAAA,QAAQ,GAAGL,SAAS,CAACQ,KAArB;AACAF,IAAAA,QAAQ,GAAGJ,SAAX;AACD,GAHD,MAGO,IAAID,QAAQ,CAACM,OAAT,CAAiB,OAAjB,MAA8B,CAAlC,EAAqC;AAC1CF,IAAAA,QAAQ,GAAGL,SAAS,CAACS,KAArB;AACAH,IAAAA,QAAQ,GAAGH,SAAX;AACD,GAZ2E,CAa5E;;;AACAF,EAAAA,QAAQ,CAACS,KAAT,CAAe,CAAf,EAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,MAA7B,CAAoCC,IAAI,IAAIA,IAA5C,EAAkDC,OAAlD,CAA2DD,IAAD,IAAU;AAClE,QAAI,OAAOR,QAAP,KAAoB,WAApB,IAAmCA,QAAQ,KAAK,IAApD,EAA0D;AACxDA,MAAAA,QAAQ,GAAGA,QAAQ,CAACQ,IAAD,CAAnB;AACD;;AACD,QAAI,OAAOP,QAAP,KAAoB,WAApB,IAAmCA,QAAQ,KAAK,IAApD,EAA0D;AACxDA,MAAAA,QAAQ,GAAGA,QAAQ,CAACO,IAAD,CAAnB;AACD;AACF,GAPD;AASA,MAAIP,QAAQ,KAAKD,QAAjB,EAA2B;AAE3B,MAAID,QAAJ,EAAcA,QAAQ,CAACC,QAAD,EAAWC,QAAX,CAAR;AACf","sourcesContent":["export default function (component, watchFor, prevProps, prevState, callback) {\n  if (!callback) return;\n\n  let newValue;\n  let oldValue;\n\n  if (watchFor.indexOf('props') === 0) {\n    newValue = component.props;\n    oldValue = prevProps;\n  } else if (watchFor.indexOf('state') === 0) {\n    newValue = component.state;\n    oldValue = prevState;\n  }\n  // state and props has 5 letters\n  watchFor.slice(5).split('.').filter(part => part).forEach((part) => {\n    if (typeof newValue !== 'undefined' && newValue !== null) {\n      newValue = newValue[part];\n    }\n    if (typeof oldValue !== 'undefined' && oldValue !== null) {\n      oldValue = oldValue[part];\n    }\n  });\n\n  if (oldValue === newValue) return;\n\n  if (callback) callback(newValue, oldValue);\n}\n"]},"metadata":{},"sourceType":"module"}