{"ast":null,"code":"var _jsxFileName = \"/home/faraz/courses/SE/myapp/src/components/photographersSelection.jsx\";\n//Comments by Faraz, please contact him in case of queries\nimport React, { Component } from \"react\";\nimport Recphoto from \"../assets/Recommend.jpg\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport axios from \"axios\";\nimport PhotographersCard from \"./photographersCard\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\n\nclass PhotographerSelection extends Component {\n  constructor(props) {\n    // constructor\n    super(props);\n    this.state = {\n      photographers: [],\n      categoryKey: this.props.match.params.id,\n      //to catch the Category ID recieved from previous page use console.log(this.props) to see props coming from previous pages\n      photographerKeys: []\n    };\n    this.jumbotronCode = this.jumbotronCode.bind(this); //renders the jumbotron\n\n    this.getPhotographers = this.getPhotographers.bind(this); //gets the photographer profiles of that particular category clicked\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  jumbotronCode() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundImage: \"url(\" + Recphoto + \")\",\n        paddingTop: 50,\n        padding: 50,\n        paddingBottom: 50,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        width: \"100vw\",\n        height: \"70vh\"\n      },\n      className: \"jumbotron jumbotron-fluid\",\n      className: \"text-right p-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-4\",\n      className: \"text-center text-white pr-auto pt-auto pb-auto mt-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"Wedding\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead medium\",\n      className: \"text-center text-white pr-auto mt-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Fill the form below and we will get back to you with a\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 67\n      }\n    }), \"photographer that best suits your needs. You'll have a\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 67\n      }\n    }), \"photographer in less than 24 hours!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  getPhotographers(photographerKeys) {\n    photographerKeys.map(photographerKey => {\n      axios //sending a get request to get all the photographers of the category from Mongo\n      .get(\"http://localhost:5000/photographers/\" + photographerKey.Key).then(res => {\n        this.setState({\n          photographers: this.state.photographers.concat([//storing all the photographer ids and their name values in my local state array\n          {\n            Key: res.data._id,\n            name: res.data.Name,\n            level: res.data.Level,\n            range: res.data.Range\n          }])\n        }); // console.log(this.state.photographers);\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n  }\n\n  handleClick() {\n    console.log(Event);\n  }\n\n  componentDidMount() {\n    //function runs at the start of component loading\n    axios //sending a get request to get all the photographers of the category from Mongo\n    .get(\"http://localhost:5000/categories/\" + this.state.categoryKey).then(res => {\n      res.data.photographers.map(entree => this.setState({\n        photographerKeys: this.state.photographerKeys.concat([//storing all the photographer ids of a particular category in my local state array\n        {\n          Key: entree\n        }])\n      }));\n      this.getPhotographers(this.state.photographerKeys);\n    }).catch(error => {\n      console.log(error);\n    }); // console.log(this.state.photographerKeys);\n  }\n\n  render() {\n    let cards = this.state.photographers.map(Photographer => {\n      return /*#__PURE__*/React.createElement(Col, {\n        lg: \"auto\",\n        sm: \"auto\",\n        md: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(PhotographersCard, {\n        Photographer: Photographer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, this.jumbotronCode(), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n      type: \"radio\",\n      name: \"options\",\n      defaultValue: 1,\n      onClick: this.handleClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButton, {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(ToggleButton, {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"Silver\"), /*#__PURE__*/React.createElement(ToggleButton, {\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, \"Gold\"), /*#__PURE__*/React.createElement(ToggleButton, {\n      value: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, \"Platinum\"))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      lg: \"auto\",\n      sm: \"auto\",\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, cards)));\n  }\n\n}\n\nexport default PhotographerSelection;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/src/components/photographersSelection.jsx"],"names":["React","Component","Recphoto","Container","Row","Col","axios","PhotographersCard","ToggleButton","ToggleButtonGroup","PhotographerSelection","constructor","props","state","photographers","categoryKey","match","params","id","photographerKeys","jumbotronCode","bind","getPhotographers","handleClick","backgroundImage","paddingTop","padding","paddingBottom","backgroundPosition","backgroundSize","backgroundRepeat","width","height","map","photographerKey","get","Key","then","res","setState","concat","data","_id","name","Name","level","Level","range","Range","catch","error","console","log","Event","componentDidMount","entree","render","cards","Photographer"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;;AAEA,MAAMC,qBAAN,SAAoCT,SAApC,CAA8C;AAC5CU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,EADJ;AAEXC,MAAAA,WAAW,EAAE,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAF1B;AAE8B;AACzCC,MAAAA,gBAAgB,EAAE;AAHP,KAAb;AAMA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB,CATiB,CASmC;;AACpD,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB,CAViB,CAUyC;;AAC1D,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,aAAa,GAAG;AACd,wBACE;AACE,MAAA,KAAK,EAAE;AACLI,QAAAA,eAAe,EAAE,SAAStB,QAAT,GAAoB,GADhC;AAELuB,QAAAA,UAAU,EAAE,EAFP;AAGLC,QAAAA,OAAO,EAAE,EAHJ;AAILC,QAAAA,aAAa,EAAE,EAJV;AAKLC,QAAAA,kBAAkB,EAAE,QALf;AAMLC,QAAAA,cAAc,EAAE,OANX;AAOLC,QAAAA,gBAAgB,EAAE,WAPb;AAQLC,QAAAA,KAAK,EAAE,OARF;AASLC,QAAAA,MAAM,EAAE;AATH,OADT;AAYE,MAAA,SAAS,EAAC,2BAZZ;AAaE,MAAA,SAAS,EAAC,gBAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAeE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,SAAS,EAAC,wDAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAOE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,SAAS,EAAC,wCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAIwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJxD,yEAKwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALxD,sDAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAPF,CAfF,CADF;AAmCD;;AAEDV,EAAAA,gBAAgB,CAACH,gBAAD,EAAmB;AACjCA,IAAAA,gBAAgB,CAACc,GAAjB,CAAsBC,eAAD,IAAqB;AACxC5B,MAAAA,KAAK,CAAC;AAAD,OACF6B,GADH,CACO,yCAAyCD,eAAe,CAACE,GADhE,EAEGC,IAFH,CAESC,GAAD,IAAS;AACb,aAAKC,QAAL,CAAc;AACZzB,UAAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC,aAAX,CAAyB0B,MAAzB,CAAgC,CAC7C;AACA;AACEJ,YAAAA,GAAG,EAAEE,GAAG,CAACG,IAAJ,CAASC,GADhB;AAEEC,YAAAA,IAAI,EAAEL,GAAG,CAACG,IAAJ,CAASG,IAFjB;AAGEC,YAAAA,KAAK,EAAEP,GAAG,CAACG,IAAJ,CAASK,KAHlB;AAIEC,YAAAA,KAAK,EAAET,GAAG,CAACG,IAAJ,CAASO;AAJlB,WAF6C,CAAhC;AADH,SAAd,EADa,CAYb;AACD,OAfH,EAgBGC,KAhBH,CAgBUC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAlBH;AAmBD,KApBD;AAqBD;;AAED3B,EAAAA,WAAW,GAAG;AACZ4B,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACAhD,IAAAA,KAAK,CAAC;AAAD,KACF6B,GADH,CACO,sCAAsC,KAAKtB,KAAL,CAAWE,WADxD,EAEGsB,IAFH,CAESC,GAAD,IAAS;AACbA,MAAAA,GAAG,CAACG,IAAJ,CAAS3B,aAAT,CAAuBmB,GAAvB,CAA4BsB,MAAD,IACzB,KAAKhB,QAAL,CAAc;AACZpB,QAAAA,gBAAgB,EAAE,KAAKN,KAAL,CAAWM,gBAAX,CAA4BqB,MAA5B,CAAmC,CACnD;AACA;AACEJ,UAAAA,GAAG,EAAEmB;AADP,SAFmD,CAAnC;AADN,OAAd,CADF;AAUA,WAAKjC,gBAAL,CAAsB,KAAKT,KAAL,CAAWM,gBAAjC;AACD,KAdH,EAeG8B,KAfH,CAeUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAjBH,EAFkB,CAoBlB;AACD;;AACDM,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,KAAK5C,KAAL,CAAWC,aAAX,CAAyBmB,GAAzB,CAA8ByB,YAAD,IAAkB;AACzD,0BACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,MAAR;AAAe,QAAA,EAAE,EAAC,MAAlB;AAAyB,QAAA,EAAE,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,iBAAD;AAAmB,QAAA,YAAY,EAAEA,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KANW,CAAZ;AAOA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKtC,aAAL,EADH,eAEE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,iBAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,YAAY,EAAE,CAHhB;AAIE,MAAA,OAAO,EAAE,KAAKG,WAAL,EAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,eAOE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CADF,CAFF,eAeE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,EAAE,EAAC,MAAlB;AAAyB,MAAA,EAAE,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGkC,KAFH,CAFF,CAfF,CADF;AAyBD;;AAxI2C;;AA2I9C,eAAe/C,qBAAf","sourcesContent":["//Comments by Faraz, please contact him in case of queries\n\nimport React, { Component } from \"react\";\nimport Recphoto from \"../assets/Recommend.jpg\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport axios from \"axios\";\nimport PhotographersCard from \"./photographersCard\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\n\nclass PhotographerSelection extends Component {\n  constructor(props) {\n    // constructor\n    super(props);\n    this.state = {\n      photographers: [],\n      categoryKey: this.props.match.params.id, //to catch the Category ID recieved from previous page use console.log(this.props) to see props coming from previous pages\n      photographerKeys: [],\n    };\n\n    this.jumbotronCode = this.jumbotronCode.bind(this); //renders the jumbotron\n    this.getPhotographers = this.getPhotographers.bind(this); //gets the photographer profiles of that particular category clicked\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  jumbotronCode() {\n    return (\n      <div\n        style={{\n          backgroundImage: \"url(\" + Recphoto + \")\",\n          paddingTop: 50,\n          padding: 50,\n          paddingBottom: 50,\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n          width: \"100vw\",\n          height: \"70vh\",\n        }}\n        className=\"jumbotron jumbotron-fluid\"\n        className=\"text-right p-5\"\n      >\n        <div className=\"container\">\n          <h1\n            className=\"display-4\"\n            className=\"text-center text-white pr-auto pt-auto pb-auto mt-auto\"\n          >\n            Wedding\n          </h1>\n          <p\n            className=\"lead medium\"\n            className=\"text-center text-white pr-auto mt-auto\"\n          >\n            Fill the form below and we will get back to you with a<br />\n            photographer that best suits your needs. You'll have a<br />\n            photographer in less than 24 hours!\n            <br />\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  getPhotographers(photographerKeys) {\n    photographerKeys.map((photographerKey) => {\n      axios //sending a get request to get all the photographers of the category from Mongo\n        .get(\"http://localhost:5000/photographers/\" + photographerKey.Key)\n        .then((res) => {\n          this.setState({\n            photographers: this.state.photographers.concat([\n              //storing all the photographer ids and their name values in my local state array\n              {\n                Key: res.data._id,\n                name: res.data.Name,\n                level: res.data.Level,\n                range: res.data.Range,\n              },\n            ]),\n          });\n          // console.log(this.state.photographers);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    });\n  }\n\n  handleClick() {\n    console.log(Event);\n  }\n\n  componentDidMount() {\n    //function runs at the start of component loading\n    axios //sending a get request to get all the photographers of the category from Mongo\n      .get(\"http://localhost:5000/categories/\" + this.state.categoryKey)\n      .then((res) => {\n        res.data.photographers.map((entree) =>\n          this.setState({\n            photographerKeys: this.state.photographerKeys.concat([\n              //storing all the photographer ids of a particular category in my local state array\n              {\n                Key: entree,\n              },\n            ]),\n          })\n        );\n        this.getPhotographers(this.state.photographerKeys);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    // console.log(this.state.photographerKeys);\n  }\n  render() {\n    let cards = this.state.photographers.map((Photographer) => {\n      return (\n        <Col lg=\"auto\" sm=\"auto\" md=\"auto\">\n          <PhotographersCard Photographer={Photographer} />\n        </Col>\n      );\n    });\n    return (\n      <React.Fragment>\n        {this.jumbotronCode()}\n        <Container fluid>\n          <ToggleButtonGroup\n            type=\"radio\"\n            name=\"options\"\n            defaultValue={1}\n            onClick={this.handleClick()}\n          >\n            <ToggleButton value={1}>All</ToggleButton>\n            <ToggleButton value={2}>Silver</ToggleButton>\n            <ToggleButton value={3}>Gold</ToggleButton>\n            <ToggleButton value={4}>Platinum</ToggleButton>\n          </ToggleButtonGroup>\n        </Container>\n        <Container fluid>\n          {/* For a responsive grid all things set to auto */}\n          <Row lg=\"auto\" sm=\"auto\" md=\"auto\">\n            {/* loading the card component in the grid from PhotographersCard */}\n            {cards}\n          </Row>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PhotographerSelection;\n"]},"metadata":{},"sourceType":"module"}