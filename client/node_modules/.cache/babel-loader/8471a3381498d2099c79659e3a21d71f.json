{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stuff to move\\\\Work\\\\SE\\\\deployed\\\\client\\\\src\\\\components\\\\adminPortal.jsx\";\nimport React, { Component } from \"react\";\nimport MaterialTable from \"material-table\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Print from \"@material-ui/icons/Print\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getOrders } from \"../actions/orderActions\"; //stored as a prop\n\nimport PropTypes from \"prop-types\"; // validation\n\nclass OrdersList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [{\n        title: \"Name\",\n        field: \"ClientName\"\n      }, {\n        title: \"Contact\",\n        field: \"ContactNumber\"\n      }, {\n        title: \"Budget\",\n        field: \"Budget\",\n        type: \"numeric\"\n      }, {\n        title: \"Date\",\n        field: \"date\",\n        type: \"date\"\n      }, {\n        title: \"Approved\",\n        field: \"Approved\",\n        lookup: {\n          1: \"Yes\",\n          2: \"No\"\n        }\n      }],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.getOrders();\n    this.setState({\n      data: this.props.orders.ordersList\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, this.props.isAuthenticated ? /*#__PURE__*/React.createElement(MaterialTable, {\n      title: \"Editable Preview\",\n      columns: this.state.columns,\n      data: this.state.data,\n      editable: {\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            {\n              const data = this.state.data;\n              const index = data.indexOf(oldData);\n              data[index] = newData;\n              this.setState({\n                data\n              }, () => resolve());\n            }\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            {\n              let data = this.state.data;\n              const index = data.indexOf(oldData);\n              data.splice(index, 1);\n              this.setState({\n                data\n              }, () => resolve());\n            }\n            resolve();\n          }, 1000);\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nOrdersList.tableIcons = {\n  // Add: forwardRef((props, ref) => <Add {...props} ref={ref} color='action' />),\n  Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 37\n    }\n  }))),\n  Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 39\n    }\n  }))),\n  Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 39\n    }\n  }))),\n  Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 40\n    }\n  }))),\n  DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }))),\n  Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 38\n    }\n  }))),\n  Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 40\n    }\n  }))),\n  Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 40\n    }\n  }))),\n  FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 43\n    }\n  }))),\n  LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 42\n    }\n  }))),\n  NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 42\n    }\n  }))),\n  PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }))),\n  Print: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Print, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 39\n    }\n  }))),\n  ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 45\n    }\n  }))),\n  Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 40\n    }\n  }))),\n  SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowUpward, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 43\n    }\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }))),\n  ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __self: OrdersList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 44\n    }\n  })))\n};\nOrdersList.propTypes = {\n  getOrders: PropTypes.func.isRequired,\n  orders: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  // to use the state as props\n  orders: state.orders,\n  // orders is coming from root reducer at /reducers/index.js\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  getOrders\n})(OrdersList); //exporting a component make it reusable and this is the beauty of react","map":{"version":3,"sources":["D:/Stuff to move/Work/SE/deployed/client/src/components/adminPortal.jsx"],"names":["React","Component","MaterialTable","AddBox","ArrowUpward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Print","Remove","SaveAlt","Search","ViewColumn","Redirect","connect","getOrders","PropTypes","OrdersList","constructor","props","state","columns","title","field","type","lookup","data","componentDidMount","setState","orders","ordersList","render","isAuthenticated","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","index","indexOf","onRowDelete","splice","tableIcons","Add","forwardRef","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","propTypes","func","isRequired","object","bool","error","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport MaterialTable from \"material-table\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Print from \"@material-ui/icons/Print\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getOrders } from \"../actions/orderActions\"; //stored as a prop\nimport PropTypes from \"prop-types\"; // validation\n\nclass OrdersList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [\n        { title: \"Name\", field: \"ClientName\" },\n        { title: \"Contact\", field: \"ContactNumber\" },\n        { title: \"Budget\", field: \"Budget\", type: \"numeric\" },\n        { title: \"Date\", field: \"date\", type: \"date\" },\n        {\n          title: \"Approved\",\n          field: \"Approved\",\n          lookup: { 1: \"Yes\", 2: \"No\" },\n        },\n      ],\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    this.props.getOrders();\n    this.setState({\n      data: this.props.orders.ordersList,\n    });\n  }\n\n  static tableIcons = {\n    // Add: forwardRef((props, ref) => <Add {...props} ref={ref} color='action' />),\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n      <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n      <ChevronLeft {...props} ref={ref} />\n    )),\n    Print: forwardRef((props, ref) => <Print {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => (\n      <Remove {...props} ref={ref} />\n    )),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n  };\n\n  static propTypes = {\n    getOrders: PropTypes.func.isRequired,\n    orders: PropTypes.object.isRequired,\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n  };\n\n  render() {\n    return (\n      <Container maxWidth=\"lg\">\n        {this.props.isAuthenticated ? (\n          <MaterialTable\n            title=\"Editable Preview\"\n            columns={this.state.columns}\n            data={this.state.data}\n            editable={{\n              onRowUpdate: (newData, oldData) =>\n                new Promise((resolve, reject) => {\n                  setTimeout(() => {\n                    {\n                      const data = this.state.data;\n                      const index = data.indexOf(oldData);\n                      data[index] = newData;\n                      this.setState({ data }, () => resolve());\n                    }\n                    resolve();\n                  }, 1000);\n                }),\n              onRowDelete: (oldData) =>\n                new Promise((resolve, reject) => {\n                  setTimeout(() => {\n                    {\n                      let data = this.state.data;\n                      const index = data.indexOf(oldData);\n                      data.splice(index, 1);\n                      this.setState({ data }, () => resolve());\n                    }\n                    resolve();\n                  }, 1000);\n                }),\n            }}\n          />\n        ) : (\n          <Redirect to=\"/login\" />\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // to use the state as props\n  orders: state.orders, // orders is coming from root reducer at /reducers/index.js\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n});\n\nexport default connect(mapStateToProps, { getOrders })(OrdersList); //exporting a component make it reusable and this is the beauty of react\n"]},"metadata":{},"sourceType":"module"}