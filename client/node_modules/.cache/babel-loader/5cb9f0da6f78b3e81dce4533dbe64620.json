{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/home/faraz/courses/SE/myapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"/home/faraz/courses/SE/myapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveStyle = toHaveStyle;\n\nvar _jestMatcherUtils = require(\"jest-matcher-utils\");\n\nvar _jestDiff = _interopRequireDefault(require(\"jest-diff\"));\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _utils = require(\"./utils\");\n\nfunction getStyleDeclaration(document, css) {\n  var styles = {}; // The next block is necessary to normalize colors\n\n  var copy = document.createElement('div');\n  Object.keys(css).forEach(function (property) {\n    copy.style[property] = css[property];\n    styles[property] = copy.style[property];\n  });\n  return styles;\n}\n\nfunction isSubset(styles, computedStyle) {\n  return Object.entries(styles).every(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        prop = _ref2[0],\n        value = _ref2[1];\n\n    return computedStyle.getPropertyValue(prop.toLowerCase()) === value;\n  });\n}\n\nfunction printoutStyles(styles) {\n  return Object.keys(styles).sort().map(function (prop) {\n    return \"\".concat(prop, \": \").concat(styles[prop], \";\");\n  }).join('\\n');\n} // Highlights only style rules that were expected but were not found in the\n// received computed styles\n\n\nfunction expectedDiff(expected, computedStyles) {\n  var received = Array.from(computedStyles).filter(function (prop) {\n    return expected[prop];\n  }).reduce(function (obj, prop) {\n    return Object.assign(obj, _defineProperty({}, prop, computedStyles.getPropertyValue(prop)));\n  }, {});\n  var diffOutput = (0, _jestDiff.default)(printoutStyles(expected), printoutStyles(received)); // Remove the \"+ Received\" annotation because this is a one-way diff\n\n  return diffOutput.replace(\"\".concat(_chalk.default.red('+ Received'), \"\\n\"), '');\n}\n\nfunction toHaveStyle(htmlElement, css) {\n  var _this = this;\n\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveStyle, this);\n  var parsedCSS = (0, _utils.parseCSS)(css, toHaveStyle, this);\n  var getComputedStyle = htmlElement.ownerDocument.defaultView.getComputedStyle;\n  var expected = getStyleDeclaration(htmlElement.ownerDocument, parsedCSS);\n  var received = getComputedStyle(htmlElement);\n  return {\n    pass: isSubset(expected, received),\n    message: function message() {\n      var matcher = \"\".concat(_this.isNot ? '.not' : '', \".toHaveStyle\");\n      return [(0, _jestMatcherUtils.matcherHint)(matcher, 'element', ''), expectedDiff(expected, received)].join('\\n\\n');\n    }\n  };\n}","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/client/node_modules/@testing-library/jest-dom/dist/to-have-style.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","toHaveStyle","_jestMatcherUtils","_jestDiff","_chalk","_utils","getStyleDeclaration","document","css","styles","copy","createElement","keys","forEach","property","style","isSubset","computedStyle","entries","every","prop","getPropertyValue","toLowerCase","printoutStyles","sort","map","join","expectedDiff","expected","computedStyles","received","Array","from","filter","reduce","obj","assign","diffOutput","default","replace","red","htmlElement","checkHtmlElement","parsedCSS","parseCSS","getComputedStyle","ownerDocument","defaultView","pass","message","matcher","isNot","matcherHint"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveStyle = toHaveStyle;\n\nvar _jestMatcherUtils = require(\"jest-matcher-utils\");\n\nvar _jestDiff = _interopRequireDefault(require(\"jest-diff\"));\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _utils = require(\"./utils\");\n\nfunction getStyleDeclaration(document, css) {\n  const styles = {}; // The next block is necessary to normalize colors\n\n  const copy = document.createElement('div');\n  Object.keys(css).forEach(property => {\n    copy.style[property] = css[property];\n    styles[property] = copy.style[property];\n  });\n  return styles;\n}\n\nfunction isSubset(styles, computedStyle) {\n  return Object.entries(styles).every(([prop, value]) => computedStyle.getPropertyValue(prop.toLowerCase()) === value);\n}\n\nfunction printoutStyles(styles) {\n  return Object.keys(styles).sort().map(prop => `${prop}: ${styles[prop]};`).join('\\n');\n} // Highlights only style rules that were expected but were not found in the\n// received computed styles\n\n\nfunction expectedDiff(expected, computedStyles) {\n  const received = Array.from(computedStyles).filter(prop => expected[prop]).reduce((obj, prop) => Object.assign(obj, {\n    [prop]: computedStyles.getPropertyValue(prop)\n  }), {});\n  const diffOutput = (0, _jestDiff.default)(printoutStyles(expected), printoutStyles(received)); // Remove the \"+ Received\" annotation because this is a one-way diff\n\n  return diffOutput.replace(`${_chalk.default.red('+ Received')}\\n`, '');\n}\n\nfunction toHaveStyle(htmlElement, css) {\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveStyle, this);\n  const parsedCSS = (0, _utils.parseCSS)(css, toHaveStyle, this);\n  const {\n    getComputedStyle\n  } = htmlElement.ownerDocument.defaultView;\n  const expected = getStyleDeclaration(htmlElement.ownerDocument, parsedCSS);\n  const received = getComputedStyle(htmlElement);\n  return {\n    pass: isSubset(expected, received),\n    message: () => {\n      const matcher = `${this.isNot ? '.not' : ''}.toHaveStyle`;\n      return [(0, _jestMatcherUtils.matcherHint)(matcher, 'element', ''), expectedDiff(expected, received)].join('\\n\\n');\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}