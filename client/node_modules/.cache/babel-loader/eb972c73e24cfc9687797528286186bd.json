{"ast":null,"code":"export default function (props) {\n  const slots = {};\n  if (!props) return slots;\n  const children = props.children;\n\n  if (!children || children.length === 0) {\n    return slots;\n  }\n\n  function addChildToSlot(name, child) {\n    if (!slots[name]) slots[name] = [];\n    slots[name].push(child);\n  }\n\n  if (Array.isArray(children)) {\n    children.forEach(child => {\n      if (!child) return;\n      const slotName = child.props && child.props.slot || 'default';\n      addChildToSlot(slotName, child);\n    });\n  } else {\n    let slotName = 'default';\n    if (children.props && children.props.slot) slotName = children.props.slot;\n    addChildToSlot(slotName, children);\n  }\n\n  return slots;\n}","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/runtime-helpers/react-component-slots.js"],"names":["props","slots","children","length","addChildToSlot","name","child","push","Array","isArray","forEach","slotName","slot"],"mappings":"AAAA,eAAe,UAAUA,KAAV,EAAiB;AAC9B,QAAMC,KAAK,GAAG,EAAd;AACA,MAAI,CAACD,KAAL,EAAY,OAAOC,KAAP;AACZ,QAAMC,QAAQ,GAAGF,KAAK,CAACE,QAAvB;;AAEA,MAAI,CAACA,QAAD,IAAaA,QAAQ,CAACC,MAAT,KAAoB,CAArC,EAAwC;AACtC,WAAOF,KAAP;AACD;;AAED,WAASG,cAAT,CAAwBC,IAAxB,EAA8BC,KAA9B,EAAqC;AACnC,QAAI,CAACL,KAAK,CAACI,IAAD,CAAV,EAAkBJ,KAAK,CAACI,IAAD,CAAL,GAAc,EAAd;AAClBJ,IAAAA,KAAK,CAACI,IAAD,CAAL,CAAYE,IAAZ,CAAiBD,KAAjB;AACD;;AAED,MAAIE,KAAK,CAACC,OAAN,CAAcP,QAAd,CAAJ,EAA6B;AAC3BA,IAAAA,QAAQ,CAACQ,OAAT,CAAkBJ,KAAD,IAAW;AAC1B,UAAI,CAACA,KAAL,EAAY;AACZ,YAAMK,QAAQ,GAAIL,KAAK,CAACN,KAAN,IAAeM,KAAK,CAACN,KAAN,CAAYY,IAA5B,IAAqC,SAAtD;AACAR,MAAAA,cAAc,CAACO,QAAD,EAAWL,KAAX,CAAd;AACD,KAJD;AAKD,GAND,MAMO;AACL,QAAIK,QAAQ,GAAG,SAAf;AACA,QAAIT,QAAQ,CAACF,KAAT,IAAkBE,QAAQ,CAACF,KAAT,CAAeY,IAArC,EAA2CD,QAAQ,GAAGT,QAAQ,CAACF,KAAT,CAAeY,IAA1B;AAC3CR,IAAAA,cAAc,CAACO,QAAD,EAAWT,QAAX,CAAd;AACD;;AAED,SAAOD,KAAP;AACD","sourcesContent":["export default function (props) {\n  const slots = {};\n  if (!props) return slots;\n  const children = props.children;\n\n  if (!children || children.length === 0) {\n    return slots;\n  }\n\n  function addChildToSlot(name, child) {\n    if (!slots[name]) slots[name] = [];\n    slots[name].push(child);\n  }\n\n  if (Array.isArray(children)) {\n    children.forEach((child) => {\n      if (!child) return;\n      const slotName = (child.props && child.props.slot) || 'default';\n      addChildToSlot(slotName, child);\n    });\n  } else {\n    let slotName = 'default';\n    if (children.props && children.props.slot) slotName = children.props.slot;\n    addChildToSlot(slotName, children);\n  }\n\n  return slots;\n}\n"]},"metadata":{},"sourceType":"module"}