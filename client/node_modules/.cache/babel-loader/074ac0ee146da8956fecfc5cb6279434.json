{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stuff to move\\\\Work\\\\SE\\\\deployed\\\\client\\\\src\\\\components\\\\adminPortal.jsx\";\nimport React, { Component } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport MaterialTable from \"material-table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getOrders } from \"../actions/orderActions\"; //stored as a prop\n\nimport PropTypes from \"prop-types\"; // validation\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow);\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  }\n});\n\nclass OrdersList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [{\n        title: \"Name\",\n        field: \"name\"\n      }, {\n        title: \"Contact\",\n        field: \"contact\"\n      }, {\n        title: \"Budget\",\n        field: \"budget\",\n        type: \"numeric\"\n      }, {\n        title: \"Date\",\n        field: \"date\",\n        type: \"date\"\n      }, {\n        title: \"Assigned\",\n        field: \"assigned\",\n        lookup: {\n          1: \"Yes\",\n          2: \"No\"\n        }\n      }],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.getOrders();\n    this.setState({\n      data: this.props.orders.OrdersList\n    });\n  }\n\n  render() {\n    console.log(this.state.data);\n    console.log(this.props.orders.OrdersList);\n    return /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, this.props.isAuthenticated ? /*#__PURE__*/React.createElement(MaterialTable, {\n      title: \"Editable Preview\",\n      columns: this.state.columns,\n      data: this.state.data,\n      editable: {\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            {\n              const data = this.state.data;\n              const index = data.indexOf(oldData);\n              data[index] = newData;\n              this.setState({\n                data\n              }, () => resolve());\n            }\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            {\n              let data = this.state.data;\n              const index = data.indexOf(oldData);\n              data.splice(index, 1);\n              this.setState({\n                data\n              }, () => resolve());\n            }\n            resolve();\n          }, 1000);\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }) : null // <Redirect to=\"/login\" />\n    );\n  }\n\n}\n\nOrdersList.propTypes = {\n  getOrders: PropTypes.func.isRequired,\n  orders: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  // to use the state as props\n  orders: state.orders,\n  // orders is coming from root reducer at /reducers/index.js\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  getOrders\n})(withStyles(useStyles)(OrdersList)); //exporting a component make it reusable and this is the beauty of react","map":{"version":3,"sources":["D:/Stuff to move/Work/SE/deployed/client/src/components/adminPortal.jsx"],"names":["React","Component","withStyles","makeStyles","MaterialTable","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Container","Redirect","connect","getOrders","PropTypes","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","background","default","useStyles","table","minWidth","OrdersList","constructor","props","state","columns","title","field","type","lookup","data","componentDidMount","setState","orders","render","console","log","isAuthenticated","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","index","indexOf","onRowDelete","splice","propTypes","func","isRequired","object","bool","error","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport MaterialTable from \"material-table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getOrders } from \"../actions/orderActions\"; //stored as a prop\nimport PropTypes from \"prop-types\"; // validation\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nclass OrdersList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [\n        { title: \"Name\", field: \"name\" },\n        { title: \"Contact\", field: \"contact\" },\n        { title: \"Budget\", field: \"budget\", type: \"numeric\" },\n        { title: \"Date\", field: \"date\", type: \"date\" },\n        {\n          title: \"Assigned\",\n          field: \"assigned\",\n          lookup: { 1: \"Yes\", 2: \"No\" },\n        },\n      ],\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    this.props.getOrders();\n    this.setState({\n      data: this.props.orders.OrdersList,\n    });\n  }\n\n  static propTypes = {\n    getOrders: PropTypes.func.isRequired,\n    orders: PropTypes.object.isRequired,\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n  };\n\n  render() {\n    console.log(this.state.data);\n    console.log(this.props.orders.OrdersList);\n    return (\n      <Container maxWidth=\"lg\">\n        {this.props.isAuthenticated ? (\n          <MaterialTable\n            title=\"Editable Preview\"\n            columns={this.state.columns}\n            data={this.state.data}\n            editable={{\n              onRowUpdate: (newData, oldData) =>\n                new Promise((resolve, reject) => {\n                  setTimeout(() => {\n                    {\n                      const data = this.state.data;\n                      const index = data.indexOf(oldData);\n                      data[index] = newData;\n                      this.setState({ data }, () => resolve());\n                    }\n                    resolve();\n                  }, 1000);\n                }),\n              onRowDelete: (oldData) =>\n                new Promise((resolve, reject) => {\n                  setTimeout(() => {\n                    {\n                      let data = this.state.data;\n                      const index = data.indexOf(oldData);\n                      data.splice(index, 1);\n                      this.setState({ data }, () => resolve());\n                    }\n                    resolve();\n                  }, 1000);\n                }),\n            }}\n          />\n        ) : null\n        // <Redirect to=\"/login\" />\n        }\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // to use the state as props\n  orders: state.orders, // orders is coming from root reducer at /reducers/index.js\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n});\n\nexport default connect(mapStateToProps, { getOrders })(\n  withStyles(useStyles)(OrdersList)\n); //exporting a component make it reusable and this is the beauty of react\n"]},"metadata":{},"sourceType":"module"}