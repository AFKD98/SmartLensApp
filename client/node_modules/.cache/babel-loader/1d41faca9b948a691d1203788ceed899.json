{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stuff to move\\\\Work\\\\SE\\\\deployed\\\\client\\\\src\\\\components\\\\signup.jsx\";\nimport React, { Component } from \"react\";\nimport { TextField, Typography } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../actions/authActions\";\nimport { clearErrors } from \"../actions/errorActions\";\nimport { Redirect } from \"react-router-dom\";\n\nconst useStyles = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 5)\n  }\n});\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        name,\n        email,\n        password\n      } = this.state; // create user obj\n\n      const newUser = {\n        name,\n        email,\n        password\n      }; //attempt to register\n\n      this.props.register(newUser); // // close modal\n      // this.toggle();\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      errors: {},\n      msg: null\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      isAuthenticated\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      //check for reg error\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props; // const { errors, username, password, isLoading } = this.state;\n\n    return /*#__PURE__*/React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, this.props.isAuthenticated ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }) : console.log(\"not resgistered\"), /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, \"Create an account\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"Name\",\n      label: \"Username\",\n      name: \"name\",\n      autoComplete: \"name\",\n      autoFocus: true,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email\",\n      name: \"email\",\n      type: \"email\",\n      autoComplete: \"email\",\n      autoFocus: true,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, \"Sign Up\")));\n  }\n\n}\n\nSignUp.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  // to use the state as props\n  isAuthenticated: state.auth.isAuthenticated,\n  // auth is coming from root reducer at /reducers/index.js\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  register,\n  clearErrors\n})(withStyles(useStyles)(SignUp));","map":{"version":3,"sources":["D:/Stuff to move/Work/SE/deployed/client/src/components/signup.jsx"],"names":["React","Component","TextField","Typography","FormControlLabel","Checkbox","Container","Button","withStyles","PropTypes","connect","register","clearErrors","Redirect","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","SignUp","constructor","props","onChange","e","setState","target","name","value","onSubmit","preventDefault","email","password","state","newUser","errors","msg","componentDidUpdate","prevProps","error","isAuthenticated","id","render","classes","console","log","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { TextField, Typography } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../actions/authActions\";\nimport { clearErrors } from \"../actions/errorActions\";\nimport { Redirect } from \"react-router-dom\";\n\nconst useStyles = (theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 5),\n  },\n});\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      errors: {},\n      msg: null,\n    };\n  }\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      //check for reg error\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, password } = this.state;\n\n    // create user obj\n    const newUser = {\n      name,\n      email,\n      password,\n    };\n\n    //attempt to register\n    this.props.register(newUser);\n\n    // // close modal\n    // this.toggle();\n  };\n\n  render() {\n    const { classes } = this.props;\n    // const { errors, username, password, isLoading } = this.state;\n    return (\n      <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\n        {this.props.isAuthenticated ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          console.log(\"not resgistered\")\n        )}\n        <Typography component=\"h1\" variant=\"h4\">\n          Create an account\n        </Typography>\n        <form onSubmit={this.onSubmit} className={classes.form}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"Name\"\n            label=\"Username\"\n            name=\"name\"\n            autoComplete=\"name\"\n            autoFocus\n            onChange={this.onChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={this.onChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={this.onChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n        </form>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // to use the state as props\n  isAuthenticated: state.auth.isAuthenticated, // auth is coming from root reducer at /reducers/index.js\n  error: state.error,\n});\n\nexport default connect(mapStateToProps, { register, clearErrors })(\n  withStyles(useStyles)(SignUp)\n);\n"]},"metadata":{},"sourceType":"module"}