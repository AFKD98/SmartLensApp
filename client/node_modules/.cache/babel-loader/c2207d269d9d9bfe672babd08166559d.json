{"ast":null,"code":"import React from 'react';\nimport Mixins from '../utils/mixins';\nimport Utils from '../utils/utils';\nimport __reactComponentWatch from '../runtime-helpers/react-component-watch.js';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7Actions extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onOpen', 'onOpened', 'onClose', 'onClosed']);\n    })();\n  }\n\n  onOpen(instance) {\n    this.dispatchEvent('actions:open actionsOpen', instance);\n  }\n\n  onOpened(instance) {\n    this.dispatchEvent('actions:opened actionsOpened', instance);\n  }\n\n  onClose(instance) {\n    this.dispatchEvent('actions:close actionsClose', instance);\n  }\n\n  onClosed(instance) {\n    this.dispatchEvent('actions:closed actionsClosed', instance);\n  }\n\n  open(animate) {\n    const self = this;\n    if (!self.f7Actions) return undefined;\n    return self.f7Actions.open(animate);\n  }\n\n  close(animate) {\n    const self = this;\n    if (!self.f7Actions) return undefined;\n    return self.f7Actions.close(animate);\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      className,\n      id,\n      style,\n      grid\n    } = props;\n    const classes = Utils.classNames(className, 'actions-modal', {\n      'actions-grid': grid\n    }, Mixins.colorClasses(props));\n    return React.createElement('div', {\n      id: id,\n      style: style,\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      className: classes\n    }, this.slots['default']);\n  }\n\n  componentWillUnmount() {\n    const self = this;\n    if (self.f7Actions) self.f7Actions.destroy();\n    delete self.f7Actions;\n  }\n\n  componentDidMount() {\n    const self = this;\n    const el = self.refs.el;\n    if (!el) return;\n    const props = self.props;\n    const {\n      grid,\n      target,\n      convertToPopover,\n      forceToPopover,\n      opened,\n      closeByBackdropClick,\n      closeByOutsideClick,\n      closeOnEscape,\n      backdrop,\n      backdropEl\n    } = props;\n    const actionsParams = {\n      el,\n      grid,\n      on: {\n        open: self.onOpen,\n        opened: self.onOpened,\n        close: self.onClose,\n        closed: self.onClosed\n      }\n    };\n    if (target) actionsParams.targetEl = target;\n    {\n      if ('convertToPopover' in props) actionsParams.convertToPopover = convertToPopover;\n      if ('forceToPopover' in props) actionsParams.forceToPopover = forceToPopover;\n      if ('backdrop' in props) actionsParams.backdrop = backdrop;\n      if ('backdropEl' in props) actionsParams.backdropEl = backdropEl;\n      if ('closeByBackdropClick' in props) actionsParams.closeByBackdropClick = closeByBackdropClick;\n      if ('closeByOutsideClick' in props) actionsParams.closeByOutsideClick = closeByOutsideClick;\n      if ('closeOnEscape' in props) actionsParams.closeOnEscape = closeOnEscape;\n    }\n    self.$f7ready(() => {\n      self.f7Actions = self.$f7.actions.create(actionsParams);\n\n      if (opened) {\n        self.f7Actions.open(false);\n      }\n    });\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n  componentDidUpdate(prevProps, prevState) {\n    __reactComponentWatch(this, 'props.opened', prevProps, prevState, opened => {\n      const self = this;\n      if (!self.f7Actions) return;\n\n      if (opened) {\n        self.f7Actions.open();\n      } else {\n        self.f7Actions.close();\n      }\n    });\n  }\n\n}\n\n__reactComponentSetProps(F7Actions, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  opened: Boolean,\n  grid: Boolean,\n  convertToPopover: Boolean,\n  forceToPopover: Boolean,\n  target: [String, Object],\n  backdrop: Boolean,\n  backdropEl: [String, Object, window.HTMLElement],\n  closeByBackdropClick: Boolean,\n  closeByOutsideClick: Boolean,\n  closeOnEscape: Boolean\n}, Mixins.colorProps));\n\nF7Actions.displayName = 'f7-actions';\nexport default F7Actions;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/components/actions.js"],"names":["React","Mixins","Utils","__reactComponentWatch","__reactComponentDispatchEvent","__reactComponentSlots","__reactComponentSetProps","F7Actions","Component","constructor","props","context","__reactRefs","bindMethods","onOpen","instance","dispatchEvent","onOpened","onClose","onClosed","open","animate","self","f7Actions","undefined","close","render","className","id","style","grid","classes","classNames","colorClasses","createElement","ref","__reactNode","slots","componentWillUnmount","destroy","componentDidMount","el","refs","target","convertToPopover","forceToPopover","opened","closeByBackdropClick","closeByOutsideClick","closeOnEscape","backdrop","backdropEl","actionsParams","on","closed","targetEl","$f7ready","$f7","actions","create","events","args","componentDidUpdate","prevProps","prevState","Object","assign","String","Number","Boolean","window","HTMLElement","colorProps","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Mixins from '../utils/mixins';\nimport Utils from '../utils/utils';\nimport __reactComponentWatch from '../runtime-helpers/react-component-watch.js';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7Actions extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onOpen', 'onOpened', 'onClose', 'onClosed']);\n    })();\n  }\n\n  onOpen(instance) {\n    this.dispatchEvent('actions:open actionsOpen', instance);\n  }\n\n  onOpened(instance) {\n    this.dispatchEvent('actions:opened actionsOpened', instance);\n  }\n\n  onClose(instance) {\n    this.dispatchEvent('actions:close actionsClose', instance);\n  }\n\n  onClosed(instance) {\n    this.dispatchEvent('actions:closed actionsClosed', instance);\n  }\n\n  open(animate) {\n    const self = this;\n    if (!self.f7Actions) return undefined;\n    return self.f7Actions.open(animate);\n  }\n\n  close(animate) {\n    const self = this;\n    if (!self.f7Actions) return undefined;\n    return self.f7Actions.close(animate);\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      className,\n      id,\n      style,\n      grid\n    } = props;\n    const classes = Utils.classNames(className, 'actions-modal', {\n      'actions-grid': grid\n    }, Mixins.colorClasses(props));\n    return React.createElement('div', {\n      id: id,\n      style: style,\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      className: classes\n    }, this.slots['default']);\n  }\n\n  componentWillUnmount() {\n    const self = this;\n    if (self.f7Actions) self.f7Actions.destroy();\n    delete self.f7Actions;\n  }\n\n  componentDidMount() {\n    const self = this;\n    const el = self.refs.el;\n    if (!el) return;\n    const props = self.props;\n    const {\n      grid,\n      target,\n      convertToPopover,\n      forceToPopover,\n      opened,\n      closeByBackdropClick,\n      closeByOutsideClick,\n      closeOnEscape,\n      backdrop,\n      backdropEl\n    } = props;\n    const actionsParams = {\n      el,\n      grid,\n      on: {\n        open: self.onOpen,\n        opened: self.onOpened,\n        close: self.onClose,\n        closed: self.onClosed\n      }\n    };\n    if (target) actionsParams.targetEl = target;\n    {\n      if ('convertToPopover' in props) actionsParams.convertToPopover = convertToPopover;\n      if ('forceToPopover' in props) actionsParams.forceToPopover = forceToPopover;\n      if ('backdrop' in props) actionsParams.backdrop = backdrop;\n      if ('backdropEl' in props) actionsParams.backdropEl = backdropEl;\n      if ('closeByBackdropClick' in props) actionsParams.closeByBackdropClick = closeByBackdropClick;\n      if ('closeByOutsideClick' in props) actionsParams.closeByOutsideClick = closeByOutsideClick;\n      if ('closeOnEscape' in props) actionsParams.closeOnEscape = closeOnEscape;\n    }\n    self.$f7ready(() => {\n      self.f7Actions = self.$f7.actions.create(actionsParams);\n\n      if (opened) {\n        self.f7Actions.open(false);\n      }\n    });\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n  componentDidUpdate(prevProps, prevState) {\n    __reactComponentWatch(this, 'props.opened', prevProps, prevState, opened => {\n      const self = this;\n      if (!self.f7Actions) return;\n\n      if (opened) {\n        self.f7Actions.open();\n      } else {\n        self.f7Actions.close();\n      }\n    });\n  }\n\n}\n\n__reactComponentSetProps(F7Actions, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  opened: Boolean,\n  grid: Boolean,\n  convertToPopover: Boolean,\n  forceToPopover: Boolean,\n  target: [String, Object],\n  backdrop: Boolean,\n  backdropEl: [String, Object, window.HTMLElement],\n  closeByBackdropClick: Boolean,\n  closeByOutsideClick: Boolean,\n  closeOnEscape: Boolean\n}, Mixins.colorProps));\n\nF7Actions.displayName = 'f7-actions';\nexport default F7Actions;"]},"metadata":{},"sourceType":"module"}