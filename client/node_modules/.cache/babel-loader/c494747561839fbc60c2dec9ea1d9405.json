{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stuff to move\\\\Work\\\\SE\\\\deployed\\\\client\\\\src\\\\components\\\\login.jsx\";\nimport React, { Component } from \"react\";\nimport { TextField, Typography } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions/authActions\";\nimport { clearErrors } from \"../actions/errorActions\";\nimport { Redirect } from \"react-router-dom\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 5)\n  }\n});\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const user = {\n        email,\n        password\n      };\n      console.log(user);\n      this.props.login(user);\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      msg: null\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      isAuthenticated\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      //check for reg error\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props; // const { errors, username, password, isLoading } = this.state;\n\n    return /*#__PURE__*/React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, this.props.isAuthenticated ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/adminPortal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 39\n      }\n    }) : null, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email\",\n      name: \"email\",\n      autoComplete: \"email\",\n      autoFocus: true,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        value: \"remember\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 22\n        }\n      }),\n      label: \"Remember me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, \"Sign In\"), this.state.msg ? /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, this.state.msg) : null));\n  }\n\n}\n\nLoginPage.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  // to use the state as props\n  isAuthenticated: state.auth.isAuthenticated,\n  // auth is coming from root reducer at /reducers/index.js\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  clearErrors\n})(withStyles(useStyles)(LoginPage));","map":{"version":3,"sources":["D:/Stuff to move/Work/SE/deployed/client/src/components/login.jsx"],"names":["React","Component","TextField","Typography","FormControlLabel","Checkbox","Container","Button","withStyles","PropTypes","connect","login","clearErrors","Redirect","Alert","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","LoginPage","constructor","props","onChange","e","setState","target","name","value","onSubmit","preventDefault","email","password","state","user","console","log","msg","componentDidUpdate","prevProps","error","isAuthenticated","id","render","classes","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { TextField, Typography } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions/authActions\";\nimport { clearErrors } from \"../actions/errorActions\";\nimport { Redirect } from \"react-router-dom\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = (theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 5),\n  },\n});\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      msg: null,\n    };\n  }\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      //check for reg error\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n    const user = {\n      email,\n      password,\n    };\n\n    console.log(user);\n\n    this.props.login(user);\n  };\n\n  render() {\n    const { classes } = this.props;\n    // const { errors, username, password, isLoading } = this.state;\n    return (\n      <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\n        {this.props.isAuthenticated ? <Redirect to=\"/adminPortal\" /> : null}\n\n        <Typography component=\"h1\" variant=\"h4\">\n          Sign in\n        </Typography>\n        <form onSubmit={this.onSubmit} className={classes.form}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={this.onChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={this.onChange}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          {this.state.msg ? (\n            <Alert severity=\"error\">{this.state.msg}</Alert>\n          ) : null}\n        </form>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // to use the state as props\n  isAuthenticated: state.auth.isAuthenticated, // auth is coming from root reducer at /reducers/index.js\n  error: state.error,\n});\n\nexport default connect(mapStateToProps, { login, clearErrors })(\n  withStyles(useStyles)(LoginPage)\n);\n"]},"metadata":{},"sourceType":"module"}