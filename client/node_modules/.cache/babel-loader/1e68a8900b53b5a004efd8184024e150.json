{"ast":null,"code":"import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7Checkbox extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onChange']);\n    })();\n  }\n\n  onChange(event) {\n    this.dispatchEvent('change', event);\n  }\n\n  get classes() {\n    const self = this;\n    const props = self.props;\n    const {\n      className,\n      disabled\n    } = props;\n    return Utils.classNames(className, {\n      checkbox: true,\n      disabled\n    }, Mixins.colorClasses(props));\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      name,\n      value,\n      disabled,\n      readonly,\n      checked,\n      defaultChecked,\n      id,\n      style\n    } = props;\n    let inputEl;\n    {\n      inputEl = React.createElement('input', {\n        ref: __reactNode => {\n          this.__reactRefs['inputEl'] = __reactNode;\n        },\n        type: 'checkbox',\n        name: name,\n        value: value,\n        disabled: disabled,\n        readOnly: readonly,\n        checked: checked,\n        defaultChecked: defaultChecked,\n        onChange: self.onChange\n      });\n    }\n    const iconEl = React.createElement('i', {\n      className: 'icon-checkbox'\n    });\n    return React.createElement('label', {\n      id: id,\n      style: style,\n      className: self.classes\n    }, inputEl, iconEl, this.slots['default']);\n  }\n\n  componentDidUpdate() {\n    const self = this;\n    const {\n      inputEl\n    } = self.refs;\n    const {\n      indeterminate\n    } = self.props;\n\n    if (inputEl) {\n      inputEl.indeterminate = indeterminate;\n    }\n  }\n\n  componentDidMount() {\n    const self = this;\n    const {\n      inputEl\n    } = self.refs;\n    const {\n      indeterminate\n    } = self.props;\n\n    if (indeterminate && inputEl) {\n      inputEl.indeterminate = true;\n    }\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7Checkbox, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  checked: Boolean,\n  indeterminate: Boolean,\n  name: [Number, String],\n  value: [Number, String, Boolean],\n  disabled: Boolean,\n  readonly: Boolean,\n  defaultChecked: Boolean\n}, Mixins.colorProps));\n\nF7Checkbox.displayName = 'f7-checkbox';\nexport default F7Checkbox;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/components/checkbox.js"],"names":["React","Utils","Mixins","__reactComponentDispatchEvent","__reactComponentSlots","__reactComponentSetProps","F7Checkbox","Component","constructor","props","context","__reactRefs","bindMethods","onChange","event","dispatchEvent","classes","self","className","disabled","classNames","checkbox","colorClasses","render","name","value","readonly","checked","defaultChecked","id","style","inputEl","createElement","ref","__reactNode","type","readOnly","iconEl","slots","componentDidUpdate","refs","indeterminate","componentDidMount","events","args","Object","assign","String","Number","Boolean","colorProps","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7Checkbox extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onChange']);\n    })();\n  }\n\n  onChange(event) {\n    this.dispatchEvent('change', event);\n  }\n\n  get classes() {\n    const self = this;\n    const props = self.props;\n    const {\n      className,\n      disabled\n    } = props;\n    return Utils.classNames(className, {\n      checkbox: true,\n      disabled\n    }, Mixins.colorClasses(props));\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      name,\n      value,\n      disabled,\n      readonly,\n      checked,\n      defaultChecked,\n      id,\n      style\n    } = props;\n    let inputEl;\n    {\n      inputEl = React.createElement('input', {\n        ref: __reactNode => {\n          this.__reactRefs['inputEl'] = __reactNode;\n        },\n        type: 'checkbox',\n        name: name,\n        value: value,\n        disabled: disabled,\n        readOnly: readonly,\n        checked: checked,\n        defaultChecked: defaultChecked,\n        onChange: self.onChange\n      });\n    }\n    const iconEl = React.createElement('i', {\n      className: 'icon-checkbox'\n    });\n    return React.createElement('label', {\n      id: id,\n      style: style,\n      className: self.classes\n    }, inputEl, iconEl, this.slots['default']);\n  }\n\n  componentDidUpdate() {\n    const self = this;\n    const {\n      inputEl\n    } = self.refs;\n    const {\n      indeterminate\n    } = self.props;\n\n    if (inputEl) {\n      inputEl.indeterminate = indeterminate;\n    }\n  }\n\n  componentDidMount() {\n    const self = this;\n    const {\n      inputEl\n    } = self.refs;\n    const {\n      indeterminate\n    } = self.props;\n\n    if (indeterminate && inputEl) {\n      inputEl.indeterminate = true;\n    }\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7Checkbox, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  checked: Boolean,\n  indeterminate: Boolean,\n  name: [Number, String],\n  value: [Number, String, Boolean],\n  disabled: Boolean,\n  readonly: Boolean,\n  defaultChecked: Boolean\n}, Mixins.colorProps));\n\nF7Checkbox.displayName = 'f7-checkbox';\nexport default F7Checkbox;"]},"metadata":{},"sourceType":"module"}