{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stuff to move\\\\Work\\\\SE\\\\deployed\\\\client\\\\src\\\\components\\\\adminPortal.jsx\";\nimport React, { Component, forwardRef } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport Container from \"@material-ui/core/Container\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Print from \"@material-ui/icons/Print\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { getOrders, deleteOrder, updateOrder } from \"../actions/orderActions\"; //stored as a prop\n\nimport { loadUser } from \"../actions/authActions\";\nimport PropTypes from \"prop-types\"; // validation\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = theme => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(2)\n  },\n  paperBig: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    background: \"#E8E8E8\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\"\n  },\n  heading: {\n    padding: theme.spacing(2)\n  }\n});\n\nclass OrdersList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [{\n        title: \"Name\",\n        field: \"ClientName\"\n      }, {\n        title: \"Budget\",\n        field: \"Budget\",\n        type: \"numeric\"\n      }, {\n        title: \"Date\",\n        field: \"date\",\n        type: \"date\"\n      }, {\n        title: \"Category\",\n        field: \"Category\"\n      }, {\n        title: \"Photographer\",\n        field: \"Photographer\"\n      }, {\n        title: \"Approved\",\n        field: \"Approved\",\n        lookup: {\n          true: \"Yes\",\n          false: \"No\"\n        }\n      }],\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    let temp = await this.props.getOrders();\n\n    while (this.props.orders.loading === true) {\n      console.log(temp);\n    }\n\n    this.setState({\n      data: this.props.orders.ordersList\n    });\n  }\n\n  render() {\n    const tableIcons = {\n      // Add: forwardRef((props, ref) => <Add {...props} ref={ref} color='action' />),\n      Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 39\n        }\n      }))),\n      Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 41\n        }\n      }))),\n      Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 41\n        }\n      }))),\n      Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }))),\n      DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }))),\n      Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 40\n        }\n      }))),\n      Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 42\n        }\n      }))),\n      Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 42\n        }\n      }))),\n      FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 45\n        }\n      }))),\n      LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 44\n        }\n      }))),\n      NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }))),\n      PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }))),\n      Print: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Print, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 41\n        }\n      }))),\n      ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 47\n        }\n      }))),\n      Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 42\n        }\n      }))),\n      SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowUpward, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }))),\n      ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }))),\n      ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      })))\n    };\n    const {\n      classes\n    } = this.props;\n    const {\n      loading\n    } = this.props.orders;\n    return /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, this.props.isAuthenticated ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, !loading ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h4\",\n      className: classes.heading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, \"Welcome!\"))), /*#__PURE__*/React.createElement(MaterialTable, {\n      title: \"Booking requests\",\n      columns: this.state.columns,\n      data: this.state.data,\n      editable: {\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            {\n              let data = this.state.data;\n              const index = data.indexOf(oldData);\n              const temp_old = data.filter(order => order._id !== data[index]._id);\n              this.props.updateOrder(newData);\n              this.setState(prevState => ({\n                data: [...temp_old, newData]\n              }));\n            }\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            {\n              let data = this.state.data;\n              const index = data.indexOf(oldData);\n              const del_id = data[index]._id;\n              this.props.deleteOrder(del_id);\n              this.setState({\n                data: data.filter(order => order._id !== del_id)\n              });\n            }\n            resolve();\n          }, 1000);\n        })\n      },\n      icons: tableIcons,\n      detailPanel: rowData => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.root,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          spacing: 3,\n          justify: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 4,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          className: classes.paperBig,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 31\n          }\n        }, \"ContactNumber\"))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 8,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          className: classes.paper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 31\n          }\n        }, rowData.ContactNumber))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 4,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          className: classes.paperBig,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 31\n          }\n        }, \"Email\"))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 8,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          className: classes.paper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 31\n          }\n        }, rowData.Email))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 4,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          className: classes.paperBig,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 31\n          }\n        }, \"Location\"))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 8,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          className: classes.paper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 31\n          }\n        }, rowData.Location))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 4,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          className: classes.paperBig,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 31\n          }\n        }, \"Expertise\"))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 8,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          className: classes.paper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 31\n          }\n        }, rowData.Expertise))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 4,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          className: classes.paperBig,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 31\n          }\n        }, \"Event Description\"))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 8,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          className: classes.paper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 31\n          }\n        }, rowData.Event_Description)))));\n      },\n      onRowClick: (event, rowData, togglePanel) => togglePanel(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h4\",\n      className: classes.heading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, \"Loading\"))))) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nOrdersList.propTypes = {\n  getOrders: PropTypes.func.isRequired,\n  deleteOrder: PropTypes.func.isRequired,\n  updateOrder: PropTypes.func.isRequired,\n  orders: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  // to use the state as props\n  orders: state.orders,\n  // orders is coming from root reducer at /reducers/index.js\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  getOrders,\n  deleteOrder,\n  updateOrder,\n  loadUser\n})(withStyles(useStyles)(OrdersList)); //exporting a component make it reusable and this is the beauty of react","map":{"version":3,"sources":["D:/Stuff to move/Work/SE/deployed/client/src/components/adminPortal.jsx"],"names":["React","Component","forwardRef","Typography","MaterialTable","Container","AddBox","ArrowUpward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Print","Remove","SaveAlt","Search","ViewColumn","Redirect","connect","Grid","Paper","getOrders","deleteOrder","updateOrder","loadUser","PropTypes","withStyles","useStyles","theme","root","flexGrow","padding","spacing","paperBig","textAlign","background","paper","heading","OrdersList","constructor","props","state","columns","title","field","type","lookup","true","false","data","componentDidMount","temp","orders","loading","console","log","setState","ordersList","render","tableIcons","Add","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","classes","isAuthenticated","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","index","indexOf","temp_old","filter","order","_id","prevState","onRowDelete","del_id","rowData","ContactNumber","Email","Location","Expertise","Event_Description","event","togglePanel","propTypes","func","isRequired","object","bool","error","mapStateToProps","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,QAAoD,yBAApD,C,CAA+E;;AAC/E,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAAoC;;AACpC,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,MAAMC,SAAS,GAAIC,KAAD,KAAY;AAC5BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFL,GADsB;AAK5BC,EAAAA,QAAQ,EAAE;AACRF,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CADD;AAERE,IAAAA,SAAS,EAAE,QAFH;AAGRC,IAAAA,UAAU,EAAE;AAHJ,GALkB;AAU5BC,EAAAA,KAAK,EAAE;AACLL,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CADJ;AAELE,IAAAA,SAAS,EAAE;AAFN,GAVqB;AAc5BG,EAAAA,OAAO,EAAE;AACPN,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADF;AAdmB,CAAZ,CAAlB;;AAmBA,MAAMM,UAAN,SAAyB1C,SAAzB,CAAmC;AACjC2C,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CACP;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OADO,EAEP;AAAED,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,KAAK,EAAE,QAA1B;AAAoCC,QAAAA,IAAI,EAAE;AAA1C,OAFO,EAGP;AAAEF,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE,MAAxB;AAAgCC,QAAAA,IAAI,EAAE;AAAtC,OAHO,EAIP;AAAEF,QAAAA,KAAK,EAAE,UAAT;AAAqBC,QAAAA,KAAK,EAAE;AAA5B,OAJO,EAKP;AAAED,QAAAA,KAAK,EAAE,cAAT;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OALO,EAMP;AACED,QAAAA,KAAK,EAAE,UADT;AAEEC,QAAAA,KAAK,EAAE,UAFT;AAGEE,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,KAAK,EAAE;AAAtB;AAHV,OANO,CADE;AAaXC,MAAAA,IAAI,EAAE;AAbK,KAAb;AAeD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,QAAIC,IAAI,GAAG,MAAM,KAAKX,KAAL,CAAWnB,SAAX,EAAjB;;AACA,WAAO,KAAKmB,KAAL,CAAWY,MAAX,CAAkBC,OAAlB,KAA8B,IAArC,EAA2C;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD;;AACD,SAAKK,QAAL,CAAc;AACZP,MAAAA,IAAI,EAAE,KAAKT,KAAL,CAAWY,MAAX,CAAkBK;AADZ,KAAd;AAGD;;AAWDC,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG;AACjB;AACAC,MAAAA,GAAG,EAAE/D,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBAAgB,oBAAC,MAAD,oBAAYrB,KAAZ;AAAmB,QAAA,GAAG,EAAEqB,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjB,CAFE;AAGjB1D,MAAAA,KAAK,EAAEN,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBAAgB,oBAAC,KAAD,oBAAWrB,KAAX;AAAkB,QAAA,GAAG,EAAEqB,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjB,CAHA;AAIjBvD,MAAAA,KAAK,EAAET,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBAAgB,oBAAC,KAAD,oBAAWrB,KAAX;AAAkB,QAAA,GAAG,EAAEqB,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjB,CAJA;AAKjBC,MAAAA,MAAM,EAAEjE,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBACjB,oBAAC,aAAD,oBAAmBrB,KAAnB;AAA0B,QAAA,GAAG,EAAEqB,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADgB,CALD;AAQjBE,MAAAA,WAAW,EAAElE,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBACtB,oBAAC,YAAD,oBAAkBrB,KAAlB;AAAyB,QAAA,GAAG,EAAEqB,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADqB,CARN;AAWjBrD,MAAAA,IAAI,EAAEX,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBAAgB,oBAAC,IAAD,oBAAUrB,KAAV;AAAiB,QAAA,GAAG,EAAEqB,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjB,CAXC;AAYjBG,MAAAA,MAAM,EAAEnE,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBAAgB,oBAAC,OAAD,oBAAarB,KAAb;AAAoB,QAAA,GAAG,EAAEqB,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjB,CAZD;AAajBI,MAAAA,MAAM,EAAEpE,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBAAgB,oBAAC,UAAD,oBAAgBrB,KAAhB;AAAuB,QAAA,GAAG,EAAEqB,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjB,CAbD;AAcjBnD,MAAAA,SAAS,EAAEb,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBAAgB,oBAAC,SAAD,oBAAerB,KAAf;AAAsB,QAAA,GAAG,EAAEqB,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjB,CAdJ;AAejBlD,MAAAA,QAAQ,EAAEd,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBAAgB,oBAAC,QAAD,oBAAcrB,KAAd;AAAqB,QAAA,GAAG,EAAEqB,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjB,CAfH;AAgBjBK,MAAAA,QAAQ,EAAErE,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBACnB,oBAAC,YAAD,oBAAkBrB,KAAlB;AAAyB,QAAA,GAAG,EAAEqB,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADkB,CAhBH;AAmBjBM,MAAAA,YAAY,EAAEtE,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBACvB,oBAAC,WAAD,oBAAiBrB,KAAjB;AAAwB,QAAA,GAAG,EAAEqB,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADsB,CAnBP;AAsBjBjD,MAAAA,KAAK,EAAEf,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBAAgB,oBAAC,KAAD,oBAAWrB,KAAX;AAAkB,QAAA,GAAG,EAAEqB,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjB,CAtBA;AAuBjBO,MAAAA,WAAW,EAAEvE,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBAAgB,oBAAC,KAAD,oBAAWrB,KAAX;AAAkB,QAAA,GAAG,EAAEqB,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjB,CAvBN;AAwBjB9C,MAAAA,MAAM,EAAElB,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBAAgB,oBAAC,MAAD,oBAAYrB,KAAZ;AAAmB,QAAA,GAAG,EAAEqB,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjB,CAxBD;AAyBjBQ,MAAAA,SAAS,EAAExE,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBACpB,oBAAC,WAAD,oBAAiBrB,KAAjB;AAAwB,QAAA,GAAG,EAAEqB,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADmB,CAzBJ;AA4BjBS,MAAAA,eAAe,EAAEzE,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBAC1B,oBAAC,MAAD,oBAAYrB,KAAZ;AAAmB,QAAA,GAAG,EAAEqB,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADyB,CA5BV;AA+BjB7C,MAAAA,UAAU,EAAEnB,UAAU,CAAC,CAAC2C,KAAD,EAAQqB,GAAR,kBACrB,oBAAC,UAAD,oBAAgBrB,KAAhB;AAAuB,QAAA,GAAG,EAAEqB,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADoB;AA/BL,KAAnB;AAmCA,UAAM;AAAEU,MAAAA;AAAF,QAAc,KAAK/B,KAAzB;AACA,UAAM;AAAEa,MAAAA;AAAF,QAAc,KAAKb,KAAL,CAAWY,MAA/B;AACA,wBACE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAWgC,eAAX,gBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACnB,OAAD,gBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,IAAI,MAApB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,SAAS,EAAC,IADZ;AAEE,MAAA,OAAO,EAAC,IAFV;AAGE,MAAA,SAAS,EAAEkB,OAAO,CAAClC,OAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,CADF,eAYE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAC,kBADR;AAEE,MAAA,OAAO,EAAE,KAAKI,KAAL,CAAWC,OAFtB;AAGE,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWQ,IAHnB;AAIE,MAAA,QAAQ,EAAE;AACRwB,QAAAA,WAAW,EAAE,CAACC,OAAD,EAAUC,OAAV,KACX,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,UAAAA,UAAU,CAAC,MAAM;AACf;AACE,kBAAI9B,IAAI,GAAG,KAAKR,KAAL,CAAWQ,IAAtB;AACA,oBAAM+B,KAAK,GAAG/B,IAAI,CAACgC,OAAL,CAAaN,OAAb,CAAd;AACA,oBAAMO,QAAQ,GAAGjC,IAAI,CAACkC,MAAL,CACdC,KAAD,IAAWA,KAAK,CAACC,GAAN,KAAcpC,IAAI,CAAC+B,KAAD,CAAJ,CAAYK,GADtB,CAAjB;AAGA,mBAAK7C,KAAL,CAAWjB,WAAX,CAAuBmD,OAAvB;AACA,mBAAKlB,QAAL,CAAe8B,SAAD,KAAgB;AAC5BrC,gBAAAA,IAAI,EAAE,CAAC,GAAGiC,QAAJ,EAAcR,OAAd;AADsB,eAAhB,CAAd;AAGD;AACDG,YAAAA,OAAO;AACR,WAbS,EAaP,IAbO,CAAV;AAcD,SAfD,CAFM;AAkBRU,QAAAA,WAAW,EAAGZ,OAAD,IACX,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,UAAAA,UAAU,CAAC,MAAM;AACf;AACE,kBAAI9B,IAAI,GAAG,KAAKR,KAAL,CAAWQ,IAAtB;AACA,oBAAM+B,KAAK,GAAG/B,IAAI,CAACgC,OAAL,CAAaN,OAAb,CAAd;AACA,oBAAMa,MAAM,GAAGvC,IAAI,CAAC+B,KAAD,CAAJ,CAAYK,GAA3B;AACA,mBAAK7C,KAAL,CAAWlB,WAAX,CAAuBkE,MAAvB;AACA,mBAAKhC,QAAL,CAAc;AACZP,gBAAAA,IAAI,EAAEA,IAAI,CAACkC,MAAL,CACHC,KAAD,IAAWA,KAAK,CAACC,GAAN,KAAcG,MADrB;AADM,eAAd;AAKD;AACDX,YAAAA,OAAO;AACR,WAbS,EAaP,IAbO,CAAV;AAcD,SAfD;AAnBM,OAJZ;AAwCE,MAAA,KAAK,EAAElB,UAxCT;AAyCE,MAAA,WAAW,EAAG8B,OAAD,IAAa;AACxB,4BACE;AAAK,UAAA,SAAS,EAAElB,OAAO,CAAC1C,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAA4B,UAAA,OAAO,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAE0C,OAAO,CAACtC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,CADF,eAME,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAEsC,OAAO,CAACnC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaqD,OAAO,CAACC,aAArB,CADF,CADF,CANF,eAYE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAEnB,OAAO,CAACtC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,CAZF,eAiBE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAEsC,OAAO,CAACnC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaqD,OAAO,CAACE,KAArB,CADF,CADF,CAjBF,eAuBE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAEpB,OAAO,CAACtC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,CAvBF,eA4BE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAEsC,OAAO,CAACnC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaqD,OAAO,CAACG,QAArB,CADF,CADF,CA5BF,eAkCE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAErB,OAAO,CAACtC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,CAlCF,eAuCE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAEsC,OAAO,CAACnC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaqD,OAAO,CAACI,SAArB,CADF,CADF,CAvCF,eA6CE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAEtB,OAAO,CAACtC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADF,CA7CF,eAkDE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAEsC,OAAO,CAACnC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGqD,OAAO,CAACK,iBADX,CADF,CADF,CAlDF,CADF,CADF;AA8DD,OAxGH;AAyGE,MAAA,UAAU,EAAE,CAACC,KAAD,EAAQN,OAAR,EAAiBO,WAAjB,KAAiCA,WAAW,EAzG1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADD,gBA0HC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,IAAI,MAApB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,SAAS,EAAC,IADZ;AAEE,MAAA,OAAO,EAAC,IAFV;AAGE,MAAA,SAAS,EAAEzB,OAAO,CAAClC,OAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,CADF,CA3HJ,CADD,gBA4IC,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7IJ,CADF;AAkJD;;AA/NgC;;AAA7BC,U,CA8BG2D,S,GAAY;AACjB5E,EAAAA,SAAS,EAAEI,SAAS,CAACyE,IAAV,CAAeC,UADT;AAEjB7E,EAAAA,WAAW,EAAEG,SAAS,CAACyE,IAAV,CAAeC,UAFX;AAGjB5E,EAAAA,WAAW,EAAEE,SAAS,CAACyE,IAAV,CAAeC,UAHX;AAIjB/C,EAAAA,MAAM,EAAE3B,SAAS,CAAC2E,MAAV,CAAiBD,UAJR;AAKjB3B,EAAAA,eAAe,EAAE/C,SAAS,CAAC4E,IALV;AAMjBC,EAAAA,KAAK,EAAE7E,SAAS,CAAC2E,MAAV,CAAiBD;AANP,C;;AAoMrB,MAAMI,eAAe,GAAI9D,KAAD,KAAY;AAClC;AACAW,EAAAA,MAAM,EAAEX,KAAK,CAACW,MAFoB;AAEZ;AACtBoB,EAAAA,eAAe,EAAE/B,KAAK,CAAC+D,IAAN,CAAWhC,eAHM;AAIlC8B,EAAAA,KAAK,EAAE7D,KAAK,CAAC6D;AAJqB,CAAZ,CAAxB;;AAOA,eAAepF,OAAO,CAACqF,eAAD,EAAkB;AACtClF,EAAAA,SADsC;AAEtCC,EAAAA,WAFsC;AAGtCC,EAAAA,WAHsC;AAItCC,EAAAA;AAJsC,CAAlB,CAAP,CAKZE,UAAU,CAACC,SAAD,CAAV,CAAsBW,UAAtB,CALY,CAAf,C,CAKuC","sourcesContent":["import React, { Component, forwardRef } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport Container from \"@material-ui/core/Container\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Print from \"@material-ui/icons/Print\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { getOrders, deleteOrder, updateOrder } from \"../actions/orderActions\"; //stored as a prop\nimport { loadUser } from \"../actions/authActions\";\nimport PropTypes from \"prop-types\"; // validation\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = (theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(2),\n  },\n  paperBig: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    background: \"#E8E8E8\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n  },\n  heading: {\n    padding: theme.spacing(2),\n  },\n});\n\nclass OrdersList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [\n        { title: \"Name\", field: \"ClientName\" },\n        { title: \"Budget\", field: \"Budget\", type: \"numeric\" },\n        { title: \"Date\", field: \"date\", type: \"date\" },\n        { title: \"Category\", field: \"Category\" },\n        { title: \"Photographer\", field: \"Photographer\" },\n        {\n          title: \"Approved\",\n          field: \"Approved\",\n          lookup: { true: \"Yes\", false: \"No\" },\n        },\n      ],\n      data: [],\n    };\n  }\n\n  async componentDidMount() {\n    let temp = await this.props.getOrders();\n    while (this.props.orders.loading === true) {\n      console.log(temp);\n    }\n    this.setState({\n      data: this.props.orders.ordersList,\n    });\n  }\n\n  static propTypes = {\n    getOrders: PropTypes.func.isRequired,\n    deleteOrder: PropTypes.func.isRequired,\n    updateOrder: PropTypes.func.isRequired,\n    orders: PropTypes.object.isRequired,\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const tableIcons = {\n      // Add: forwardRef((props, ref) => <Add {...props} ref={ref} color='action' />),\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n      Delete: forwardRef((props, ref) => (\n        <DeleteOutline {...props} ref={ref} />\n      )),\n      DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n      )),\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n      NextPage: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n      )),\n      PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n      )),\n      Print: forwardRef((props, ref) => <Print {...props} ref={ref} />),\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n      SortArrow: forwardRef((props, ref) => (\n        <ArrowUpward {...props} ref={ref} />\n      )),\n      ThirdStateCheck: forwardRef((props, ref) => (\n        <Remove {...props} ref={ref} />\n      )),\n      ViewColumn: forwardRef((props, ref) => (\n        <ViewColumn {...props} ref={ref} />\n      )),\n    };\n    const { classes } = this.props;\n    const { loading } = this.props.orders;\n    return (\n      <Container maxWidth=\"xl\">\n        {this.props.isAuthenticated ? (\n          <React.Fragment>\n            {!loading ? (\n              <React.Fragment>\n                <Grid container item xs={12}>\n                  <Grid item xs={4}>\n                    <Typography\n                      component=\"h1\"\n                      variant=\"h4\"\n                      className={classes.heading}\n                    >\n                      Welcome!\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <MaterialTable\n                  title=\"Booking requests\"\n                  columns={this.state.columns}\n                  data={this.state.data}\n                  editable={{\n                    onRowUpdate: (newData, oldData) =>\n                      new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                          {\n                            let data = this.state.data;\n                            const index = data.indexOf(oldData);\n                            const temp_old = data.filter(\n                              (order) => order._id !== data[index]._id\n                            );\n                            this.props.updateOrder(newData);\n                            this.setState((prevState) => ({\n                              data: [...temp_old, newData],\n                            }));\n                          }\n                          resolve();\n                        }, 1000);\n                      }),\n                    onRowDelete: (oldData) =>\n                      new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                          {\n                            let data = this.state.data;\n                            const index = data.indexOf(oldData);\n                            const del_id = data[index]._id;\n                            this.props.deleteOrder(del_id);\n                            this.setState({\n                              data: data.filter(\n                                (order) => order._id !== del_id\n                              ),\n                            });\n                          }\n                          resolve();\n                        }, 1000);\n                      }),\n                  }}\n                  icons={tableIcons}\n                  detailPanel={(rowData) => {\n                    return (\n                      <div className={classes.root}>\n                        <Grid container spacing={3} justify=\"center\">\n                          <Grid item xs={4}>\n                            <Paper className={classes.paperBig}>\n                              <Typography>ContactNumber</Typography>\n                            </Paper>\n                          </Grid>\n                          <Grid item xs={8}>\n                            <Paper className={classes.paper}>\n                              <Typography>{rowData.ContactNumber}</Typography>\n                            </Paper>\n                          </Grid>\n\n                          <Grid item xs={4}>\n                            <Paper className={classes.paperBig}>\n                              <Typography>Email</Typography>\n                            </Paper>\n                          </Grid>\n                          <Grid item xs={8}>\n                            <Paper className={classes.paper}>\n                              <Typography>{rowData.Email}</Typography>\n                            </Paper>\n                          </Grid>\n\n                          <Grid item xs={4}>\n                            <Paper className={classes.paperBig}>\n                              <Typography>Location</Typography>\n                            </Paper>\n                          </Grid>\n                          <Grid item xs={8}>\n                            <Paper className={classes.paper}>\n                              <Typography>{rowData.Location}</Typography>\n                            </Paper>\n                          </Grid>\n\n                          <Grid item xs={4}>\n                            <Paper className={classes.paperBig}>\n                              <Typography>Expertise</Typography>\n                            </Paper>\n                          </Grid>\n                          <Grid item xs={8}>\n                            <Paper className={classes.paper}>\n                              <Typography>{rowData.Expertise}</Typography>\n                            </Paper>\n                          </Grid>\n\n                          <Grid item xs={4}>\n                            <Paper className={classes.paperBig}>\n                              <Typography>Event Description</Typography>\n                            </Paper>\n                          </Grid>\n                          <Grid item xs={8}>\n                            <Paper className={classes.paper}>\n                              <Typography>\n                                {rowData.Event_Description}\n                              </Typography>\n                            </Paper>\n                          </Grid>\n                        </Grid>\n                      </div>\n                    );\n                  }}\n                  onRowClick={(event, rowData, togglePanel) => togglePanel()}\n                />\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <Grid container item xs={12}>\n                  <Grid item xs={4}>\n                    <Typography\n                      component=\"h1\"\n                      variant=\"h4\"\n                      className={classes.heading}\n                    >\n                      Loading\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        ) : (\n          <Redirect to=\"/login\" />\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // to use the state as props\n  orders: state.orders, // orders is coming from root reducer at /reducers/index.js\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n});\n\nexport default connect(mapStateToProps, {\n  getOrders,\n  deleteOrder,\n  updateOrder,\n  loadUser,\n})(withStyles(useStyles)(OrdersList)); //exporting a component make it reusable and this is the beauty of react\n"]},"metadata":{},"sourceType":"module"}