{"ast":null,"code":"import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7SkeletonText extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n  }\n\n  render() {\n    const props = this.props;\n    const {\n      className,\n      id,\n      style,\n      width,\n      height,\n      tag\n    } = props;\n    const classes = Utils.classNames('skeleton-text', className, Mixins.colorClasses(props));\n    let styleAttribute = style;\n\n    if (width) {\n      const widthValue = typeof width === 'number' ? `${width}px` : width;\n\n      if (!styleAttribute) {\n        styleAttribute = {\n          width: widthValue\n        };\n      } else if (typeof styleAttribute === 'object') {\n        styleAttribute = Object.assign({\n          width: widthValue\n        }, styleAttribute);\n      } else if (typeof styleAttribute === 'string') {\n        styleAttribute = `width: ${widthValue}; ${styleAttribute}`;\n      }\n    }\n\n    if (height) {\n      const heightValue = typeof height === 'number' ? `${height}px` : height;\n\n      if (!styleAttribute) {\n        styleAttribute = {\n          height: heightValue\n        };\n      } else if (typeof styleAttribute === 'object') {\n        styleAttribute = Object.assign({\n          height: heightValue\n        }, styleAttribute);\n      } else if (typeof styleAttribute === 'string') {\n        styleAttribute = `height: ${heightValue}; ${styleAttribute}`;\n      }\n    }\n\n    const Tag = tag;\n    return React.createElement(Tag, {\n      id: id,\n      style: styleAttribute,\n      className: classes\n    }, this.slots['default']);\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n}\n\n__reactComponentSetProps(F7SkeletonText, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  width: [Number, String],\n  height: [Number, String],\n  tag: {\n    type: String,\n    default: 'span'\n  }\n}, Mixins.colorProps));\n\nF7SkeletonText.displayName = 'f7-skeleton-text';\nexport default F7SkeletonText;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/components/skeleton-text.js"],"names":["React","Utils","Mixins","__reactComponentSlots","__reactComponentSetProps","F7SkeletonText","Component","constructor","props","context","render","className","id","style","width","height","tag","classes","classNames","colorClasses","styleAttribute","widthValue","Object","assign","heightValue","Tag","createElement","slots","String","Number","type","default","colorProps","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7SkeletonText extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n  }\n\n  render() {\n    const props = this.props;\n    const {\n      className,\n      id,\n      style,\n      width,\n      height,\n      tag\n    } = props;\n    const classes = Utils.classNames('skeleton-text', className, Mixins.colorClasses(props));\n    let styleAttribute = style;\n\n    if (width) {\n      const widthValue = typeof width === 'number' ? `${width}px` : width;\n\n      if (!styleAttribute) {\n        styleAttribute = {\n          width: widthValue\n        };\n      } else if (typeof styleAttribute === 'object') {\n        styleAttribute = Object.assign({\n          width: widthValue\n        }, styleAttribute);\n      } else if (typeof styleAttribute === 'string') {\n        styleAttribute = `width: ${widthValue}; ${styleAttribute}`;\n      }\n    }\n\n    if (height) {\n      const heightValue = typeof height === 'number' ? `${height}px` : height;\n\n      if (!styleAttribute) {\n        styleAttribute = {\n          height: heightValue\n        };\n      } else if (typeof styleAttribute === 'object') {\n        styleAttribute = Object.assign({\n          height: heightValue\n        }, styleAttribute);\n      } else if (typeof styleAttribute === 'string') {\n        styleAttribute = `height: ${heightValue}; ${styleAttribute}`;\n      }\n    }\n\n    const Tag = tag;\n    return React.createElement(Tag, {\n      id: id,\n      style: styleAttribute,\n      className: classes\n    }, this.slots['default']);\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n}\n\n__reactComponentSetProps(F7SkeletonText, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  width: [Number, String],\n  height: [Number, String],\n  tag: {\n    type: String,\n    default: 'span'\n  }\n}, Mixins.colorProps));\n\nF7SkeletonText.displayName = 'f7-skeleton-text';\nexport default F7SkeletonText;"]},"metadata":{},"sourceType":"module"}