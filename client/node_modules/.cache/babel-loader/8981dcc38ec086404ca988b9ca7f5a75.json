{"ast":null,"code":"import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport F7Icon from './icon';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7Chip extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onClick', 'onDeleteClick']);\n    })();\n  }\n\n  onClick(event) {\n    this.dispatchEvent('click', event);\n  }\n\n  onDeleteClick(event) {\n    this.dispatchEvent('delete', event);\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      media,\n      text,\n      deleteable,\n      className,\n      id,\n      style,\n      mediaTextColor,\n      mediaBgColor,\n      outline,\n      icon,\n      iconMaterial,\n      iconF7,\n      iconMd,\n      iconIos,\n      iconAurora,\n      iconColor,\n      iconSize\n    } = props;\n    let iconEl;\n    let mediaEl;\n    let labelEl;\n    let deleteEl;\n\n    if (icon || iconMaterial || iconF7 || iconMd || iconIos || iconAurora) {\n      iconEl = React.createElement(F7Icon, {\n        material: iconMaterial,\n        f7: iconF7,\n        icon: icon,\n        md: iconMd,\n        ios: iconIos,\n        aurora: iconAurora,\n        color: iconColor,\n        size: iconSize\n      });\n    }\n\n    if (media || iconEl || self.slots && self.slots.media) {\n      const mediaClasses = Utils.classNames('chip-media', mediaTextColor && `text-color-${mediaTextColor}`, mediaBgColor && `bg-color-${mediaBgColor}`);\n      mediaEl = React.createElement('div', {\n        className: mediaClasses\n      }, iconEl, media, this.slots['media']);\n    }\n\n    if (text || self.slots && self.slots.text) {\n      labelEl = React.createElement('div', {\n        className: 'chip-label'\n      }, text, this.slots['text']);\n    }\n\n    if (deleteable) {\n      deleteEl = React.createElement('a', {\n        ref: __reactNode => {\n          this.__reactRefs['deleteEl'] = __reactNode;\n        },\n        className: 'chip-delete'\n      });\n    }\n\n    const classes = Utils.classNames(className, 'chip', {\n      'chip-outline': outline\n    }, Mixins.colorClasses(props));\n    return React.createElement('div', {\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      id: id,\n      style: style,\n      className: classes\n    }, mediaEl, labelEl, deleteEl);\n  }\n\n  componentWillUnmount() {\n    this.refs.el.removeEventListener('click', this.onClick);\n\n    if (this.refs.deleteEl) {\n      this.refs.deleteEl.removeEventListener('click', this.onDeleteClick);\n    }\n  }\n\n  componentDidMount() {\n    this.refs.el.addEventListener('click', this.onClick);\n\n    if (this.refs.deleteEl) {\n      this.refs.deleteEl.addEventListener('click', this.onDeleteClick);\n    }\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7Chip, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  media: String,\n  text: [String, Number],\n  deleteable: Boolean,\n  mediaBgColor: String,\n  mediaTextColor: String,\n  outline: Boolean\n}, Mixins.colorProps, {}, Mixins.linkIconProps));\n\nF7Chip.displayName = 'f7-chip';\nexport default F7Chip;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/components/chip.js"],"names":["React","Utils","Mixins","F7Icon","__reactComponentDispatchEvent","__reactComponentSlots","__reactComponentSetProps","F7Chip","Component","constructor","props","context","__reactRefs","bindMethods","onClick","event","dispatchEvent","onDeleteClick","render","self","media","text","deleteable","className","id","style","mediaTextColor","mediaBgColor","outline","icon","iconMaterial","iconF7","iconMd","iconIos","iconAurora","iconColor","iconSize","iconEl","mediaEl","labelEl","deleteEl","createElement","material","f7","md","ios","aurora","color","size","slots","mediaClasses","classNames","ref","__reactNode","classes","colorClasses","componentWillUnmount","refs","el","removeEventListener","componentDidMount","addEventListener","events","args","Object","assign","String","Number","Boolean","colorProps","linkIconProps","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport F7Icon from './icon';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7Chip extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onClick', 'onDeleteClick']);\n    })();\n  }\n\n  onClick(event) {\n    this.dispatchEvent('click', event);\n  }\n\n  onDeleteClick(event) {\n    this.dispatchEvent('delete', event);\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      media,\n      text,\n      deleteable,\n      className,\n      id,\n      style,\n      mediaTextColor,\n      mediaBgColor,\n      outline,\n      icon,\n      iconMaterial,\n      iconF7,\n      iconMd,\n      iconIos,\n      iconAurora,\n      iconColor,\n      iconSize\n    } = props;\n    let iconEl;\n    let mediaEl;\n    let labelEl;\n    let deleteEl;\n\n    if (icon || iconMaterial || iconF7 || iconMd || iconIos || iconAurora) {\n      iconEl = React.createElement(F7Icon, {\n        material: iconMaterial,\n        f7: iconF7,\n        icon: icon,\n        md: iconMd,\n        ios: iconIos,\n        aurora: iconAurora,\n        color: iconColor,\n        size: iconSize\n      });\n    }\n\n    if (media || iconEl || self.slots && self.slots.media) {\n      const mediaClasses = Utils.classNames('chip-media', mediaTextColor && `text-color-${mediaTextColor}`, mediaBgColor && `bg-color-${mediaBgColor}`);\n      mediaEl = React.createElement('div', {\n        className: mediaClasses\n      }, iconEl, media, this.slots['media']);\n    }\n\n    if (text || self.slots && self.slots.text) {\n      labelEl = React.createElement('div', {\n        className: 'chip-label'\n      }, text, this.slots['text']);\n    }\n\n    if (deleteable) {\n      deleteEl = React.createElement('a', {\n        ref: __reactNode => {\n          this.__reactRefs['deleteEl'] = __reactNode;\n        },\n        className: 'chip-delete'\n      });\n    }\n\n    const classes = Utils.classNames(className, 'chip', {\n      'chip-outline': outline\n    }, Mixins.colorClasses(props));\n    return React.createElement('div', {\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      id: id,\n      style: style,\n      className: classes\n    }, mediaEl, labelEl, deleteEl);\n  }\n\n  componentWillUnmount() {\n    this.refs.el.removeEventListener('click', this.onClick);\n\n    if (this.refs.deleteEl) {\n      this.refs.deleteEl.removeEventListener('click', this.onDeleteClick);\n    }\n  }\n\n  componentDidMount() {\n    this.refs.el.addEventListener('click', this.onClick);\n\n    if (this.refs.deleteEl) {\n      this.refs.deleteEl.addEventListener('click', this.onDeleteClick);\n    }\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7Chip, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  media: String,\n  text: [String, Number],\n  deleteable: Boolean,\n  mediaBgColor: String,\n  mediaTextColor: String,\n  outline: Boolean\n}, Mixins.colorProps, {}, Mixins.linkIconProps));\n\nF7Chip.displayName = 'f7-chip';\nexport default F7Chip;"]},"metadata":{},"sourceType":"module"}