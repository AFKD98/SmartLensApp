{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveClass = toHaveClass;\n\nvar _jestMatcherUtils = require(\"jest-matcher-utils\");\n\nvar _utils = require(\"./utils\");\n\nfunction splitClassNames(str) {\n  if (!str) {\n    return [];\n  }\n\n  return str.split(/\\s+/).filter(function (s) {\n    return s.length > 0;\n  });\n}\n\nfunction isSubset(subset, superset) {\n  return subset.every(function (item) {\n    return superset.includes(item);\n  });\n}\n\nfunction toHaveClass(htmlElement) {\n  var _this = this;\n\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveClass, this);\n  var received = splitClassNames(htmlElement.getAttribute('class'));\n\n  for (var _len = arguments.length, expectedClassNames = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    expectedClassNames[_key - 1] = arguments[_key];\n  }\n\n  var expected = expectedClassNames.reduce(function (acc, className) {\n    return acc.concat(splitClassNames(className));\n  }, []);\n  return expected.length > 0 ? {\n    pass: isSubset(expected, received),\n    message: function message() {\n      var to = _this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)((0, _jestMatcherUtils.matcherHint)(\"\".concat(_this.isNot ? '.not' : '', \".toHaveClass\"), 'element', (0, _jestMatcherUtils.printExpected)(expected.join(' '))), \"Expected the element \".concat(to, \" have class\"), expected.join(' '), 'Received', received.join(' '));\n    }\n  } : {\n    pass: this.isNot ? received.length > 0 : false,\n    message: function message() {\n      return _this.isNot ? (0, _utils.getMessage)((0, _jestMatcherUtils.matcherHint)('.not.toHaveClass', 'element', ''), 'Expected the element to have classes', '(none)', 'Received', received.join(' ')) : [(0, _jestMatcherUtils.matcherHint)(\".toHaveClass\", 'element'), 'At least one expected class must be provided.'].join('\\n');\n    }\n  };\n}","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/client/node_modules/@testing-library/jest-dom/dist/to-have-class.js"],"names":["Object","defineProperty","exports","value","toHaveClass","_jestMatcherUtils","require","_utils","splitClassNames","str","split","filter","s","length","isSubset","subset","superset","every","item","includes","htmlElement","checkHtmlElement","received","getAttribute","expectedClassNames","expected","reduce","acc","className","concat","pass","message","to","isNot","getMessage","matcherHint","printExpected","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,WAAR,GAAsBA,WAAtB;;AAEA,IAAIC,iBAAiB,GAAGC,OAAO,CAAC,oBAAD,CAA/B;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB;;AAEA,SAASE,eAAT,CAAyBC,GAAzB,EAA8B;AAC5B,MAAI,CAACA,GAAL,EAAU;AACR,WAAO,EAAP;AACD;;AAED,SAAOA,GAAG,CAACC,KAAJ,CAAU,KAAV,EAAiBC,MAAjB,CAAwB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,MAAF,GAAW,CAAf;AAAA,GAAzB,CAAP;AACD;;AAED,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,QAA1B,EAAoC;AAClC,SAAOD,MAAM,CAACE,KAAP,CAAa,UAAAC,IAAI;AAAA,WAAIF,QAAQ,CAACG,QAAT,CAAkBD,IAAlB,CAAJ;AAAA,GAAjB,CAAP;AACD;;AAED,SAASd,WAAT,CAAqBgB,WAArB,EAAyD;AAAA;;AACvD,GAAC,GAAGb,MAAM,CAACc,gBAAX,EAA6BD,WAA7B,EAA0ChB,WAA1C,EAAuD,IAAvD;AACA,MAAMkB,QAAQ,GAAGd,eAAe,CAACY,WAAW,CAACG,YAAZ,CAAyB,OAAzB,CAAD,CAAhC;;AAFuD,oCAApBC,kBAAoB;AAApBA,IAAAA,kBAAoB;AAAA;;AAGvD,MAAMC,QAAQ,GAAGD,kBAAkB,CAACE,MAAnB,CAA0B,UAACC,GAAD,EAAMC,SAAN;AAAA,WAAoBD,GAAG,CAACE,MAAJ,CAAWrB,eAAe,CAACoB,SAAD,CAA1B,CAApB;AAAA,GAA1B,EAAsF,EAAtF,CAAjB;AACA,SAAOH,QAAQ,CAACZ,MAAT,GAAkB,CAAlB,GAAsB;AAC3BiB,IAAAA,IAAI,EAAEhB,QAAQ,CAACW,QAAD,EAAWH,QAAX,CADa;AAE3BS,IAAAA,OAAO,EAAE,mBAAM;AACb,UAAMC,EAAE,GAAG,KAAI,CAACC,KAAL,GAAa,QAAb,GAAwB,IAAnC;AACA,aAAO,CAAC,GAAG1B,MAAM,CAAC2B,UAAX,EAAuB,CAAC,GAAG7B,iBAAiB,CAAC8B,WAAtB,YAAsC,KAAI,CAACF,KAAL,GAAa,MAAb,GAAsB,EAA5D,mBAA8E,SAA9E,EAAyF,CAAC,GAAG5B,iBAAiB,CAAC+B,aAAtB,EAAqCX,QAAQ,CAACY,IAAT,CAAc,GAAd,CAArC,CAAzF,CAAvB,iCAAmML,EAAnM,kBAAoNP,QAAQ,CAACY,IAAT,CAAc,GAAd,CAApN,EAAwO,UAAxO,EAAoPf,QAAQ,CAACe,IAAT,CAAc,GAAd,CAApP,CAAP;AACD;AAL0B,GAAtB,GAMH;AACFP,IAAAA,IAAI,EAAE,KAAKG,KAAL,GAAaX,QAAQ,CAACT,MAAT,GAAkB,CAA/B,GAAmC,KADvC;AAEFkB,IAAAA,OAAO,EAAE;AAAA,aAAM,KAAI,CAACE,KAAL,GAAa,CAAC,GAAG1B,MAAM,CAAC2B,UAAX,EAAuB,CAAC,GAAG7B,iBAAiB,CAAC8B,WAAtB,EAAmC,kBAAnC,EAAuD,SAAvD,EAAkE,EAAlE,CAAvB,EAA8F,sCAA9F,EAAsI,QAAtI,EAAgJ,UAAhJ,EAA4Jb,QAAQ,CAACe,IAAT,CAAc,GAAd,CAA5J,CAAb,GAA+L,CAAC,CAAC,GAAGhC,iBAAiB,CAAC8B,WAAtB,kBAAmD,SAAnD,CAAD,EAAgE,+CAAhE,EAAiHE,IAAjH,CAAsH,IAAtH,CAArM;AAAA;AAFP,GANJ;AAUD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveClass = toHaveClass;\n\nvar _jestMatcherUtils = require(\"jest-matcher-utils\");\n\nvar _utils = require(\"./utils\");\n\nfunction splitClassNames(str) {\n  if (!str) {\n    return [];\n  }\n\n  return str.split(/\\s+/).filter(s => s.length > 0);\n}\n\nfunction isSubset(subset, superset) {\n  return subset.every(item => superset.includes(item));\n}\n\nfunction toHaveClass(htmlElement, ...expectedClassNames) {\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveClass, this);\n  const received = splitClassNames(htmlElement.getAttribute('class'));\n  const expected = expectedClassNames.reduce((acc, className) => acc.concat(splitClassNames(className)), []);\n  return expected.length > 0 ? {\n    pass: isSubset(expected, received),\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)((0, _jestMatcherUtils.matcherHint)(`${this.isNot ? '.not' : ''}.toHaveClass`, 'element', (0, _jestMatcherUtils.printExpected)(expected.join(' '))), `Expected the element ${to} have class`, expected.join(' '), 'Received', received.join(' '));\n    }\n  } : {\n    pass: this.isNot ? received.length > 0 : false,\n    message: () => this.isNot ? (0, _utils.getMessage)((0, _jestMatcherUtils.matcherHint)('.not.toHaveClass', 'element', ''), 'Expected the element to have classes', '(none)', 'Received', received.join(' ')) : [(0, _jestMatcherUtils.matcherHint)(`.toHaveClass`, 'element'), 'At least one expected class must be provided.'].join('\\n')\n  };\n}"]},"metadata":{},"sourceType":"script"}