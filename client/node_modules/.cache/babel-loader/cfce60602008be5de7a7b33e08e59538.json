{"ast":null,"code":"import PropTypes from 'prop-types';\nexport default ((component, props) => {\n  const propType = type => {\n    if (type === String) return PropTypes.string;\n    if (type === Boolean) return PropTypes.bool;\n    if (type === Function) return PropTypes.func;\n    if (type === Number) return PropTypes.number;\n    if (type === Object) return PropTypes.object;\n    if (type === Array) return PropTypes.array;\n    if (type === Symbol) return PropTypes.symbol;\n    if (type.constructor === Function || type === Date) return PropTypes.instanceOf(type);\n    return PropTypes.any;\n  };\n\n  component.propTypes = {};\n  Object.keys(props).forEach(propName => {\n    const prop = props[propName];\n    const required = typeof prop.required !== 'undefined';\n    const type = prop.type || prop;\n\n    if (Array.isArray(type)) {\n      if (required) {\n        component.propTypes[propName] = PropTypes.oneOfType(type.map(propType)).required;\n      } else {\n        component.propTypes[propName] = PropTypes.oneOfType(type.map(propType));\n      }\n    } else if (required) {\n      component.propTypes[propName] = propType(type).required;\n    } else {\n      component.propTypes[propName] = propType(type);\n    }\n\n    if (typeof prop.default !== 'undefined' || 'default' in prop && prop.default === undefined) {\n      const hasFunctionType = prop.type === Function || Array.isArray(prop.type) && prop.type.indexOf(Function) >= 0;\n      if (!component.defaultProps) component.defaultProps = {};\n\n      if (typeof prop.default === 'function' && !hasFunctionType) {\n        component.defaultProps[propName] = prop.default();\n      } else {\n        component.defaultProps[propName] = prop.default;\n      }\n    }\n  });\n});","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/runtime-helpers/react-component-set-props.js"],"names":["PropTypes","component","props","propType","type","String","string","Boolean","bool","Function","func","Number","number","Object","object","Array","array","Symbol","symbol","constructor","Date","instanceOf","any","propTypes","keys","forEach","propName","prop","required","isArray","oneOfType","map","default","undefined","hasFunctionType","indexOf","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default (component, props) => {\n  const propType = (type) => {\n    if (type === String) return PropTypes.string;\n    if (type === Boolean) return PropTypes.bool;\n    if (type === Function) return PropTypes.func;\n    if (type === Number) return PropTypes.number;\n    if (type === Object) return PropTypes.object;\n    if (type === Array) return PropTypes.array;\n    if (type === Symbol) return PropTypes.symbol;\n    if (type.constructor === Function || type === Date) return PropTypes.instanceOf(type);\n    return PropTypes.any;\n  };\n\n  component.propTypes = {};\n\n  Object.keys(props).forEach((propName) => {\n    const prop = props[propName];\n    const required = typeof prop.required !== 'undefined';\n    const type = prop.type || prop;\n\n    if (Array.isArray(type)) {\n      if (required) {\n        component.propTypes[propName] = PropTypes.oneOfType(type.map(propType)).required;\n      } else {\n        component.propTypes[propName] = PropTypes.oneOfType(type.map(propType));\n      }\n    } else if (required) {\n      component.propTypes[propName] = propType(type).required;\n    } else {\n      component.propTypes[propName] = propType(type);\n    }\n\n    if (\n      (typeof prop.default !== 'undefined')\n      || (('default' in prop) && prop.default === undefined)\n    ) {\n      const hasFunctionType = prop.type === Function\n        || (Array.isArray(prop.type) && prop.type.indexOf(Function) >= 0);\n      if (!component.defaultProps) component.defaultProps = {};\n      if (typeof prop.default === 'function' && !hasFunctionType) {\n        component.defaultProps[propName] = prop.default();\n      } else {\n        component.defaultProps[propName] = prop.default;\n      }\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}