{"ast":null,"code":"import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7Row extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onClick', 'onResize']);\n    })();\n  }\n\n  onClick(event) {\n    this.dispatchEvent('click', event);\n  }\n\n  onResize(el) {\n    if (el === this.eventTargetEl) {\n      this.dispatchEvent('grid:resize gridResize');\n    }\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      className,\n      id,\n      style,\n      tag,\n      noGap,\n      resizable,\n      resizableFixed,\n      resizableAbsolute,\n      resizableHandler\n    } = props;\n    const RowTag = tag;\n    const classes = Utils.classNames(className, 'row', {\n      'no-gap': noGap,\n      resizable,\n      'resizable-fixed': resizableFixed,\n      'resizable-absolute': resizableAbsolute\n    }, Mixins.colorClasses(props));\n    return React.createElement(RowTag, {\n      id: id,\n      style: style,\n      className: classes,\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      }\n    }, this.slots['default'], resizable && resizableHandler && React.createElement('span', {\n      className: 'resize-handler'\n    }));\n  }\n\n  componentWillUnmount() {\n    const self = this;\n    const el = self.refs.el;\n    if (!el || !self.$f7) return;\n    el.removeEventListener('click', self.onClick);\n    self.$f7.off('gridResize', self.onResize);\n    delete self.eventTargetEl;\n  }\n\n  componentDidMount() {\n    const self = this;\n    self.eventTargetEl = self.refs.el;\n    self.eventTargetEl.addEventListener('click', self.onClick);\n    self.$f7ready(f7 => {\n      f7.on('gridResize', self.onResize);\n    });\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7Row, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  noGap: Boolean,\n  tag: {\n    type: String,\n    default: 'div'\n  },\n  resizable: Boolean,\n  resizableFixed: Boolean,\n  resizableAbsolute: Boolean,\n  resizableHandler: {\n    type: Boolean,\n    default: true\n  }\n}, Mixins.colorProps));\n\nF7Row.displayName = 'f7-row';\nexport default F7Row;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/components/row.js"],"names":["React","Utils","Mixins","__reactComponentDispatchEvent","__reactComponentSlots","__reactComponentSetProps","F7Row","Component","constructor","props","context","__reactRefs","bindMethods","onClick","event","dispatchEvent","onResize","el","eventTargetEl","render","self","className","id","style","tag","noGap","resizable","resizableFixed","resizableAbsolute","resizableHandler","RowTag","classes","classNames","colorClasses","createElement","ref","__reactNode","slots","componentWillUnmount","refs","$f7","removeEventListener","off","componentDidMount","addEventListener","$f7ready","f7","on","events","args","Object","assign","String","Number","Boolean","type","default","colorProps","displayName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,6BAAP,MAA0C,sDAA1C;AACA,OAAOC,qBAAP,MAAkC,6CAAlC;AACA,OAAOC,wBAAP,MAAqC,iDAArC;;AAEA,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,WAAL,GAAmB,EAAnB;;AAEA,KAAC,MAAM;AACLV,MAAAA,KAAK,CAACW,WAAN,CAAkB,IAAlB,EAAwB,CAAC,SAAD,EAAY,UAAZ,CAAxB;AACD,KAFD;AAGD;;AAEDC,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACb,SAAKC,aAAL,CAAmB,OAAnB,EAA4BD,KAA5B;AACD;;AAEDE,EAAAA,QAAQ,CAACC,EAAD,EAAK;AACX,QAAIA,EAAE,KAAK,KAAKC,aAAhB,EAA+B;AAC7B,WAAKH,aAAL,CAAmB,wBAAnB;AACD;AACF;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,IAAb;AACA,UAAMX,KAAK,GAAGW,IAAI,CAACX,KAAnB;AACA,UAAM;AACJY,MAAAA,SADI;AAEJC,MAAAA,EAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA,GAJI;AAKJC,MAAAA,KALI;AAMJC,MAAAA,SANI;AAOJC,MAAAA,cAPI;AAQJC,MAAAA,iBARI;AASJC,MAAAA;AATI,QAUFpB,KAVJ;AAWA,UAAMqB,MAAM,GAAGN,GAAf;AACA,UAAMO,OAAO,GAAG9B,KAAK,CAAC+B,UAAN,CAAiBX,SAAjB,EAA4B,KAA5B,EAAmC;AACjD,gBAAUI,KADuC;AAEjDC,MAAAA,SAFiD;AAGjD,yBAAmBC,cAH8B;AAIjD,4BAAsBC;AAJ2B,KAAnC,EAKb1B,MAAM,CAAC+B,YAAP,CAAoBxB,KAApB,CALa,CAAhB;AAMA,WAAOT,KAAK,CAACkC,aAAN,CAAoBJ,MAApB,EAA4B;AACjCR,MAAAA,EAAE,EAAEA,EAD6B;AAEjCC,MAAAA,KAAK,EAAEA,KAF0B;AAGjCF,MAAAA,SAAS,EAAEU,OAHsB;AAIjCI,MAAAA,GAAG,EAAEC,WAAW,IAAI;AAClB,aAAKzB,WAAL,CAAiB,IAAjB,IAAyByB,WAAzB;AACD;AANgC,KAA5B,EAOJ,KAAKC,KAAL,CAAW,SAAX,CAPI,EAOmBX,SAAS,IAAIG,gBAAb,IAAiC7B,KAAK,CAACkC,aAAN,CAAoB,MAApB,EAA4B;AACrFb,MAAAA,SAAS,EAAE;AAD0E,KAA5B,CAPpD,CAAP;AAUD;;AAEDiB,EAAAA,oBAAoB,GAAG;AACrB,UAAMlB,IAAI,GAAG,IAAb;AACA,UAAMH,EAAE,GAAGG,IAAI,CAACmB,IAAL,CAAUtB,EAArB;AACA,QAAI,CAACA,EAAD,IAAO,CAACG,IAAI,CAACoB,GAAjB,EAAsB;AACtBvB,IAAAA,EAAE,CAACwB,mBAAH,CAAuB,OAAvB,EAAgCrB,IAAI,CAACP,OAArC;AACAO,IAAAA,IAAI,CAACoB,GAAL,CAASE,GAAT,CAAa,YAAb,EAA2BtB,IAAI,CAACJ,QAAhC;AACA,WAAOI,IAAI,CAACF,aAAZ;AACD;;AAEDyB,EAAAA,iBAAiB,GAAG;AAClB,UAAMvB,IAAI,GAAG,IAAb;AACAA,IAAAA,IAAI,CAACF,aAAL,GAAqBE,IAAI,CAACmB,IAAL,CAAUtB,EAA/B;AACAG,IAAAA,IAAI,CAACF,aAAL,CAAmB0B,gBAAnB,CAAoC,OAApC,EAA6CxB,IAAI,CAACP,OAAlD;AACAO,IAAAA,IAAI,CAACyB,QAAL,CAAcC,EAAE,IAAI;AAClBA,MAAAA,EAAE,CAACC,EAAH,CAAM,YAAN,EAAoB3B,IAAI,CAACJ,QAAzB;AACD,KAFD;AAGD;;AAED,MAAIqB,KAAJ,GAAY;AACV,WAAOjC,qBAAqB,CAAC,KAAKK,KAAN,CAA5B;AACD;;AAEDM,EAAAA,aAAa,CAACiC,MAAD,EAAS,GAAGC,IAAZ,EAAkB;AAC7B,WAAO9C,6BAA6B,CAAC,IAAD,EAAO6C,MAAP,EAAe,GAAGC,IAAlB,CAApC;AACD;;AAED,MAAIV,IAAJ,GAAW;AACT,WAAO,KAAK5B,WAAZ;AACD;;AAED,MAAI4B,IAAJ,CAASA,IAAT,EAAe,CAAE;;AAnFiB;;AAuFpClC,wBAAwB,CAACC,KAAD,EAAQ4C,MAAM,CAACC,MAAP,CAAc;AAC5C7B,EAAAA,EAAE,EAAE,CAAC8B,MAAD,EAASC,MAAT,CADwC;AAE5ChC,EAAAA,SAAS,EAAE+B,MAFiC;AAG5C7B,EAAAA,KAAK,EAAE2B,MAHqC;AAI5CzB,EAAAA,KAAK,EAAE6B,OAJqC;AAK5C9B,EAAAA,GAAG,EAAE;AACH+B,IAAAA,IAAI,EAAEH,MADH;AAEHI,IAAAA,OAAO,EAAE;AAFN,GALuC;AAS5C9B,EAAAA,SAAS,EAAE4B,OATiC;AAU5C3B,EAAAA,cAAc,EAAE2B,OAV4B;AAW5C1B,EAAAA,iBAAiB,EAAE0B,OAXyB;AAY5CzB,EAAAA,gBAAgB,EAAE;AAChB0B,IAAAA,IAAI,EAAED,OADU;AAEhBE,IAAAA,OAAO,EAAE;AAFO;AAZ0B,CAAd,EAgB7BtD,MAAM,CAACuD,UAhBsB,CAAR,CAAxB;;AAkBAnD,KAAK,CAACoD,WAAN,GAAoB,QAApB;AACA,eAAepD,KAAf","sourcesContent":["import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7Row extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onClick', 'onResize']);\n    })();\n  }\n\n  onClick(event) {\n    this.dispatchEvent('click', event);\n  }\n\n  onResize(el) {\n    if (el === this.eventTargetEl) {\n      this.dispatchEvent('grid:resize gridResize');\n    }\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      className,\n      id,\n      style,\n      tag,\n      noGap,\n      resizable,\n      resizableFixed,\n      resizableAbsolute,\n      resizableHandler\n    } = props;\n    const RowTag = tag;\n    const classes = Utils.classNames(className, 'row', {\n      'no-gap': noGap,\n      resizable,\n      'resizable-fixed': resizableFixed,\n      'resizable-absolute': resizableAbsolute\n    }, Mixins.colorClasses(props));\n    return React.createElement(RowTag, {\n      id: id,\n      style: style,\n      className: classes,\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      }\n    }, this.slots['default'], resizable && resizableHandler && React.createElement('span', {\n      className: 'resize-handler'\n    }));\n  }\n\n  componentWillUnmount() {\n    const self = this;\n    const el = self.refs.el;\n    if (!el || !self.$f7) return;\n    el.removeEventListener('click', self.onClick);\n    self.$f7.off('gridResize', self.onResize);\n    delete self.eventTargetEl;\n  }\n\n  componentDidMount() {\n    const self = this;\n    self.eventTargetEl = self.refs.el;\n    self.eventTargetEl.addEventListener('click', self.onClick);\n    self.$f7ready(f7 => {\n      f7.on('gridResize', self.onResize);\n    });\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7Row, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  noGap: Boolean,\n  tag: {\n    type: String,\n    default: 'div'\n  },\n  resizable: Boolean,\n  resizableFixed: Boolean,\n  resizableAbsolute: Boolean,\n  resizableHandler: {\n    type: Boolean,\n    default: true\n  }\n}, Mixins.colorProps));\n\nF7Row.displayName = 'f7-row';\nexport default F7Row;"]},"metadata":{},"sourceType":"module"}