{"ast":null,"code":"import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7MenuDropdownItem extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onClick']);\n    })();\n  }\n\n  onClick(event) {\n    this.dispatchEvent('click', event);\n  }\n\n  get attrs() {\n    const self = this;\n    const props = self.props;\n    const {\n      link,\n      href,\n      target\n    } = props;\n    let hrefComputed = href;\n    if (typeof hrefComputed === 'undefined' && link) hrefComputed = '#';\n    return Utils.extend({\n      href: hrefComputed,\n      target\n    }, Mixins.linkRouterAttrs(props), Mixins.linkActionsAttrs(props));\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      id,\n      className,\n      style,\n      link,\n      href,\n      text,\n      divider,\n      menuClose\n    } = props;\n    const isLink = link || href || href === '';\n    const Tag = isLink ? 'a' : 'div';\n    const classes = Utils.classNames({\n      'menu-dropdown-link': isLink && !divider,\n      'menu-dropdown-item': !isLink && !divider,\n      'menu-dropdown-divider': divider\n    }, className, Mixins.colorClasses(props), Mixins.linkRouterClasses(props), Mixins.linkActionsClasses(props), {\n      'menu-close': typeof menuClose === 'undefined'\n    });\n    return React.createElement(Tag, Object.assign({\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      className: classes,\n      id: id,\n      style: style\n    }, self.attrs), text, this.slots['default']);\n  }\n\n  componentWillUnmount() {\n    const self = this;\n    const el = self.refs.el;\n    if (!el) return;\n    el.removeEventListener('click', self.onClick);\n    delete el.f7RouteProps;\n  }\n\n  componentDidUpdate() {\n    const self = this;\n    const el = self.refs.el;\n    if (!el) return;\n    const {\n      routeProps\n    } = self.props;\n    if (routeProps) el.f7RouteProps = routeProps;\n  }\n\n  componentDidMount() {\n    const self = this;\n    const el = self.refs.el;\n    if (!el) return;\n    el.addEventListener('click', self.onClick);\n    const {\n      routeProps\n    } = self.props;\n    if (routeProps) el.f7RouteProps = routeProps;\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7MenuDropdownItem, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  text: String,\n  link: Boolean,\n  href: String,\n  target: String,\n  divider: Boolean\n}, Mixins.colorProps, {}, Mixins.linkRouterProps, {}, Mixins.linkActionsProps));\n\nF7MenuDropdownItem.displayName = 'f7-menu-dropdown-item';\nexport default F7MenuDropdownItem;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/components/menu-dropdown-item.js"],"names":["React","Utils","Mixins","__reactComponentDispatchEvent","__reactComponentSlots","__reactComponentSetProps","F7MenuDropdownItem","Component","constructor","props","context","__reactRefs","bindMethods","onClick","event","dispatchEvent","attrs","self","link","href","target","hrefComputed","extend","linkRouterAttrs","linkActionsAttrs","render","id","className","style","text","divider","menuClose","isLink","Tag","classes","classNames","colorClasses","linkRouterClasses","linkActionsClasses","createElement","Object","assign","ref","__reactNode","slots","componentWillUnmount","el","refs","removeEventListener","f7RouteProps","componentDidUpdate","routeProps","componentDidMount","addEventListener","events","args","String","Number","Boolean","colorProps","linkRouterProps","linkActionsProps","displayName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,6BAAP,MAA0C,sDAA1C;AACA,OAAOC,qBAAP,MAAkC,6CAAlC;AACA,OAAOC,wBAAP,MAAqC,iDAArC;;AAEA,MAAMC,kBAAN,SAAiCN,KAAK,CAACO,SAAvC,CAAiD;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,WAAL,GAAmB,EAAnB;;AAEA,KAAC,MAAM;AACLV,MAAAA,KAAK,CAACW,WAAN,CAAkB,IAAlB,EAAwB,CAAC,SAAD,CAAxB;AACD,KAFD;AAGD;;AAEDC,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACb,SAAKC,aAAL,CAAmB,OAAnB,EAA4BD,KAA5B;AACD;;AAED,MAAIE,KAAJ,GAAY;AACV,UAAMC,IAAI,GAAG,IAAb;AACA,UAAMR,KAAK,GAAGQ,IAAI,CAACR,KAAnB;AACA,UAAM;AACJS,MAAAA,IADI;AAEJC,MAAAA,IAFI;AAGJC,MAAAA;AAHI,QAIFX,KAJJ;AAKA,QAAIY,YAAY,GAAGF,IAAnB;AACA,QAAI,OAAOE,YAAP,KAAwB,WAAxB,IAAuCH,IAA3C,EAAiDG,YAAY,GAAG,GAAf;AACjD,WAAOpB,KAAK,CAACqB,MAAN,CAAa;AAClBH,MAAAA,IAAI,EAAEE,YADY;AAElBD,MAAAA;AAFkB,KAAb,EAGJlB,MAAM,CAACqB,eAAP,CAAuBd,KAAvB,CAHI,EAG2BP,MAAM,CAACsB,gBAAP,CAAwBf,KAAxB,CAH3B,CAAP;AAID;;AAEDgB,EAAAA,MAAM,GAAG;AACP,UAAMR,IAAI,GAAG,IAAb;AACA,UAAMR,KAAK,GAAGQ,IAAI,CAACR,KAAnB;AACA,UAAM;AACJiB,MAAAA,EADI;AAEJC,MAAAA,SAFI;AAGJC,MAAAA,KAHI;AAIJV,MAAAA,IAJI;AAKJC,MAAAA,IALI;AAMJU,MAAAA,IANI;AAOJC,MAAAA,OAPI;AAQJC,MAAAA;AARI,QASFtB,KATJ;AAUA,UAAMuB,MAAM,GAAGd,IAAI,IAAIC,IAAR,IAAgBA,IAAI,KAAK,EAAxC;AACA,UAAMc,GAAG,GAAGD,MAAM,GAAG,GAAH,GAAS,KAA3B;AACA,UAAME,OAAO,GAAGjC,KAAK,CAACkC,UAAN,CAAiB;AAC/B,4BAAsBH,MAAM,IAAI,CAACF,OADF;AAE/B,4BAAsB,CAACE,MAAD,IAAW,CAACF,OAFH;AAG/B,+BAAyBA;AAHM,KAAjB,EAIbH,SAJa,EAIFzB,MAAM,CAACkC,YAAP,CAAoB3B,KAApB,CAJE,EAI0BP,MAAM,CAACmC,iBAAP,CAAyB5B,KAAzB,CAJ1B,EAI2DP,MAAM,CAACoC,kBAAP,CAA0B7B,KAA1B,CAJ3D,EAI6F;AAC3G,oBAAc,OAAOsB,SAAP,KAAqB;AADwE,KAJ7F,CAAhB;AAOA,WAAO/B,KAAK,CAACuC,aAAN,CAAoBN,GAApB,EAAyBO,MAAM,CAACC,MAAP,CAAc;AAC5CC,MAAAA,GAAG,EAAEC,WAAW,IAAI;AAClB,aAAKhC,WAAL,CAAiB,IAAjB,IAAyBgC,WAAzB;AACD,OAH2C;AAI5ChB,MAAAA,SAAS,EAAEO,OAJiC;AAK5CR,MAAAA,EAAE,EAAEA,EALwC;AAM5CE,MAAAA,KAAK,EAAEA;AANqC,KAAd,EAO7BX,IAAI,CAACD,KAPwB,CAAzB,EAOSa,IAPT,EAOe,KAAKe,KAAL,CAAW,SAAX,CAPf,CAAP;AAQD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,UAAM5B,IAAI,GAAG,IAAb;AACA,UAAM6B,EAAE,GAAG7B,IAAI,CAAC8B,IAAL,CAAUD,EAArB;AACA,QAAI,CAACA,EAAL,EAAS;AACTA,IAAAA,EAAE,CAACE,mBAAH,CAAuB,OAAvB,EAAgC/B,IAAI,CAACJ,OAArC;AACA,WAAOiC,EAAE,CAACG,YAAV;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,UAAMjC,IAAI,GAAG,IAAb;AACA,UAAM6B,EAAE,GAAG7B,IAAI,CAAC8B,IAAL,CAAUD,EAArB;AACA,QAAI,CAACA,EAAL,EAAS;AACT,UAAM;AACJK,MAAAA;AADI,QAEFlC,IAAI,CAACR,KAFT;AAGA,QAAI0C,UAAJ,EAAgBL,EAAE,CAACG,YAAH,GAAkBE,UAAlB;AACjB;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMnC,IAAI,GAAG,IAAb;AACA,UAAM6B,EAAE,GAAG7B,IAAI,CAAC8B,IAAL,CAAUD,EAArB;AACA,QAAI,CAACA,EAAL,EAAS;AACTA,IAAAA,EAAE,CAACO,gBAAH,CAAoB,OAApB,EAA6BpC,IAAI,CAACJ,OAAlC;AACA,UAAM;AACJsC,MAAAA;AADI,QAEFlC,IAAI,CAACR,KAFT;AAGA,QAAI0C,UAAJ,EAAgBL,EAAE,CAACG,YAAH,GAAkBE,UAAlB;AACjB;;AAED,MAAIP,KAAJ,GAAY;AACV,WAAOxC,qBAAqB,CAAC,KAAKK,KAAN,CAA5B;AACD;;AAEDM,EAAAA,aAAa,CAACuC,MAAD,EAAS,GAAGC,IAAZ,EAAkB;AAC7B,WAAOpD,6BAA6B,CAAC,IAAD,EAAOmD,MAAP,EAAe,GAAGC,IAAlB,CAApC;AACD;;AAED,MAAIR,IAAJ,GAAW;AACT,WAAO,KAAKpC,WAAZ;AACD;;AAED,MAAIoC,IAAJ,CAASA,IAAT,EAAe,CAAE;;AAvG8B;;AA2GjD1C,wBAAwB,CAACC,kBAAD,EAAqBkC,MAAM,CAACC,MAAP,CAAc;AACzDf,EAAAA,EAAE,EAAE,CAAC8B,MAAD,EAASC,MAAT,CADqD;AAEzD9B,EAAAA,SAAS,EAAE6B,MAF8C;AAGzD5B,EAAAA,KAAK,EAAEY,MAHkD;AAIzDX,EAAAA,IAAI,EAAE2B,MAJmD;AAKzDtC,EAAAA,IAAI,EAAEwC,OALmD;AAMzDvC,EAAAA,IAAI,EAAEqC,MANmD;AAOzDpC,EAAAA,MAAM,EAAEoC,MAPiD;AAQzD1B,EAAAA,OAAO,EAAE4B;AARgD,CAAd,EAS1CxD,MAAM,CAACyD,UATmC,EASvB,EATuB,EASnBzD,MAAM,CAAC0D,eATY,EASK,EATL,EASS1D,MAAM,CAAC2D,gBAThB,CAArB,CAAxB;;AAWAvD,kBAAkB,CAACwD,WAAnB,GAAiC,uBAAjC;AACA,eAAexD,kBAAf","sourcesContent":["import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7MenuDropdownItem extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onClick']);\n    })();\n  }\n\n  onClick(event) {\n    this.dispatchEvent('click', event);\n  }\n\n  get attrs() {\n    const self = this;\n    const props = self.props;\n    const {\n      link,\n      href,\n      target\n    } = props;\n    let hrefComputed = href;\n    if (typeof hrefComputed === 'undefined' && link) hrefComputed = '#';\n    return Utils.extend({\n      href: hrefComputed,\n      target\n    }, Mixins.linkRouterAttrs(props), Mixins.linkActionsAttrs(props));\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      id,\n      className,\n      style,\n      link,\n      href,\n      text,\n      divider,\n      menuClose\n    } = props;\n    const isLink = link || href || href === '';\n    const Tag = isLink ? 'a' : 'div';\n    const classes = Utils.classNames({\n      'menu-dropdown-link': isLink && !divider,\n      'menu-dropdown-item': !isLink && !divider,\n      'menu-dropdown-divider': divider\n    }, className, Mixins.colorClasses(props), Mixins.linkRouterClasses(props), Mixins.linkActionsClasses(props), {\n      'menu-close': typeof menuClose === 'undefined'\n    });\n    return React.createElement(Tag, Object.assign({\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      className: classes,\n      id: id,\n      style: style\n    }, self.attrs), text, this.slots['default']);\n  }\n\n  componentWillUnmount() {\n    const self = this;\n    const el = self.refs.el;\n    if (!el) return;\n    el.removeEventListener('click', self.onClick);\n    delete el.f7RouteProps;\n  }\n\n  componentDidUpdate() {\n    const self = this;\n    const el = self.refs.el;\n    if (!el) return;\n    const {\n      routeProps\n    } = self.props;\n    if (routeProps) el.f7RouteProps = routeProps;\n  }\n\n  componentDidMount() {\n    const self = this;\n    const el = self.refs.el;\n    if (!el) return;\n    el.addEventListener('click', self.onClick);\n    const {\n      routeProps\n    } = self.props;\n    if (routeProps) el.f7RouteProps = routeProps;\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7MenuDropdownItem, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  text: String,\n  link: Boolean,\n  href: String,\n  target: String,\n  divider: Boolean\n}, Mixins.colorProps, {}, Mixins.linkRouterProps, {}, Mixins.linkActionsProps));\n\nF7MenuDropdownItem.displayName = 'f7-menu-dropdown-item';\nexport default F7MenuDropdownItem;"]},"metadata":{},"sourceType":"module"}