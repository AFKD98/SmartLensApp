{"ast":null,"code":"var _jsxFileName = \"/home/faraz/courses/SE/myapp/src/components/photographersSelection.jsx\";\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport bg from \"../assets/wedding_cover.jpg\";\nimport Recphoto from \"../assets/Recommend.jpg\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport axios from \"axios\";\nimport PhotographersCard from \"./photographersCard\";\n\nclass PhotographerSelection extends Component {\n  constructor(props) {\n    // constructor\n    super(props);\n    this.state = {\n      photographers: [{\n        Key: \"\",\n        name: \"\",\n        level: \"\",\n        range: 0\n      }],\n      categoryKey: \"5e9def426401f512546745b5\",\n      photographerKeys: [{\n        Key: \"\"\n      }]\n    };\n    this.jumbotronCode = this.jumbotronCode.bind(this);\n  }\n\n  jumbotronCode() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundImage: \"url(\" + Recphoto + \")\",\n        paddingTop: 50,\n        padding: 50,\n        paddingBottom: 50,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        width: \"100vw\",\n        height: \"70vh\"\n      },\n      className: \"jumbotron jumbotron-fluid\",\n      className: \"text-right p-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-4\",\n      className: \"text-center text-white pr-auto pt-auto pb-auto mt-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Wedding\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead medium\",\n      className: \"text-center text-white pr-auto mt-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, \"Fill the form below and we will get back to you with a\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 67\n      }\n    }), \"photographer that best suits your needs. You'll have a\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 67\n      }\n    }), \"photographer in less than 24 hours!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  componentDidMount() {\n    this.setState({\n      categoryKey: \"5e9def426401f512546745b5\"\n    }); //function runs at the start of component loading\n\n    axios //sending a get request to get all the photographers of the category from Mongo\n    .get(\"http://localhost:5000/categories/\" + this.state.categoryKey).then(res => {\n      // res.data.photographers.map((entree) =>\n      //   this.setState({\n      //     photographerKeys: this.state.photographerKeys.concat([\n      //       //storing all the photographer ids of a particular category in my local state array\n      //       {\n      //         Key: entree,\n      //       },\n      //     ]),\n      //   })\n      // );\n      // console.log(this.state.photographerKeys);\n      console.log(res.data.photographers);\n    }).catch(error => {\n      console.log(error);\n    });\n    this.state.photographerKeys.map(photographerKey => {\n      axios //sending a get request to get all the photographers of the category from Mongo\n      .get(\"http://localhost:5000/photographers/\" + photographerKey.Key).then(res => {\n        res.data.map(photographerFromDB => this.setState({\n          photographers: this.state.photographers.concat([//storing all the photographer ids and their name values in my local state array\n          {\n            Key: photographerFromDB._id,\n            name: photographerFromDB.Name,\n            level: photographerFromDB.Level,\n            range: photographerFromDB.Range\n          }])\n        })); // console.log(this.state.photographers);\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n  }\n\n  render() {\n    let cards = this.state.photographers.map(Photographer => {\n      return /*#__PURE__*/React.createElement(Col, {\n        lg: \"auto\",\n        sm: \"auto\",\n        md: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(PhotographersCard, {\n        Photographer: Photographer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, this.jumbotronCode(), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      lg: \"auto\",\n      sm: \"auto\",\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, cards)));\n  }\n\n}\n\nexport default PhotographerSelection;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/src/components/photographersSelection.jsx"],"names":["React","Component","Button","ToggleButton","bg","Recphoto","Container","Row","Col","axios","PhotographersCard","PhotographerSelection","constructor","props","state","photographers","Key","name","level","range","categoryKey","photographerKeys","jumbotronCode","bind","backgroundImage","paddingTop","padding","paddingBottom","backgroundPosition","backgroundSize","backgroundRepeat","width","height","componentDidMount","setState","get","then","res","console","log","data","catch","error","map","photographerKey","photographerFromDB","concat","_id","Name","Level","Range","render","cards","Photographer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport bg from \"../assets/wedding_cover.jpg\";\nimport Recphoto from \"../assets/Recommend.jpg\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport axios from \"axios\";\nimport PhotographersCard from \"./photographersCard\";\n\nclass PhotographerSelection extends Component {\n  constructor(props) {\n    // constructor\n    super(props);\n    this.state = {\n      photographers: [\n        {\n          Key: \"\",\n          name: \"\",\n          level: \"\",\n          range: 0,\n        },\n      ],\n      categoryKey: \"5e9def426401f512546745b5\",\n      photographerKeys: [{ Key: \"\" }],\n    };\n\n    this.jumbotronCode = this.jumbotronCode.bind(this);\n  }\n\n  jumbotronCode() {\n    return (\n      <div\n        style={{\n          backgroundImage: \"url(\" + Recphoto + \")\",\n          paddingTop: 50,\n          padding: 50,\n          paddingBottom: 50,\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n          width: \"100vw\",\n          height: \"70vh\",\n        }}\n        className=\"jumbotron jumbotron-fluid\"\n        className=\"text-right p-5\"\n      >\n        <div className=\"container\">\n          <h1\n            className=\"display-4\"\n            className=\"text-center text-white pr-auto pt-auto pb-auto mt-auto\"\n          >\n            Wedding\n          </h1>\n          <p\n            className=\"lead medium\"\n            className=\"text-center text-white pr-auto mt-auto\"\n          >\n            Fill the form below and we will get back to you with a<br />\n            photographer that best suits your needs. You'll have a<br />\n            photographer in less than 24 hours!\n            <br />\n          </p>\n        </div>\n      </div>\n    );\n  }\n  componentDidMount() {\n    this.setState({ categoryKey: \"5e9def426401f512546745b5\" });\n    //function runs at the start of component loading\n    axios //sending a get request to get all the photographers of the category from Mongo\n      .get(\"http://localhost:5000/categories/\" + this.state.categoryKey)\n      .then((res) => {\n        // res.data.photographers.map((entree) =>\n        //   this.setState({\n        //     photographerKeys: this.state.photographerKeys.concat([\n        //       //storing all the photographer ids of a particular category in my local state array\n        //       {\n        //         Key: entree,\n        //       },\n        //     ]),\n        //   })\n        // );\n        // console.log(this.state.photographerKeys);\n        console.log(res.data.photographers);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    this.state.photographerKeys.map((photographerKey) => {\n      axios //sending a get request to get all the photographers of the category from Mongo\n        .get(\"http://localhost:5000/photographers/\" + photographerKey.Key)\n        .then((res) => {\n          res.data.map((photographerFromDB) =>\n            this.setState({\n              photographers: this.state.photographers.concat([\n                //storing all the photographer ids and their name values in my local state array\n                {\n                  Key: photographerFromDB._id,\n                  name: photographerFromDB.Name,\n                  level: photographerFromDB.Level,\n                  range: photographerFromDB.Range,\n                },\n              ]),\n            })\n          );\n          // console.log(this.state.photographers);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    });\n  }\n  render() {\n    let cards = this.state.photographers.map((Photographer) => {\n      return (\n        <Col lg=\"auto\" sm=\"auto\" md=\"auto\">\n          <PhotographersCard Photographer={Photographer} />\n        </Col>\n      );\n    });\n    return (\n      <React.Fragment>\n        {/* <Col md={{ span: 4, offset: 4 }}>{`md={{ span: 4, offset: 4 }}`}</Col> */}\n        {this.jumbotronCode()}\n        <Container fluid>\n          <Row lg=\"auto\" sm=\"auto\" md=\"auto\">\n            {cards}\n          </Row>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PhotographerSelection;\n"]},"metadata":{},"sourceType":"module"}