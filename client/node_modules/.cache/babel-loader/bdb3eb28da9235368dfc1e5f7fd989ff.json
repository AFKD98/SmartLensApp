{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stuff to move\\\\Work\\\\SE\\\\deployed\\\\client\\\\src\\\\components\\\\adminPortal copy.jsx\";\nimport React, { Component } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport { connect } from \"react-redux\";\nimport { getOrders } from \"../actions/orderActions\"; //stored as a prop\n\nimport PropTypes from \"prop-types\"; // validation\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow); // function createData(ClientName, ContactNumber, Location, Budget, date) {\n//   return { ClientName, ContactNumber, Location, Budget, date };\n// }\n// data ref\n// ClientName: { type: String, required: true },\n//     ContactNumber: { type: String, required: true },\n//     Email: { type: String, required: true },\n//     Location: { type: String, required: true },\n//     Category: { type: String, required: true }, //check number of categories\n//     Photographer: { type: String }, //check id\n//     Budget: { type: Number, required: true },\n//     Expertise: { type: String, required: true },\n//     Event_Description: { type: String, required: true },\n//     Approved: { type: Boolean, required: true },\n//     date: { type: Date, required: true },\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  }\n});\n\nclass OrdersList extends Component {\n  componentDidMount() {\n    this.props.getOrders();\n  }\n\n  render() {\n    const {\n      ordersList\n    } = this.props.orders;\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: classes.table,\n      \"aria-label\": \"customized table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(StyledTableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Contact\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Location\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Budget\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Date\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, ordersList.map(order => /*#__PURE__*/React.createElement(StyledTableRow, {\n      key: order.ClientName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(StyledTableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, order.ClientName), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, order.ContactNumber), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, order.Location), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, order.Budget), /*#__PURE__*/React.createElement(StyledTableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, order.date)))))));\n  }\n\n}\n\nOrdersList.propTypes = {\n  getOrders: PropTypes.func.isRequired,\n  orders: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  // to use the state as props\n  orders: state.orders // orders is coming from root reducer at /reducers/index.js\n\n});\n\nexport default connect(mapStateToProps, {\n  getOrders\n})(withStyles(useStyles)(OrdersList)); //exporting a component make it reusable and this is the beauty of react","map":{"version":3,"sources":["D:/Stuff to move/Work/SE/deployed/client/src/components/adminPortal copy.jsx"],"names":["React","Component","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Container","connect","getOrders","PropTypes","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","background","default","useStyles","table","minWidth","OrdersList","componentDidMount","props","render","ordersList","orders","classes","map","order","ClientName","ContactNumber","Location","Budget","date","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport { connect } from \"react-redux\";\nimport { getOrders } from \"../actions/orderActions\"; //stored as a prop\nimport PropTypes from \"prop-types\"; // validation\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\n// function createData(ClientName, ContactNumber, Location, Budget, date) {\n//   return { ClientName, ContactNumber, Location, Budget, date };\n// }\n\n// data ref\n// ClientName: { type: String, required: true },\n//     ContactNumber: { type: String, required: true },\n//     Email: { type: String, required: true },\n//     Location: { type: String, required: true },\n//     Category: { type: String, required: true }, //check number of categories\n//     Photographer: { type: String }, //check id\n//     Budget: { type: Number, required: true },\n//     Expertise: { type: String, required: true },\n//     Event_Description: { type: String, required: true },\n//     Approved: { type: Boolean, required: true },\n//     date: { type: Date, required: true },\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nclass OrdersList extends Component {\n  componentDidMount() {\n    this.props.getOrders();\n  }\n\n  static propTypes = {\n    getOrders: PropTypes.func.isRequired,\n    orders: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const { ordersList } = this.props.orders;\n    const { classes } = this.props;\n    return (\n      <Container maxWidth=\"lg\">\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>Name</StyledTableCell>\n                <StyledTableCell align=\"right\">Contact</StyledTableCell>\n                <StyledTableCell align=\"right\">Location</StyledTableCell>\n                <StyledTableCell align=\"right\">Budget</StyledTableCell>\n                <StyledTableCell align=\"right\">Date</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {ordersList.map((order) => (\n                <StyledTableRow key={order.ClientName}>\n                  <StyledTableCell component=\"th\" scope=\"row\">\n                    {order.ClientName}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\">\n                    {order.ContactNumber}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\">\n                    {order.Location}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\">\n                    {order.Budget}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\">{order.date}</StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // to use the state as props\n  orders: state.orders, // orders is coming from root reducer at /reducers/index.js\n});\n\nexport default connect(mapStateToProps, { getOrders })(\n  withStyles(useStyles)(OrdersList)\n); //exporting a component make it reusable and this is the beauty of react\n"]},"metadata":{},"sourceType":"module"}