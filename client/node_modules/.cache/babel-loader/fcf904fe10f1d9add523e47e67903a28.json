{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stuff to move\\\\Work\\\\SE\\\\deployed\\\\client\\\\src\\\\components\\\\Recommendation.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport { Col } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../styles/photographerRegisteration.css\";\nimport \"react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\nimport { connect } from \"react-redux\";\nimport { addOrder } from \"../actions/orderActions\";\nimport PropTypes from \"prop-types\"; // validation\n\nclass MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmitHandler = event => {\n      event.preventDefault();\n      const newOrder = {\n        ClientName: this.state.name,\n        //it is getting the ClientName from the post request\n        ContactNumber: this.state.contact,\n        Email: this.state.email,\n        Location: this.state.location,\n        Category: this.state.category,\n        Photographer: this.state.photographer,\n        //photographer id?\n        Budget: this.state.budget,\n        Expertise: this.state.expertise,\n        Event_Description: this.state.description,\n        Approved: false,\n        date: this.state.date\n      };\n      this.props.addOrder(newOrder);\n      let contact = this.state.contact;\n\n      if (!Number(contact)) {\n        alert(\"Your contact must be a number\");\n      }\n    };\n\n    this.onChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      contact: \"090078601\",\n      email: \"af79614@gmail.com\",\n      location: \"Model Town\",\n      category: [\"Wedding\", \"Food\", \"Party\"],\n      photographer: this.props.match.params.type,\n      budget: 100000,\n      expertise: \"Gold\",\n      description: \"Give me a photographer\",\n      categories: [],\n      date: new Date()\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onExpertiseChange = this.onExpertiseChange.bind(this);\n    this.categoryHandler = this.categoryHandler.bind(this);\n    this.getExpertise = this.getExpertise.bind(this);\n  }\n\n  onExpertiseChange(event) {\n    this.setState({\n      expertise: parseInt(event.target.value, 10)\n    });\n  }\n\n  getExpertise() {\n    if (this.props.match.params.type === \"none\") {\n      return /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"expertise\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, \"Expertise\"), /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"expertise\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n        className: \"pb-5 expertise\",\n        type: \"radio\",\n        name: \"options\",\n        defaultValue: 1,\n        onClick: this.onExpertiseChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ToggleButton, {\n        className: \"btn btn-dark\",\n        value: \"All\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, \"All\"), /*#__PURE__*/React.createElement(ToggleButton, {\n        className: \"btn btn-dark\",\n        value: \"Silver\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, \"Silver\"), /*#__PURE__*/React.createElement(ToggleButton, {\n        className: \"btn btn-dark\",\n        value: \"Gold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, \"Gold\"), /*#__PURE__*/React.createElement(ToggleButton, {\n        className: \"btn btn-dark\",\n        value: \"Platinum\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, \"Platinum\")))));\n    }\n  }\n\n  categoryHandler(event) {\n    this.setState({\n      category: this.state.category.concat([event.target.value])\n    });\n  }\n\n  componentWillMount() {\n    //function runs at the start of component loading\n    axios //sending a get request to get all the categories from Mongo\n    .get(\"https://smartlensapplication.herokuapp.com/categories/\").then(res => {\n      res.data.map(entree => this.setState({\n        categories: this.state.categories.concat([//storing all the category ids and their name values in my local state array\n        {\n          key: entree._id,\n          categoryName: entree.categoryname\n        }])\n      }));\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron jumbotron-fluid one\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container farm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"fullname\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, \"Full Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Enter name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"email\",\n      className: \"pr-2\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"email\",\n      type: \"text\",\n      placeholder: \"Enter email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"contact\",\n      className: \"pl-2\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, \"Contact Number\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"contact\",\n      type: \"text\",\n      placeholder: \"Enter contact number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"location\",\n      className: \"pr-2\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    }, \"Location\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"location\",\n      type: \"text\",\n      placeholder: \"Enter location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"budget\",\n      className: \"pl-2\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, \"Budget\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"budget\",\n      type: \"Number\",\n      placeholder: \"Enter budget\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 15\n      }\n    }, \"Categories (tick all that apply)\", \" \")), /*#__PURE__*/React.createElement(Form.Row, {\n      className: \"pb-3\",\n      onChange: this.categoryHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, this.state.categories.map(Category => /*#__PURE__*/React.createElement(Form.Check, {\n      name: \"category\",\n      className: \"ml-2\",\n      value: Category.categoryName,\n      label: Category.categoryName,\n      type: \"checkbox\",\n      id: Category.key,\n      key: Category.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"date\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"date\",\n      type: \"date\",\n      placeholder: \"mm/dd/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 15\n      }\n    }, this.getExpertise())), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 19\n      }\n    }, \"Comments\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"description\",\n      as: \"textarea\",\n      rows: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"mt-3\",\n      className: \"btn btn-dark\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 15\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nMyForm.propTypes = {\n  addOrder: PropTypes.func.isRequired,\n  orders: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  // to use the state as props\n  orders: state.orders // orders is coming from root reducer at /reducers/index.js\n\n});\n\nexport default connect(mapStateToProps, {\n  addOrder\n})(MyForm); //exporting a component make it reusable and this is the beauty of react","map":{"version":3,"sources":["D:/Stuff to move/Work/SE/deployed/client/src/components/Recommendation.jsx"],"names":["React","axios","Form","Col","Button","ToggleButton","ToggleButtonGroup","connect","addOrder","PropTypes","MyForm","Component","constructor","props","onSubmitHandler","event","preventDefault","newOrder","ClientName","state","name","ContactNumber","contact","Email","email","Location","location","Category","category","Photographer","photographer","Budget","budget","Expertise","expertise","Event_Description","description","Approved","date","Number","alert","onChangeHandler","nam","target","val","value","setState","match","params","type","categories","Date","bind","onExpertiseChange","categoryHandler","getExpertise","parseInt","concat","componentWillMount","get","then","res","data","map","entree","key","_id","categoryName","categoryname","catch","error","console","log","render","propTypes","func","isRequired","orders","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport { Col } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../styles/photographerRegisteration.css\";\nimport \"react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\nimport { connect } from \"react-redux\";\nimport { addOrder } from \"../actions/orderActions\";\nimport PropTypes from \"prop-types\"; // validation\n\nclass MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      contact: \"090078601\",\n      email: \"af79614@gmail.com\",\n      location: \"Model Town\",\n      category: [\"Wedding\", \"Food\", \"Party\"],\n      photographer: this.props.match.params.type,\n      budget: 100000,\n      expertise: \"Gold\",\n      description: \"Give me a photographer\",\n      categories: [],\n      date: new Date(),\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onExpertiseChange = this.onExpertiseChange.bind(this);\n    this.categoryHandler = this.categoryHandler.bind(this);\n    this.getExpertise = this.getExpertise.bind(this);\n  }\n\n  static propTypes = {\n    addOrder: PropTypes.func.isRequired,\n    orders: PropTypes.object.isRequired,\n  };\n\n  onSubmitHandler = (event) => {\n    event.preventDefault();\n\n    const newOrder = {\n      ClientName: this.state.name, //it is getting the ClientName from the post request\n      ContactNumber: this.state.contact,\n      Email: this.state.email,\n      Location: this.state.location,\n      Category: this.state.category,\n      Photographer: this.state.photographer, //photographer id?\n      Budget: this.state.budget,\n      Expertise: this.state.expertise,\n      Event_Description: this.state.description,\n      Approved: false,\n      date: this.state.date,\n    };\n\n    this.props.addOrder(newOrder);\n\n    let contact = this.state.contact;\n    if (!Number(contact)) {\n      alert(\"Your contact must be a number\");\n    }\n  };\n\n  onChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  };\n\n  onExpertiseChange(event) {\n    this.setState({ expertise: parseInt(event.target.value, 10) });\n  }\n\n  getExpertise() {\n    if (this.props.match.params.type === \"none\") {\n      return (\n        <Form.Group controlId=\"expertise\">\n          <Form.Label>Expertise</Form.Label>\n          <Form.Row>\n            <Col className=\"expertise\">\n              <ToggleButtonGroup\n                className=\"pb-5 expertise\"\n                type=\"radio\"\n                name=\"options\"\n                defaultValue={1}\n                onClick={this.onExpertiseChange}\n              >\n                <ToggleButton className=\"btn btn-dark\" value={\"All\"}>\n                  All\n                </ToggleButton>\n                <ToggleButton className=\"btn btn-dark\" value={\"Silver\"}>\n                  Silver\n                </ToggleButton>\n                <ToggleButton className=\"btn btn-dark\" value={\"Gold\"}>\n                  Gold\n                </ToggleButton>\n                <ToggleButton className=\"btn btn-dark\" value={\"Platinum\"}>\n                  Platinum\n                </ToggleButton>\n              </ToggleButtonGroup>\n            </Col>\n          </Form.Row>\n        </Form.Group>\n      );\n    }\n  }\n\n  categoryHandler(event) {\n    this.setState({\n      category: this.state.category.concat([event.target.value]),\n    });\n  }\n\n  componentWillMount() {\n    //function runs at the start of component loading\n    axios //sending a get request to get all the categories from Mongo\n      .get(\"https://smartlensapplication.herokuapp.com/categories/\")\n      .then((res) => {\n        res.data.map((entree) =>\n          this.setState({\n            categories: this.state.categories.concat([\n              //storing all the category ids and their name values in my local state array\n              { key: entree._id, categoryName: entree.categoryname },\n            ]),\n          })\n        );\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        {/* START JUMBOTRON */}\n        <div className=\"jumbotron jumbotron-fluid one\">\n          <div className=\"container\"></div>\n        </div>\n        {/* END JUMBOTRON */}\n\n        <div className=\"container farm\">\n          <Form onSubmit={this.onSubmitHandler}>\n            <Form.Row>\n              <Col>\n                <Form.Group\n                  controlId=\"fullname\"\n                  onChange={this.onChangeHandler}\n                >\n                  <Form.Label>Full Name</Form.Label>\n                  <Form.Control\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"Enter name\"\n                  />\n                </Form.Group>\n              </Col>\n            </Form.Row>\n\n            <Form.Row>\n              <Col>\n                <Form.Group\n                  controlId=\"email\"\n                  className=\"pr-2\"\n                  onChange={this.onChangeHandler}\n                >\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control\n                    name=\"email\"\n                    type=\"text\"\n                    placeholder=\"Enter email\"\n                  />\n                </Form.Group>\n              </Col>\n\n              <Col>\n                <Form.Group\n                  controlId=\"contact\"\n                  className=\"pl-2\"\n                  onChange={this.onChangeHandler}\n                >\n                  <Form.Label>Contact Number</Form.Label>\n                  <Form.Control\n                    name=\"contact\"\n                    type=\"text\"\n                    placeholder=\"Enter contact number\"\n                  />\n                </Form.Group>\n              </Col>\n            </Form.Row>\n\n            <Form.Row>\n              <Col>\n                <Form.Group\n                  controlId=\"location\"\n                  className=\"pr-2\"\n                  onChange={this.onChangeHandler}\n                >\n                  <Form.Label>Location</Form.Label>\n                  <Form.Control\n                    name=\"location\"\n                    type=\"text\"\n                    placeholder=\"Enter location\"\n                  />\n                </Form.Group>\n              </Col>\n\n              <Col>\n                <Form.Group\n                  controlId=\"budget\"\n                  className=\"pl-2\"\n                  onChange={this.onChangeHandler}\n                >\n                  <Form.Label>Budget</Form.Label>\n                  <Form.Control\n                    name=\"budget\"\n                    type=\"Number\"\n                    placeholder=\"Enter budget\"\n                  />\n                </Form.Group>\n              </Col>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Label className=\"pb-2\">\n                Categories (tick all that apply){\" \"}\n              </Form.Label>\n            </Form.Row>\n            <Form.Row className=\"pb-3\" onChange={this.categoryHandler}>\n              {this.state.categories.map((Category) => (\n                <Form.Check\n                  name=\"category\"\n                  className=\"ml-2\"\n                  value={Category.categoryName}\n                  label={Category.categoryName}\n                  type=\"checkbox\"\n                  id={Category.key}\n                  key={Category.key}\n                />\n              ))}\n            </Form.Row>\n\n            <Form.Row>\n              <Col className=\"col-6\">\n                <Form.Group controlId=\"date\" onChange={this.onChangeHandler}>\n                  <Form.Label>Date</Form.Label>\n                  <Form.Control\n                    name=\"date\"\n                    type=\"date\"\n                    placeholder=\"mm/dd/yyyy\"\n                  />\n                </Form.Group>\n              </Col>\n\n              <Col>{this.getExpertise()}</Col>\n            </Form.Row>\n\n            <Form.Row>\n              <Col>\n                <Form.Group onChange={this.onChangeHandler}>\n                  <Form.Label>Comments</Form.Label>\n                  <Form.Control name=\"description\" as=\"textarea\" rows=\"3\" />\n                </Form.Group>\n              </Col>\n            </Form.Row>\n\n            <Form.Row>\n              <Button className=\"mt-3\" className=\"btn btn-dark\" type=\"submit\">\n                Submit\n              </Button>\n            </Form.Row>\n          </Form>\n        </div>\n\n        <br />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // to use the state as props\n  orders: state.orders, // orders is coming from root reducer at /reducers/index.js\n});\n\nexport default connect(mapStateToProps, { addOrder })(MyForm); //exporting a component make it reusable and this is the beauty of react\n"]},"metadata":{},"sourceType":"module"}