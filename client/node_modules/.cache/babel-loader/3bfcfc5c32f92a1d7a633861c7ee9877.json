{"ast":null,"code":"// import React, { Component } from \"react\";\n// import { TextField, Typography } from \"@material-ui/core\";\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n// import Checkbox from \"@material-ui/core/Checkbox\";\n// import Container from \"@material-ui/core/Container\";\n// import Button from \"@material-ui/core/Button\";\n// import { withStyles } from \"@material-ui/core/styles\";\n// import PropTypes from \"prop-types\";\n// import { connect } from \"react-redux\";\n// import {\n//   getSingleOrder,\n//   deleteOrder,\n//   updateOrder,\n//   getOrders,\n// } from \"../actions/orderActions\"; //stored as a prop\n// import { clearErrors } from \"../actions/errorActions\";\n// import { Redirect } from \"react-router-dom\";\n// import Alert from \"@material-ui/lab/Alert\";\n// const useStyles = (theme) => ({\n//   paper: {\n//     marginTop: theme.spacing(8),\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     alignItems: \"center\",\n//   },\n//   form: {\n//     width: \"100%\",\n//     marginTop: theme.spacing(1),\n//   },\n//   submit: {\n//     margin: theme.spacing(3, 0, 5),\n//   },\n// });\n// class orderDetails extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: [],\n//       msg: null,\n//     };\n//   }\n//   componentDidMount() {\n//     var promise = new Promise((resolve, reject) => {\n//       resolve(this.props.getOrders());\n//     });\n//     promise.then((e) => {\n//       console.log(\"e\", e);\n//       this.setState({\n//         data: this.props.orders.ordersList,\n//       });\n//       console.log(\"state set\", this.state.data, this.props.orders.ordersList);\n//     });\n//     // await this.props.getSingleOrder(\"5ea358de8681fc457c602499\");\n//   }\n//   static propTypes = {\n//     isAuthenticated: PropTypes.bool,\n//     error: PropTypes.object.isRequired,\n//     clearErrors: PropTypes.func.isRequired,\n//   };\n//   onChange = (e) => {\n//     console.log(1);\n//     // this.setState({ [e.target.name]: e.target.value });\n//   };\n//   onSubmit = (e) => {\n//     e.preventDefault();\n//     const updateOrder = {\n//       ClientName: this.state.ClientName, //it is getting the ClientName from the post request\n//       ContactNumber: this.state.ContactNumber,\n//       Email: this.state.Email,\n//       Location: this.state.Location,\n//       Category: this.state.Category,\n//       Photographer: this.state.Photographer, //photographer id?\n//       Budget: this.state.Budget,\n//       Expertise: this.state.Expertise,\n//       Event_Description: this.state.Event_Description,\n//       Approved: this.state.Approved,\n//       date: this.state.date,\n//     };\n//     let contact = this.state.contact;\n//     if (!Number(contact)) {\n//       alert(\"The contact must be a number\");\n//     }\n//     this.props.updateOrder(updateOrder);\n//   };\n//   render() {\n//     const { classes } = this.props;\n//     const { loading } = this.props.orders;\n//     return (\n//       console.log(this.state.data, this.props.orders.ordersList),\n//       (\n//         <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\n//           {/* {this.props.isAuthenticated ? <Redirect to=\"/adminPortal\" /> : null} */}\n//           {!loading ? (\n//             <React.Fragment>\n//               <Typography component=\"h1\" variant=\"h4\">\n//                 Details\n//               </Typography>\n//               <form onSubmit={this.onSubmit} className={classes.form}>\n//                 <TextField\n//                   variant=\"outlined\"\n//                   margin=\"normal\"\n//                   required\n//                   fullWidth\n//                   id=\"email\"\n//                   label=\"Email\"\n//                   name=\"email\"\n//                   autoComplete=\"email\"\n//                   autoFocus\n//                   defaultValue={this.state.data.Email}\n//                   onChange={this.onChange}\n//                 />\n//                 <TextField\n//                   variant=\"outlined\"\n//                   margin=\"normal\"\n//                   required\n//                   fullWidth\n//                   name=\"ClientName\"\n//                   label=\"ClientName\"\n//                   id=\"ClientName\"\n//                   autoComplete=\"current-password\"\n//                   onChange={this.onChange}\n//                   defaultValue={this.state.ClientName}\n//                 />\n//                 <FormControlLabel\n//                   control={<Checkbox value=\"remember\" color=\"primary\" />}\n//                   label=\"Remember me\"\n//                 />\n//                 {this.state.msg ? (\n//                   <Alert severity=\"error\">{this.state.msg}</Alert>\n//                 ) : null}\n//                 <Button\n//                   type=\"submit\"\n//                   fullWidth\n//                   variant=\"contained\"\n//                   color=\"primary\"\n//                   className={classes.submit}\n//                 >\n//                   Sign In\n//                 </Button>\n//               </form>\n//               <Typography component=\"h1\" variant=\"h4\">\n//                 Here {this.state.data.Email}\n//               </Typography>\n//             </React.Fragment>\n//           ) : (\n//             <React.Fragment>\n//               <Typography component=\"h1\" variant=\"h4\">\n//                 Loading\n//               </Typography>\n//             </React.Fragment>\n//           )}\n//         </Container>\n//       )\n//     );\n//   }\n// }\n// const mapStateToProps = (state) => ({\n//   // to use the state as props\n//   orders: state.orders, // orders is coming from root reducer at /reducers/index.js\n//   isAuthenticated: state.auth.isAuthenticated, // auth is coming from root reducer at /reducers/index.js\n//   error: state.error,\n// });\n// export default connect(mapStateToProps, {\n//   getSingleOrder,\n//   deleteOrder,\n//   updateOrder,\n//   clearErrors,\n//   getOrders,\n// })(withStyles(useStyles)(orderDetails));","map":{"version":3,"sources":["D:/Stuff to move/Work/SE/deployed/client/src/components/orderDetails.jsx"],"names":[],"mappingssourcesContent":["// import React, { Component } from \"react\";\n// import { TextField, Typography } from \"@material-ui/core\";\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n// import Checkbox from \"@material-ui/core/Checkbox\";\n// import Container from \"@material-ui/core/Container\";\n// import Button from \"@material-ui/core/Button\";\n// import { withStyles } from \"@material-ui/core/styles\";\n// import PropTypes from \"prop-types\";\n// import { connect } from \"react-redux\";\n// import {\n//   getSingleOrder,\n//   deleteOrder,\n//   updateOrder,\n//   getOrders,\n// } from \"../actions/orderActions\"; //stored as a prop\n// import { clearErrors } from \"../actions/errorActions\";\n// import { Redirect } from \"react-router-dom\";\n// import Alert from \"@material-ui/lab/Alert\";\n\n// const useStyles = (theme) => ({\n//   paper: {\n//     marginTop: theme.spacing(8),\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     alignItems: \"center\",\n//   },\n//   form: {\n//     width: \"100%\",\n//     marginTop: theme.spacing(1),\n//   },\n//   submit: {\n//     margin: theme.spacing(3, 0, 5),\n//   },\n// });\n\n// class orderDetails extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: [],\n//       msg: null,\n//     };\n//   }\n\n//   componentDidMount() {\n//     var promise = new Promise((resolve, reject) => {\n//       resolve(this.props.getOrders());\n//     });\n//     promise.then((e) => {\n//       console.log(\"e\", e);\n//       this.setState({\n//         data: this.props.orders.ordersList,\n//       });\n//       console.log(\"state set\", this.state.data, this.props.orders.ordersList);\n//     });\n\n//     // await this.props.getSingleOrder(\"5ea358de8681fc457c602499\");\n//   }\n\n//   static propTypes = {\n//     isAuthenticated: PropTypes.bool,\n//     error: PropTypes.object.isRequired,\n//     clearErrors: PropTypes.func.isRequired,\n//   };\n\n//   onChange = (e) => {\n//     console.log(1);\n//     // this.setState({ [e.target.name]: e.target.value });\n//   };\n\n//   onSubmit = (e) => {\n//     e.preventDefault();\n\n//     const updateOrder = {\n//       ClientName: this.state.ClientName, //it is getting the ClientName from the post request\n//       ContactNumber: this.state.ContactNumber,\n//       Email: this.state.Email,\n//       Location: this.state.Location,\n//       Category: this.state.Category,\n//       Photographer: this.state.Photographer, //photographer id?\n//       Budget: this.state.Budget,\n//       Expertise: this.state.Expertise,\n//       Event_Description: this.state.Event_Description,\n//       Approved: this.state.Approved,\n//       date: this.state.date,\n//     };\n\n//     let contact = this.state.contact;\n//     if (!Number(contact)) {\n//       alert(\"The contact must be a number\");\n//     }\n//     this.props.updateOrder(updateOrder);\n//   };\n\n//   render() {\n//     const { classes } = this.props;\n//     const { loading } = this.props.orders;\n//     return (\n//       console.log(this.state.data, this.props.orders.ordersList),\n//       (\n//         <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\n//           {/* {this.props.isAuthenticated ? <Redirect to=\"/adminPortal\" /> : null} */}\n//           {!loading ? (\n//             <React.Fragment>\n//               <Typography component=\"h1\" variant=\"h4\">\n//                 Details\n//               </Typography>\n//               <form onSubmit={this.onSubmit} className={classes.form}>\n//                 <TextField\n//                   variant=\"outlined\"\n//                   margin=\"normal\"\n//                   required\n//                   fullWidth\n//                   id=\"email\"\n//                   label=\"Email\"\n//                   name=\"email\"\n//                   autoComplete=\"email\"\n//                   autoFocus\n//                   defaultValue={this.state.data.Email}\n//                   onChange={this.onChange}\n//                 />\n//                 <TextField\n//                   variant=\"outlined\"\n//                   margin=\"normal\"\n//                   required\n//                   fullWidth\n//                   name=\"ClientName\"\n//                   label=\"ClientName\"\n//                   id=\"ClientName\"\n//                   autoComplete=\"current-password\"\n//                   onChange={this.onChange}\n//                   defaultValue={this.state.ClientName}\n//                 />\n//                 <FormControlLabel\n//                   control={<Checkbox value=\"remember\" color=\"primary\" />}\n//                   label=\"Remember me\"\n//                 />\n//                 {this.state.msg ? (\n//                   <Alert severity=\"error\">{this.state.msg}</Alert>\n//                 ) : null}\n//                 <Button\n//                   type=\"submit\"\n//                   fullWidth\n//                   variant=\"contained\"\n//                   color=\"primary\"\n//                   className={classes.submit}\n//                 >\n//                   Sign In\n//                 </Button>\n//               </form>\n//               <Typography component=\"h1\" variant=\"h4\">\n//                 Here {this.state.data.Email}\n//               </Typography>\n//             </React.Fragment>\n//           ) : (\n//             <React.Fragment>\n//               <Typography component=\"h1\" variant=\"h4\">\n//                 Loading\n//               </Typography>\n//             </React.Fragment>\n//           )}\n//         </Container>\n//       )\n//     );\n//   }\n// }\n\n// const mapStateToProps = (state) => ({\n//   // to use the state as props\n//   orders: state.orders, // orders is coming from root reducer at /reducers/index.js\n//   isAuthenticated: state.auth.isAuthenticated, // auth is coming from root reducer at /reducers/index.js\n//   error: state.error,\n// });\n\n// export default connect(mapStateToProps, {\n//   getSingleOrder,\n//   deleteOrder,\n//   updateOrder,\n//   clearErrors,\n//   getOrders,\n// })(withStyles(useStyles)(orderDetails));\n"]},"metadata":{},"sourceType":"module"}