{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stuff to move\\\\Work\\\\SE\\\\deployed\\\\client\\\\src\\\\components\\\\adminPortal.jsx\";\nimport React, { Component, forwardRef } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport Container from \"@material-ui/core/Container\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Print from \"@material-ui/icons/Print\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getOrders, deleteOrder } from \"../actions/orderActions\"; //stored as a prop\n\nimport PropTypes from \"prop-types\"; // validation\n\nclass OrdersList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [{\n        title: \"Name\",\n        field: \"ClientName\"\n      }, {\n        title: \"Contact\",\n        field: \"ContactNumber\"\n      }, {\n        title: \"Budget\",\n        field: \"Budget\",\n        type: \"numeric\"\n      }, {\n        title: \"Date\",\n        field: \"date\",\n        type: \"date\"\n      }, {\n        title: \"Approved\",\n        field: \"Approved\",\n        lookup: {\n          1: \"Yes\",\n          2: \"No\"\n        }\n      }],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.getOrders();\n    this.setState({\n      data: this.props.orders.ordersList\n    });\n  }\n\n  render() {\n    const tableIcons = {\n      // Add: forwardRef((props, ref) => <Add {...props} ref={ref} color='action' />),\n      Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 39\n        }\n      }))),\n      Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 41\n        }\n      }))),\n      Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 41\n        }\n      }))),\n      Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }))),\n      DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }))),\n      Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 40\n        }\n      }))),\n      Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 42\n        }\n      }))),\n      Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 42\n        }\n      }))),\n      FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 45\n        }\n      }))),\n      LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 44\n        }\n      }))),\n      NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }))),\n      PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }))),\n      Print: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Print, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 41\n        }\n      }))),\n      ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 47\n        }\n      }))),\n      Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 42\n        }\n      }))),\n      SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowUpward, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }))),\n      ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }))),\n      ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      })))\n    };\n    return /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, this.props.isAuthenticated ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"Welcome!\"), /*#__PURE__*/React.createElement(MaterialTable, {\n      title: \"Booking requests\",\n      columns: this.state.columns,\n      data: this.state.data,\n      editable: {\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            {\n              const data = this.state.data;\n              const index = data.indexOf(oldData);\n              data[index] = newData;\n              this.setState({\n                data\n              }, () => resolve());\n            }\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            {\n              let data = this.state.data;\n              const index = data.indexOf(oldData);\n              console.log(index);\n            }\n            resolve();\n          }, 1000);\n        })\n      },\n      icons: tableIcons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nOrdersList.propTypes = {\n  getOrders: PropTypes.func.isRequired,\n  orders: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  // to use the state as props\n  orders: state.orders,\n  // orders is coming from root reducer at /reducers/index.js\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  getOrders,\n  deleteOrder\n})(OrdersList); //exporting a component make it reusable and this is the beauty of react","map":{"version":3,"sources":["D:/Stuff to move/Work/SE/deployed/client/src/components/adminPortal.jsx"],"names":["React","Component","forwardRef","Typography","MaterialTable","Container","AddBox","ArrowUpward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Print","Remove","SaveAlt","Search","ViewColumn","Redirect","connect","getOrders","deleteOrder","PropTypes","OrdersList","constructor","props","state","columns","title","field","type","lookup","data","componentDidMount","setState","orders","ordersList","render","tableIcons","Add","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","isAuthenticated","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","index","indexOf","onRowDelete","console","log","propTypes","func","isRequired","object","bool","error","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component, forwardRef } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport Container from \"@material-ui/core/Container\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Print from \"@material-ui/icons/Print\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getOrders, deleteOrder } from \"../actions/orderActions\"; //stored as a prop\nimport PropTypes from \"prop-types\"; // validation\n\nclass OrdersList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [\n        { title: \"Name\", field: \"ClientName\" },\n        { title: \"Contact\", field: \"ContactNumber\" },\n        { title: \"Budget\", field: \"Budget\", type: \"numeric\" },\n        { title: \"Date\", field: \"date\", type: \"date\" },\n        {\n          title: \"Approved\",\n          field: \"Approved\",\n          lookup: { 1: \"Yes\", 2: \"No\" },\n        },\n      ],\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    this.props.getOrders();\n    this.setState({\n      data: this.props.orders.ordersList,\n    });\n  }\n\n  static propTypes = {\n    getOrders: PropTypes.func.isRequired,\n    orders: PropTypes.object.isRequired,\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const tableIcons = {\n      // Add: forwardRef((props, ref) => <Add {...props} ref={ref} color='action' />),\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n      Delete: forwardRef((props, ref) => (\n        <DeleteOutline {...props} ref={ref} />\n      )),\n      DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n      )),\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n      NextPage: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n      )),\n      PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n      )),\n      Print: forwardRef((props, ref) => <Print {...props} ref={ref} />),\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n      SortArrow: forwardRef((props, ref) => (\n        <ArrowUpward {...props} ref={ref} />\n      )),\n      ThirdStateCheck: forwardRef((props, ref) => (\n        <Remove {...props} ref={ref} />\n      )),\n      ViewColumn: forwardRef((props, ref) => (\n        <ViewColumn {...props} ref={ref} />\n      )),\n    };\n    return (\n      <Container maxWidth=\"xl\">\n        {this.props.isAuthenticated ? (\n          <React.Fragment>\n            <Typography component=\"h1\" variant=\"h4\">\n              Welcome!\n            </Typography>\n            <MaterialTable\n              title=\"Booking requests\"\n              columns={this.state.columns}\n              data={this.state.data}\n              editable={{\n                onRowUpdate: (newData, oldData) =>\n                  new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                      {\n                        const data = this.state.data;\n                        const index = data.indexOf(oldData);\n                        data[index] = newData;\n                        this.setState({ data }, () => resolve());\n                      }\n                      resolve();\n                    }, 1000);\n                  }),\n                onRowDelete: (oldData) =>\n                  new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                      {\n                        let data = this.state.data;\n                        const index = data.indexOf(oldData);\n                        console.log(index);\n                      }\n                      resolve();\n                    }, 1000);\n                  }),\n              }}\n              icons={tableIcons}\n            />\n          </React.Fragment>\n        ) : (\n          <Redirect to=\"/login\" />\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // to use the state as props\n  orders: state.orders, // orders is coming from root reducer at /reducers/index.js\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n});\n\nexport default connect(mapStateToProps, { getOrders, deleteOrder })(OrdersList); //exporting a component make it reusable and this is the beauty of react\n"]},"metadata":{},"sourceType":"module"}