{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stuff to move\\\\Work\\\\SE\\\\deployed\\\\client\\\\src\\\\components\\\\adminPortal.jsx\";\nimport React, { Component, forwardRef } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport Container from \"@material-ui/core/Container\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Print from \"@material-ui/icons/Print\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getOrders, deleteOrder, updateOrder } from \"../actions/orderActions\"; //stored as a prop\n\nimport { loadUser } from \"../actions/authActions\";\nimport PropTypes from \"prop-types\"; // validation\n\nclass OrdersList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [{\n        title: \"Name\",\n        field: \"ClientName\"\n      }, {\n        title: \"Contact\",\n        field: \"ContactNumber\"\n      }, {\n        title: \"Budget\",\n        field: \"Budget\",\n        type: \"numeric\"\n      }, {\n        title: \"Date\",\n        field: \"date\",\n        type: \"date\"\n      }, {\n        title: \"Category\",\n        field: \"Category\"\n      }, {\n        title: \"Photographer\",\n        field: \"Photographer\"\n      }, {\n        title: \"Approved\",\n        field: \"Approved\",\n        lookup: {\n          true: \"Yes\",\n          false: \"No\"\n        }\n      }],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.getOrders();\n    this.setState({\n      data: this.props.orders.ordersList\n    });\n  }\n\n  render() {\n    const tableIcons = {\n      // Add: forwardRef((props, ref) => <Add {...props} ref={ref} color='action' />),\n      Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 39\n        }\n      }))),\n      Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 41\n        }\n      }))),\n      Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 41\n        }\n      }))),\n      Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }))),\n      DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }))),\n      Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 40\n        }\n      }))),\n      Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 42\n        }\n      }))),\n      Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 42\n        }\n      }))),\n      FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 45\n        }\n      }))),\n      LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 44\n        }\n      }))),\n      NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }))),\n      PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }))),\n      Print: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Print, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 41\n        }\n      }))),\n      ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 47\n        }\n      }))),\n      Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 42\n        }\n      }))),\n      SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowUpward, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }))),\n      ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }))),\n      ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      })))\n    };\n    return /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, this.props.isAuthenticated ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, \"Welcome!\"), /*#__PURE__*/React.createElement(MaterialTable, {\n      title: \"Booking requests\",\n      columns: this.state.columns,\n      data: this.state.data,\n      editable: {\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            {\n              let data = this.state.data;\n              const index = data.indexOf(oldData);\n              const temp_old = data.filter(order => order._id !== data[index]._id);\n              this.props.updateOrder(newData);\n              this.setState(prevState => ({\n                data: [...temp_old, newData]\n              }));\n            }\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            {\n              let data = this.state.data;\n              const index = data.indexOf(oldData);\n              const del_id = data[index]._id;\n              this.props.deleteOrder(del_id);\n              this.setState({\n                data: data.filter(order => order._id !== del_id)\n              });\n            }\n            resolve();\n          }, 1000);\n        })\n      },\n      icons: tableIcons,\n      detailPanel: rowData => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          component: \"body2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }\n        }, rowData.ClientName), /*#__PURE__*/React.createElement(Typography, {\n          component: \"body2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }\n        }, rowData.ContactNumber), /*#__PURE__*/React.createElement(Typography, {\n          component: \"body2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }\n        }, rowData.Email), /*#__PURE__*/React.createElement(Typography, {\n          component: \"body2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }\n        }, rowData.Category), /*#__PURE__*/React.createElement(Typography, {\n          component: \"body2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }\n        }, rowData.Location), /*#__PURE__*/React.createElement(Typography, {\n          component: \"body2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }\n        }, rowData.Photographer), /*#__PURE__*/React.createElement(Typography, {\n          component: \"body2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }\n        }, rowData.Budget), /*#__PURE__*/React.createElement(Typography, {\n          component: \"body2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }\n        }, rowData.Expertise), /*#__PURE__*/React.createElement(Typography, {\n          component: \"body2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }\n        }, rowData.Event_Description));\n      },\n      onRowClick: (event, rowData, togglePanel) => togglePanel() // return (\n      //   <div>\n      //     <Typography component=\"h4\" variant=\"h4\">\n      //       rowData.ClientName\n      //       {/* rowData.ClientName,{rowData.ContactNumber},{rowData.Email},\n      //   {rowData.Location},{rowData.Category},{rowData.Photographer},\n      //   {rowData.Budget},{rowData.Expertise},\n      //   {rowData.Event_Description},{rowData.Approved},{rowData.date} */}\n      //     </Typography>\n      //   </div>\n      // );\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nOrdersList.propTypes = {\n  getOrders: PropTypes.func.isRequired,\n  deleteOrder: PropTypes.func.isRequired,\n  updateOrder: PropTypes.func.isRequired,\n  orders: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  // to use the state as props\n  orders: state.orders,\n  // orders is coming from root reducer at /reducers/index.js\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  getOrders,\n  deleteOrder,\n  updateOrder,\n  loadUser\n})(OrdersList); //exporting a component make it reusable and this is the beauty of react","map":{"version":3,"sources":["D:/Stuff to move/Work/SE/deployed/client/src/components/adminPortal.jsx"],"names":["React","Component","forwardRef","Typography","MaterialTable","Container","AddBox","ArrowUpward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Print","Remove","SaveAlt","Search","ViewColumn","Redirect","connect","getOrders","deleteOrder","updateOrder","loadUser","PropTypes","OrdersList","constructor","props","state","columns","title","field","type","lookup","true","false","data","componentDidMount","setState","orders","ordersList","render","tableIcons","Add","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","isAuthenticated","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","index","indexOf","temp_old","filter","order","_id","prevState","onRowDelete","del_id","rowData","ClientName","ContactNumber","Email","Category","Location","Photographer","Budget","Expertise","Event_Description","event","togglePanel","propTypes","func","isRequired","object","bool","error","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component, forwardRef } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport Container from \"@material-ui/core/Container\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Print from \"@material-ui/icons/Print\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getOrders, deleteOrder, updateOrder } from \"../actions/orderActions\"; //stored as a prop\nimport { loadUser } from \"../actions/authActions\";\nimport PropTypes from \"prop-types\"; // validation\n\nclass OrdersList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [\n        { title: \"Name\", field: \"ClientName\" },\n        { title: \"Contact\", field: \"ContactNumber\" },\n        { title: \"Budget\", field: \"Budget\", type: \"numeric\" },\n        { title: \"Date\", field: \"date\", type: \"date\" },\n        { title: \"Category\", field: \"Category\" },\n        { title: \"Photographer\", field: \"Photographer\" },\n        {\n          title: \"Approved\",\n          field: \"Approved\",\n          lookup: { true: \"Yes\", false: \"No\" },\n        },\n      ],\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    this.props.getOrders();\n    this.setState({\n      data: this.props.orders.ordersList,\n    });\n  }\n\n  static propTypes = {\n    getOrders: PropTypes.func.isRequired,\n    deleteOrder: PropTypes.func.isRequired,\n    updateOrder: PropTypes.func.isRequired,\n    orders: PropTypes.object.isRequired,\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const tableIcons = {\n      // Add: forwardRef((props, ref) => <Add {...props} ref={ref} color='action' />),\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n      Delete: forwardRef((props, ref) => (\n        <DeleteOutline {...props} ref={ref} />\n      )),\n      DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n      )),\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n      NextPage: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n      )),\n      PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n      )),\n      Print: forwardRef((props, ref) => <Print {...props} ref={ref} />),\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n      SortArrow: forwardRef((props, ref) => (\n        <ArrowUpward {...props} ref={ref} />\n      )),\n      ThirdStateCheck: forwardRef((props, ref) => (\n        <Remove {...props} ref={ref} />\n      )),\n      ViewColumn: forwardRef((props, ref) => (\n        <ViewColumn {...props} ref={ref} />\n      )),\n    };\n    return (\n      <Container maxWidth=\"xl\">\n        {this.props.isAuthenticated ? (\n          <React.Fragment>\n            <Typography component=\"h1\" variant=\"h4\">\n              Welcome!\n            </Typography>\n            <MaterialTable\n              title=\"Booking requests\"\n              columns={this.state.columns}\n              data={this.state.data}\n              editable={{\n                onRowUpdate: (newData, oldData) =>\n                  new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                      {\n                        let data = this.state.data;\n                        const index = data.indexOf(oldData);\n                        const temp_old = data.filter(\n                          (order) => order._id !== data[index]._id\n                        );\n                        this.props.updateOrder(newData);\n                        this.setState((prevState) => ({\n                          data: [...temp_old, newData],\n                        }));\n                      }\n                      resolve();\n                    }, 1000);\n                  }),\n                onRowDelete: (oldData) =>\n                  new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                      {\n                        let data = this.state.data;\n                        const index = data.indexOf(oldData);\n                        const del_id = data[index]._id;\n                        this.props.deleteOrder(del_id);\n                        this.setState({\n                          data: data.filter((order) => order._id !== del_id),\n                        });\n                      }\n                      resolve();\n                    }, 1000);\n                  }),\n              }}\n              icons={tableIcons}\n              detailPanel={(rowData) => {\n                return (\n                  <div>\n                    <Typography component=\"body2\">\n                      {rowData.ClientName}\n                    </Typography>\n                    <Typography component=\"body2\">\n                      {rowData.ContactNumber}\n                    </Typography>\n                    <Typography component=\"body2\">{rowData.Email}</Typography>\n                    <Typography component=\"body2\">\n                      {rowData.Category}\n                    </Typography>\n                    <Typography component=\"body2\">\n                      {rowData.Location}\n                    </Typography>\n                    <Typography component=\"body2\">\n                      {rowData.Photographer}\n                    </Typography>\n                    <Typography component=\"body2\">{rowData.Budget}</Typography>\n                    <Typography component=\"body2\">\n                      {rowData.Expertise}\n                    </Typography>\n                    <Typography component=\"body2\">\n                      {rowData.Event_Description}\n                    </Typography>\n                  </div>\n                );\n              }}\n              onRowClick={(event, rowData, togglePanel) => togglePanel()}\n              // return (\n              //   <div>\n              //     <Typography component=\"h4\" variant=\"h4\">\n              //       rowData.ClientName\n              //       {/* rowData.ClientName,{rowData.ContactNumber},{rowData.Email},\n              //   {rowData.Location},{rowData.Category},{rowData.Photographer},\n              //   {rowData.Budget},{rowData.Expertise},\n              //   {rowData.Event_Description},{rowData.Approved},{rowData.date} */}\n              //     </Typography>\n              //   </div>\n              // );\n            />\n          </React.Fragment>\n        ) : (\n          <Redirect to=\"/login\" />\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // to use the state as props\n  orders: state.orders, // orders is coming from root reducer at /reducers/index.js\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n});\n\nexport default connect(mapStateToProps, {\n  getOrders,\n  deleteOrder,\n  updateOrder,\n  loadUser,\n})(OrdersList); //exporting a component make it reusable and this is the beauty of react\n"]},"metadata":{},"sourceType":"module"}