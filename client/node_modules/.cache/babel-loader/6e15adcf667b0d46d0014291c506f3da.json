{"ast":null,"code":"import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport F7Link from './link';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7NavLeft extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    (() => {\n      Utils.bindMethods(this, ['onBackClick']);\n    })();\n  }\n\n  onBackClick(event) {\n    this.dispatchEvent('back-click backClick click:back clickBack', event);\n  }\n\n  render() {\n    const props = this.props;\n    const {\n      backLink,\n      backLinkUrl,\n      backLinkForce,\n      backLinkShowText,\n      sliding,\n      className,\n      style,\n      id\n    } = props;\n    let linkEl;\n    let needBackLinkText = backLinkShowText;\n    if (typeof needBackLinkText === 'undefined') needBackLinkText = !this.$theme.md;\n\n    if (backLink) {\n      const text = backLink !== true && needBackLinkText ? backLink : undefined;\n      linkEl = React.createElement(F7Link, {\n        href: backLinkUrl || '#',\n        back: true,\n        icon: 'icon-back',\n        force: backLinkForce || undefined,\n        className: !text ? 'icon-only' : undefined,\n        text: text,\n        onClick: this.onBackClick\n      });\n    }\n\n    const classes = Utils.classNames(className, 'left', {\n      sliding\n    }, Mixins.colorClasses(props));\n    const children = [];\n    const slots = this.slots;\n\n    if (slots && Object.keys(slots).length) {\n      Object.keys(slots).forEach(key => {\n        children.push(...slots[key]);\n      });\n    }\n\n    return React.createElement('div', {\n      id: id,\n      style: style,\n      className: classes\n    }, linkEl, children);\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n}\n\n__reactComponentSetProps(F7NavLeft, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  backLink: [Boolean, String],\n  backLinkUrl: String,\n  backLinkForce: Boolean,\n  backLinkShowText: {\n    type: Boolean,\n    default: undefined\n  },\n  sliding: Boolean\n}, Mixins.colorProps));\n\nF7NavLeft.displayName = 'f7-nav-left';\nexport default F7NavLeft;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/components/nav-left.js"],"names":["React","Utils","Mixins","F7Link","__reactComponentDispatchEvent","__reactComponentSlots","__reactComponentSetProps","F7NavLeft","Component","constructor","props","context","bindMethods","onBackClick","event","dispatchEvent","render","backLink","backLinkUrl","backLinkForce","backLinkShowText","sliding","className","style","id","linkEl","needBackLinkText","$theme","md","text","undefined","createElement","href","back","icon","force","onClick","classes","classNames","colorClasses","children","slots","Object","keys","length","forEach","key","push","events","args","assign","String","Number","Boolean","type","default","colorProps","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport F7Link from './link';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7NavLeft extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    (() => {\n      Utils.bindMethods(this, ['onBackClick']);\n    })();\n  }\n\n  onBackClick(event) {\n    this.dispatchEvent('back-click backClick click:back clickBack', event);\n  }\n\n  render() {\n    const props = this.props;\n    const {\n      backLink,\n      backLinkUrl,\n      backLinkForce,\n      backLinkShowText,\n      sliding,\n      className,\n      style,\n      id\n    } = props;\n    let linkEl;\n    let needBackLinkText = backLinkShowText;\n    if (typeof needBackLinkText === 'undefined') needBackLinkText = !this.$theme.md;\n\n    if (backLink) {\n      const text = backLink !== true && needBackLinkText ? backLink : undefined;\n      linkEl = React.createElement(F7Link, {\n        href: backLinkUrl || '#',\n        back: true,\n        icon: 'icon-back',\n        force: backLinkForce || undefined,\n        className: !text ? 'icon-only' : undefined,\n        text: text,\n        onClick: this.onBackClick\n      });\n    }\n\n    const classes = Utils.classNames(className, 'left', {\n      sliding\n    }, Mixins.colorClasses(props));\n    const children = [];\n    const slots = this.slots;\n\n    if (slots && Object.keys(slots).length) {\n      Object.keys(slots).forEach(key => {\n        children.push(...slots[key]);\n      });\n    }\n\n    return React.createElement('div', {\n      id: id,\n      style: style,\n      className: classes\n    }, linkEl, children);\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n}\n\n__reactComponentSetProps(F7NavLeft, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  backLink: [Boolean, String],\n  backLinkUrl: String,\n  backLinkForce: Boolean,\n  backLinkShowText: {\n    type: Boolean,\n    default: undefined\n  },\n  sliding: Boolean\n}, Mixins.colorProps));\n\nF7NavLeft.displayName = 'f7-nav-left';\nexport default F7NavLeft;"]},"metadata":{},"sourceType":"module"}