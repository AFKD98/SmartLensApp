{"ast":null,"code":"var _jsxFileName = \"/home/faraz/courses/SE/myapp/src/components/photographersSelection.jsx\";\n//Comments by Faraz, please contact him in case of queries\nimport React, { Component } from \"react\";\nimport Recphoto from \"../assets/Recommend.jpg\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport axios from \"axios\";\nimport PhotographersCard from \"./photographersCard\";\nimport Filter from \"./filter\";\n\nclass PhotographerSelection extends Component {\n  constructor(props) {\n    // constructor\n    super(props);\n    this.state = {\n      photographers: [],\n      categoryKey: this.props.match.params.id,\n      //to catch the Category ID recieved from previous page use console.log(this.props) to see props coming from previous pages\n      photographerKeys: [],\n      levelOfPhotographer: \"All\",\n      cards: [],\n      lowerRange: 0,\n      upperRange: 300000,\n      min: 0,\n      max: 10000000\n    };\n    this.jumbotronCode = this.jumbotronCode.bind(this); //renders the jumbotron\n\n    this.getPhotographers = this.getPhotographers.bind(this); //gets the photographer profiles of that particular category clicked\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleRangeChange = this.handleRangeChange.bind(this);\n    this.handleSortby = this.handleSortby.bind(this);\n  }\n\n  jumbotronCode() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundImage: \"url(\" + Recphoto + \")\",\n        paddingTop: 50,\n        padding: 50,\n        paddingBottom: 50,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        width: \"100vw\",\n        height: \"70vh\"\n      },\n      className: \"jumbotron jumbotron-fluid\",\n      className: \"text-right p-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-4\",\n      className: \"text-center text-white pr-auto pt-auto pb-auto mt-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Wedding\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead medium\",\n      className: \"text-center text-white pr-auto mt-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \"Fill the form below and we will get back to you with a\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 67\n      }\n    }), \"photographer that best suits your needs. You'll have a\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 67\n      }\n    }), \"photographer in less than 24 hours!\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  getPhotographers(photographerKeys) {\n    photographerKeys.map(photographerKey => {\n      axios //sending a get request to get all the photographers of the category from Mongo\n      .get(\"http://localhost:5000/photographers/\" + photographerKey.Key).then(res => {\n        this.setState({\n          photographers: this.state.photographers.concat([//storing all the photographer ids and their name values in my local state array\n          {\n            Key: res.data._id,\n            name: res.data.Name,\n            level: res.data.Level,\n            range: res.data.Range,\n            rangeNumber: res.data.Range === \"Silver\" ? 0 : \"Gold\" ? 1 : \"Platinum\" ? 2 : -1\n          }])\n        }); // console.log(this.state.photographers);\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n    this.setState({\n      min: Math.min(...this.state.photographers.map(item => item.range)),\n      max: Math.max(...this.state.photographers.map(item => item.range))\n    });\n  }\n\n  handleClick(event) {\n    this.setState({\n      levelOfPhotographer: event.target.value\n    });\n  }\n\n  handleRangeChange(event) {\n    this.setState({\n      lowerRange: event[0],\n      upperRange: event[1]\n    });\n  }\n\n  handleSortby(event) {\n    console.log(event.target.id);\n\n    if (event.target.id == 0) {\n      console.log(\"a\");\n      this.setState({\n        photographers: this.state.photographers.range.sort((a, b) => a.range > b.range ? 1 : -1)\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.photographers); // console.log(this.state.levelOfPhotographer);\n  }\n\n  componentDidMount() {\n    //function runs at the start of component loading\n    axios //sending a get request to get all the photographers of the category from Mongo\n    .get(\"http://localhost:5000/categories/\" + this.state.categoryKey).then(res => {\n      res.data.photographers.map(entree => this.setState({\n        photographerKeys: this.state.photographerKeys.concat([//storing all the photographer ids of a particular category in my local state array\n        {\n          Key: entree\n        }])\n      }));\n      this.getPhotographers(this.state.photographerKeys);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    this.state.cards = this.state.photographers.map(Photographer => {\n      return /*#__PURE__*/React.createElement(Col, {\n        lg: \"auto\",\n        sm: \"auto\",\n        md: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(PhotographersCard, {\n        Photographer: Photographer,\n        levelOfPhotographer: this.state.levelOfPhotographer,\n        lowerRange: this.state.lowerRange,\n        upperRange: this.state.upperRange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, this.jumbotronCode(), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Filter, {\n      handleClick: this.handleClick,\n      handleRangeChange: this.handleRangeChange,\n      handleSortby: this.handleSortby,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      lg: \"auto\",\n      sm: \"auto\",\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, this.state.cards)));\n  }\n\n}\n\nexport default PhotographerSelection;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/src/components/photographersSelection.jsx"],"names":["React","Component","Recphoto","Container","Row","Col","axios","PhotographersCard","Filter","PhotographerSelection","constructor","props","state","photographers","categoryKey","match","params","id","photographerKeys","levelOfPhotographer","cards","lowerRange","upperRange","min","max","jumbotronCode","bind","getPhotographers","handleClick","handleRangeChange","handleSortby","backgroundImage","paddingTop","padding","paddingBottom","backgroundPosition","backgroundSize","backgroundRepeat","width","height","map","photographerKey","get","Key","then","res","setState","concat","data","_id","name","Name","level","Level","range","Range","rangeNumber","catch","error","console","log","Math","item","event","target","value","sort","a","b","componentDidUpdate","componentDidMount","entree","render","Photographer"],"mappings":"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","sourcesContent":["//Comments by Faraz, please contact him in case of queries\n\nimport React, { Component } from \"react\";\nimport Recphoto from \"../assets/Recommend.jpg\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport axios from \"axios\";\nimport PhotographersCard from \"./photographersCard\";\nimport Filter from \"./filter\";\n\nclass PhotographerSelection extends Component {\n  constructor(props) {\n    // constructor\n    super(props);\n    this.state = {\n      photographers: [],\n      categoryKey: this.props.match.params.id, //to catch the Category ID recieved from previous page use console.log(this.props) to see props coming from previous pages\n      photographerKeys: [],\n      levelOfPhotographer: \"All\",\n      cards: [],\n      lowerRange: 0,\n      upperRange: 300000,\n      min: 0,\n      max: 10000000,\n    };\n\n    this.jumbotronCode = this.jumbotronCode.bind(this); //renders the jumbotron\n    this.getPhotographers = this.getPhotographers.bind(this); //gets the photographer profiles of that particular category clicked\n    this.handleClick = this.handleClick.bind(this);\n    this.handleRangeChange = this.handleRangeChange.bind(this);\n    this.handleSortby = this.handleSortby.bind(this);\n  }\n\n  jumbotronCode() {\n    return (\n      <div\n        style={{\n          backgroundImage: \"url(\" + Recphoto + \")\",\n          paddingTop: 50,\n          padding: 50,\n          paddingBottom: 50,\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n          width: \"100vw\",\n          height: \"70vh\",\n        }}\n        className=\"jumbotron jumbotron-fluid\"\n        className=\"text-right p-5\"\n      >\n        <div className=\"container\">\n          <h1\n            className=\"display-4\"\n            className=\"text-center text-white pr-auto pt-auto pb-auto mt-auto\"\n          >\n            Wedding\n          </h1>\n          <p\n            className=\"lead medium\"\n            className=\"text-center text-white pr-auto mt-auto\"\n          >\n            Fill the form below and we will get back to you with a<br />\n            photographer that best suits your needs. You'll have a<br />\n            photographer in less than 24 hours!\n            <br />\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  getPhotographers(photographerKeys) {\n    photographerKeys.map((photographerKey) => {\n      axios //sending a get request to get all the photographers of the category from Mongo\n        .get(\"http://localhost:5000/photographers/\" + photographerKey.Key)\n        .then((res) => {\n          this.setState({\n            photographers: this.state.photographers.concat([\n              //storing all the photographer ids and their name values in my local state array\n              {\n                Key: res.data._id,\n                name: res.data.Name,\n                level: res.data.Level,\n                range: res.data.Range,\n                rangeNumber:\n                  res.data.Range === \"Silver\"\n                    ? 0\n                    : \"Gold\"\n                    ? 1\n                    : \"Platinum\"\n                    ? 2\n                    : -1,\n              },\n            ]),\n          });\n          // console.log(this.state.photographers);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    });\n    this.setState({\n      min: Math.min(...this.state.photographers.map((item) => item.range)),\n      max: Math.max(...this.state.photographers.map((item) => item.range)),\n    });\n  }\n\n  handleClick(event) {\n    this.setState({ levelOfPhotographer: event.target.value });\n  }\n\n  handleRangeChange(event) {\n    this.setState({ lowerRange: event[0], upperRange: event[1] });\n  }\n\n  handleSortby(event) {\n    console.log(event.target.id);\n    if (event.target.id == 0) {\n      console.log(\"a\");\n      this.setState({\n        photographers: this.state.photographers.range.sort((a, b) =>\n          a.range > b.range ? 1 : -1\n        ),\n      });\n    }\n  }\n  componentDidUpdate() {\n    console.log(this.state.photographers);\n    // console.log(this.state.levelOfPhotographer);\n  }\n  componentDidMount() {\n    //function runs at the start of component loading\n    axios //sending a get request to get all the photographers of the category from Mongo\n      .get(\"http://localhost:5000/categories/\" + this.state.categoryKey)\n      .then((res) => {\n        res.data.photographers.map((entree) =>\n          this.setState({\n            photographerKeys: this.state.photographerKeys.concat([\n              //storing all the photographer ids of a particular category in my local state array\n              {\n                Key: entree,\n              },\n            ]),\n          })\n        );\n        this.getPhotographers(this.state.photographerKeys);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  render() {\n    this.state.cards = this.state.photographers.map((Photographer) => {\n      return (\n        <Col lg=\"auto\" sm=\"auto\" md=\"auto\">\n          <PhotographersCard\n            Photographer={Photographer}\n            levelOfPhotographer={this.state.levelOfPhotographer}\n            lowerRange={this.state.lowerRange}\n            upperRange={this.state.upperRange}\n          />\n        </Col>\n      );\n    });\n    return (\n      <React.Fragment>\n        {this.jumbotronCode()}\n        <Container fluid>\n          <Filter\n            handleClick={this.handleClick}\n            handleRangeChange={this.handleRangeChange}\n            handleSortby={this.handleSortby}\n          />\n        </Container>\n        <Container fluid>\n          {/* For a responsive grid all things set to auto */}\n          <Row lg=\"auto\" sm=\"auto\" md=\"auto\">\n            {/* loading the card component in the grid from PhotographersCard */}\n            {this.state.cards}\n          </Row>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PhotographerSelection;\n"]},"metadata":{},"sourceType":"module"}