{"ast":null,"code":"import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7MessagebarAttachment extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onClick', 'onDeleteClick']);\n    })();\n  }\n\n  onClick(event) {\n    this.dispatchEvent('attachment:click attachmentClick', event);\n  }\n\n  onDeleteClick(event) {\n    this.dispatchEvent('attachment:delete attachmentDelete', event);\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      deletable,\n      image,\n      className,\n      id,\n      style\n    } = props;\n    const classes = Utils.classNames(className, 'messagebar-attachment', Mixins.colorClasses(props));\n    return React.createElement('div', {\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      id: id,\n      style: style,\n      className: classes\n    }, image && React.createElement('img', {\n      src: image\n    }), deletable && React.createElement('span', {\n      ref: __reactNode => {\n        this.__reactRefs['deleteEl'] = __reactNode;\n      },\n      className: 'messagebar-attachment-delete'\n    }), this.slots['default']);\n  }\n\n  componentWillUnmount() {\n    this.refs.el.removeEventListener('click', this.onClick);\n\n    if (this.refs.deleteEl) {\n      this.refs.deleteEl.removeEventListener('click', this.onDeleteClick);\n    }\n  }\n\n  componentDidMount() {\n    this.refs.el.addEventListener('click', this.onClick);\n\n    if (this.refs.deleteEl) {\n      this.refs.deleteEl.addEventListener('click', this.onDeleteClick);\n    }\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7MessagebarAttachment, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  image: String,\n  deletable: {\n    type: Boolean,\n    default: true\n  }\n}, Mixins.colorProps));\n\nF7MessagebarAttachment.displayName = 'f7-messagebar-attachment';\nexport default F7MessagebarAttachment;","map":{"version":3,"sources":["/home/faraz/courses/SE/myapp/node_modules/framework7-react/components/messagebar-attachment.js"],"names":["React","Utils","Mixins","__reactComponentDispatchEvent","__reactComponentSlots","__reactComponentSetProps","F7MessagebarAttachment","Component","constructor","props","context","__reactRefs","bindMethods","onClick","event","dispatchEvent","onDeleteClick","render","self","deletable","image","className","id","style","classes","classNames","colorClasses","createElement","ref","__reactNode","src","slots","componentWillUnmount","refs","el","removeEventListener","deleteEl","componentDidMount","addEventListener","events","args","Object","assign","String","Number","type","Boolean","default","colorProps","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentDispatchEvent from '../runtime-helpers/react-component-dispatch-event.js';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nclass F7MessagebarAttachment extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.__reactRefs = {};\n\n    (() => {\n      Utils.bindMethods(this, ['onClick', 'onDeleteClick']);\n    })();\n  }\n\n  onClick(event) {\n    this.dispatchEvent('attachment:click attachmentClick', event);\n  }\n\n  onDeleteClick(event) {\n    this.dispatchEvent('attachment:delete attachmentDelete', event);\n  }\n\n  render() {\n    const self = this;\n    const props = self.props;\n    const {\n      deletable,\n      image,\n      className,\n      id,\n      style\n    } = props;\n    const classes = Utils.classNames(className, 'messagebar-attachment', Mixins.colorClasses(props));\n    return React.createElement('div', {\n      ref: __reactNode => {\n        this.__reactRefs['el'] = __reactNode;\n      },\n      id: id,\n      style: style,\n      className: classes\n    }, image && React.createElement('img', {\n      src: image\n    }), deletable && React.createElement('span', {\n      ref: __reactNode => {\n        this.__reactRefs['deleteEl'] = __reactNode;\n      },\n      className: 'messagebar-attachment-delete'\n    }), this.slots['default']);\n  }\n\n  componentWillUnmount() {\n    this.refs.el.removeEventListener('click', this.onClick);\n\n    if (this.refs.deleteEl) {\n      this.refs.deleteEl.removeEventListener('click', this.onDeleteClick);\n    }\n  }\n\n  componentDidMount() {\n    this.refs.el.addEventListener('click', this.onClick);\n\n    if (this.refs.deleteEl) {\n      this.refs.deleteEl.addEventListener('click', this.onDeleteClick);\n    }\n  }\n\n  get slots() {\n    return __reactComponentSlots(this.props);\n  }\n\n  dispatchEvent(events, ...args) {\n    return __reactComponentDispatchEvent(this, events, ...args);\n  }\n\n  get refs() {\n    return this.__reactRefs;\n  }\n\n  set refs(refs) {}\n\n}\n\n__reactComponentSetProps(F7MessagebarAttachment, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  image: String,\n  deletable: {\n    type: Boolean,\n    default: true\n  }\n}, Mixins.colorProps));\n\nF7MessagebarAttachment.displayName = 'f7-messagebar-attachment';\nexport default F7MessagebarAttachment;"]},"metadata":{},"sourceType":"module"}