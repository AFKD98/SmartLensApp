{"ast":null,"code":"var _jsxFileName = \"C:\\\\haider\\\\sem8\\\\SE\\\\SE_project\\\\SmartLensApp\\\\client\\\\src\\\\components\\\\photographersSelection.jsx\";\n//Comments by Faraz, please contact him in case of queries...marzi hai faraz sb\nimport React, { Component } from \"react\";\nimport Recphoto from \"../assets/Recommend.jpg\"; // import Container from \"react-bootstrap/Container\";\n\nimport Row from \"react-bootstrap/Row\"; // import Col from \"react-bootstrap/Col\";\n\nimport axios from \"axios\";\nimport PhotographersCard from \"./photographersCard\";\nimport Filter from \"./filter\";\nimport \"../styles/photographersSelection.css\";\n\nclass PhotographerSelection extends Component {\n  constructor(props) {\n    // constructor\n    super(props);\n    this.state = {\n      photographers: [],\n      categoryKey: this.props.match.params.id,\n      //to catch the Category ID recieved from previous page use console.log(this.props) to see props coming from previous pages\n      photographerKeys: [],\n      levelOfPhotographer: \"All\",\n      cards: [],\n      lowerRange: 0,\n      upperRange: 300000,\n      min: 0,\n      max: 10000000,\n      categoryName: \"\"\n    };\n    this.jumbotronCode = this.jumbotronCode.bind(this); //renders the jumbotron\n\n    this.getPhotographers = this.getPhotographers.bind(this); //gets the photographer profiles of that particular category clicked\n    // this.getCards = this.getCards.bind(this);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleRangeChange = this.handleRangeChange.bind(this);\n    this.handleSortby = this.handleSortby.bind(this);\n  }\n\n  jumbotronCode() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundImage: \"url(\" + Recphoto + \")\",\n        paddingTop: 50,\n        padding: 50,\n        paddingBottom: 50,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        height: \"40vh\"\n      },\n      className: \"jumbotron jumbotron-fluid pb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-3 text-center mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, this.state.categoryName)));\n  }\n\n  getPhotographers(photographerKeys) {\n    photographerKeys.map(photographerKey => {\n      axios //sending a get request to get all the photographers of the category from Mongo\n      .get(\"http://localhost:5000/photographers/\" + photographerKey.id).then(res => {\n        this.setState({\n          photographers: this.state.photographers.concat([//storing all the photographer ids and their name values in my local state array\n          {\n            key: res.data._id,\n            id: res.data._id,\n            name: res.data.Name,\n            level: res.data.Level,\n            range: res.data.Range,\n            rangeNumber: res.data.Range === \"Silver\" ? 0 : \"Gold\" ? 1 : \"Platinum\" ? 2 : -1\n          }])\n        }); // console.log(this.state.photographers);\n      }).catch(error => {\n        console.log(error);\n      });\n    }); // this.setState({\n    //   min: Math.min(...this.state.photographers.map((item) => item.range)),\n    //   max: Math.max(...this.state.photographers.map((item) => item.range)),\n    // });\n  }\n\n  handleClick(event) {\n    //for setting level filter\n    this.setState({\n      levelOfPhotographer: event.target.value\n    });\n  }\n\n  handleRangeChange(event) {\n    //for setting range filter\n    this.setState({\n      lowerRange: event[0],\n      upperRange: event[1]\n    });\n  }\n\n  handleSortby(event) {\n    //sort by function is sorting properly but something wrong when rendering probably cause setstate is async\n    if (event.target.id === 0) {\n      this.setState({\n        photographers: this.state.photographers.sort((a, b) => a.range > b.range ? 1 : -1)\n      });\n    }\n  }\n\n  componentDidUpdate() {// console.log(this.state.photographers);\n    // console.log(this.state.min, this.state.max);\n  }\n\n  componentDidMount() {\n    //function runs at the start of component loading\n    axios //sending a get request to get all the photographers of the category from Mongo\n    .get(\"http://localhost:5000/categories/\" + this.state.categoryKey).then(res => {\n      res.data.photographers.map(entree => this.setState({\n        photographerKeys: this.state.photographerKeys.concat([//storing all the photographer ids of a particular category in my local state array\n        {\n          key: entree,\n          id: entree\n        }]),\n        categoryName: res.data.categoryname\n      }));\n      this.getPhotographers(this.state.photographerKeys);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    // console.log(this.state.photographers);\n    let cards = this.state.photographers.map(Photographer => {\n      //cards that we render from the cards component\n      return /*#__PURE__*/React.createElement(PhotographersCard, {\n        key: Photographer.id,\n        id: Photographer.id,\n        Photographer: Photographer,\n        levelOfPhotographer: this.state.levelOfPhotographer,\n        lowerRange: this.state.lowerRange,\n        upperRange: this.state.upperRange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }, this.jumbotronCode(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container rangetext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Filter //contains the level and range filter\n    , {\n      handleClick: this.handleClick,\n      handleRangeChange: this.handleRangeChange,\n      handleSortby: this.handleSortby,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"pb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, cards)));\n  }\n\n}\n\nexport default PhotographerSelection;","map":{"version":3,"sources":["C:/haider/sem8/SE/SE_project/SmartLensApp/client/src/components/photographersSelection.jsx"],"names":["React","Component","Recphoto","Row","axios","PhotographersCard","Filter","PhotographerSelection","constructor","props","state","photographers","categoryKey","match","params","id","photographerKeys","levelOfPhotographer","cards","lowerRange","upperRange","min","max","categoryName","jumbotronCode","bind","getPhotographers","handleClick","handleRangeChange","handleSortby","backgroundImage","paddingTop","padding","paddingBottom","backgroundPosition","backgroundSize","backgroundRepeat","height","map","photographerKey","get","then","res","setState","concat","key","data","_id","name","Name","level","Level","range","Range","rangeNumber","catch","error","console","log","event","target","value","sort","a","b","componentDidUpdate","componentDidMount","entree","categoryname","render","Photographer"],"mappings":"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","sourcesContent":["//Comments by Faraz, please contact him in case of queries...marzi hai faraz sb\r\n\r\nimport React, { Component } from \"react\";\r\nimport Recphoto from \"../assets/Recommend.jpg\";\r\n// import Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n// import Col from \"react-bootstrap/Col\";\r\nimport axios from \"axios\";\r\nimport PhotographersCard from \"./photographersCard\";\r\nimport Filter from \"./filter\";\r\nimport \"../styles/photographersSelection.css\";\r\n\r\nclass PhotographerSelection extends Component {\r\n  constructor(props) {\r\n    // constructor\r\n    super(props);\r\n    this.state = {\r\n      photographers: [],\r\n      categoryKey: this.props.match.params.id, //to catch the Category ID recieved from previous page use console.log(this.props) to see props coming from previous pages\r\n      photographerKeys: [],\r\n      levelOfPhotographer: \"All\",\r\n      cards: [],\r\n      lowerRange: 0,\r\n      upperRange: 300000,\r\n      min: 0,\r\n      max: 10000000,\r\n      categoryName: \"\",\r\n    };\r\n\r\n    this.jumbotronCode = this.jumbotronCode.bind(this); //renders the jumbotron\r\n    this.getPhotographers = this.getPhotographers.bind(this); //gets the photographer profiles of that particular category clicked\r\n    // this.getCards = this.getCards.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleRangeChange = this.handleRangeChange.bind(this);\r\n    this.handleSortby = this.handleSortby.bind(this);\r\n  }\r\n\r\n  jumbotronCode() {\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundImage: \"url(\" + Recphoto + \")\",\r\n          paddingTop: 50,\r\n          padding: 50,\r\n          paddingBottom: 50,\r\n          backgroundPosition: \"center\",\r\n          backgroundSize: \"cover\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          height: \"40vh\",\r\n        }}\r\n        className=\"jumbotron jumbotron-fluid pb-5\"\r\n      >\r\n        <div className=\"container\">\r\n          <h1 className=\"display-3 text-center mt-5\">\r\n            {this.state.categoryName}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getPhotographers(photographerKeys) {\r\n    photographerKeys.map((photographerKey) => {\r\n      axios //sending a get request to get all the photographers of the category from Mongo\r\n        .get(\"http://localhost:5000/photographers/\" + photographerKey.id)\r\n        .then((res) => {\r\n          this.setState({\r\n            photographers: this.state.photographers.concat([\r\n              //storing all the photographer ids and their name values in my local state array\r\n              {\r\n                key: res.data._id,\r\n                id: res.data._id,\r\n                name: res.data.Name,\r\n                level: res.data.Level,\r\n                range: res.data.Range,\r\n                rangeNumber:\r\n                  res.data.Range === \"Silver\"\r\n                    ? 0\r\n                    : \"Gold\"\r\n                    ? 1\r\n                    : \"Platinum\"\r\n                    ? 2\r\n                    : -1,\r\n              },\r\n            ]),\r\n          });\r\n          // console.log(this.state.photographers);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    });\r\n    // this.setState({\r\n    //   min: Math.min(...this.state.photographers.map((item) => item.range)),\r\n    //   max: Math.max(...this.state.photographers.map((item) => item.range)),\r\n    // });\r\n  }\r\n  handleClick(event) {\r\n    //for setting level filter\r\n    this.setState({ levelOfPhotographer: event.target.value });\r\n  }\r\n\r\n  handleRangeChange(event) {\r\n    //for setting range filter\r\n    this.setState({ lowerRange: event[0], upperRange: event[1] });\r\n  }\r\n\r\n  handleSortby(event) {\r\n    //sort by function is sorting properly but something wrong when rendering probably cause setstate is async\r\n    if (event.target.id === 0) {\r\n      this.setState({\r\n        photographers: this.state.photographers.sort((a, b) =>\r\n          a.range > b.range ? 1 : -1\r\n        ),\r\n      });\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    // console.log(this.state.photographers);\r\n    // console.log(this.state.min, this.state.max);\r\n  }\r\n  componentDidMount() {\r\n    //function runs at the start of component loading\r\n    axios //sending a get request to get all the photographers of the category from Mongo\r\n      .get(\"http://localhost:5000/categories/\" + this.state.categoryKey)\r\n      .then((res) => {\r\n        res.data.photographers.map((entree) =>\r\n          this.setState({\r\n            photographerKeys: this.state.photographerKeys.concat([\r\n              //storing all the photographer ids of a particular category in my local state array\r\n              {\r\n                key: entree,\r\n                id: entree,\r\n              },\r\n            ]),\r\n            categoryName: res.data.categoryname,\r\n          })\r\n        );\r\n        this.getPhotographers(this.state.photographerKeys);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  render() {\r\n    // console.log(this.state.photographers);\r\n    let cards = this.state.photographers.map((Photographer) => {\r\n      //cards that we render from the cards component\r\n      return (\r\n        <PhotographersCard\r\n          key={Photographer.id}\r\n          id={Photographer.id}\r\n          Photographer={Photographer}\r\n          levelOfPhotographer={this.state.levelOfPhotographer}\r\n          lowerRange={this.state.lowerRange}\r\n          upperRange={this.state.upperRange}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <React.Fragment>\r\n        {this.jumbotronCode()}\r\n        <div className=\"container rangetext\">\r\n          <Filter //contains the level and range filter\r\n            handleClick={this.handleClick}\r\n            handleRangeChange={this.handleRangeChange}\r\n            handleSortby={this.handleSortby}\r\n          />\r\n          {/* For a responsive grid all things set to auto */}\r\n          <Row className=\"pb-5\">\r\n            {/* loading the card component in the grid from PhotographersCard */}\r\n            {cards}\r\n          </Row>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhotographerSelection;\r\n"]},"metadata":{},"sourceType":"module"}